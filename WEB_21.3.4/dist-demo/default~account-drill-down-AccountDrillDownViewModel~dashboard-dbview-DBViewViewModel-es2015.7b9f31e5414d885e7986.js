(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{APT5:function(e,t,o){"use strict";o.r(t),o.d(t,"AccountDrillDownViewModel",(function(){return A}));var s=o("Do2H"),a=o("Lp6j"),i=o("dH+5"),n=o("mvPR"),l=o("EQd/"),r=o("ThYU"),D=o("Agar"),h=o("ScVY"),c=o("0/4Q"),u=o("CUWK"),C=o("GYN/"),T=o("MCLT");class A extends h.b{constructor(e,t=null){super(),this.NodeID=0,this.ReportGridObj=new C.a,this.MonthlyData=new Array,this.DailyData=new Array,this.VoucherData=new Array,this._MonthlyVisible=!1,this._DailyVisible=!1,this._VoucherVisible=!1,this.OpeningBalance=new l.d(0),this.MonthlyOpening="",this.IsLocationVisible=!1,this.Parent=null,this.Widget=null,this.WidgetVisible=!1,this.ShowWizard=!1,this.Accounts=new c.e(0),this.BackButtonVisible=!1,this.HeaderAppearance=new n.a,this.TextDataAppearance=new n.a,this.NumberDataAppearance=new n.a,this.CrDrNumberDataAppearance=new n.a,this.GrossTotalAppearance=new n.a,this.GrossTotalAppearance_Data=new n.a,this.BalanceFormat=new n.b,this.DrCrFormat=new n.b,this.PDCInclude=!0,this.IncludeUnPostedDocs=!0,this.IncludeTerminatedPDC=!0,this.UnPostedDocsList="",this.ReportGridObj.RowDblClick.Subscribe(this,"OnRowDoubleClick"),this.ReportGridObj.DataClick.Subscribe(this,"OnDataClick"),this.Accounts.Visible=!1,Logger.InfoLog("AccountDrillDownViewModel::Entering AccountDrillDownViewModel"),null!=e?(this.Report=e,this.BackTrackType=e.BackTrackType,this.Preferences=e.Preferences,this.FromDate=e.oReportDialog.FromDate,this.ToDate=e.oReportDialog.ToDate,this.IsLocationVisible=e.oReportDialog.Locations.Visible,this.ReportLocationWhere=e.oReportDialog.LocationWhere):(this.WidgetVisible=!0,this.Widget=t,this.BackTrackType="Widget"),this.Accounts.SelectionChangedCommand.Subscribe(this,"AccountSelectionChanged"),null!=this.Preferences&&(this.PDCInclude=!this.Preferences.ContainsKey("IncludePDCs")||"0"!=this.Preferences.IncludePDCs,this.IncludeTerminatedPDC=!this.Preferences.ContainsKey("IncludeTerminatedPDC")||"0"!=this.Preferences.IncludeTerminatedPDC,this.IncludeUnPostedDocs=!this.Preferences.ContainsKey("IncludeUnPostedDocs")||"0"!=this.Preferences.IncludeUnPostedDocs,this.IncludeUnPostedDocs&&this.Preferences.ContainsKey("IncludeUnPostedDocsList")&&(this.UnPostedDocsList=this.Preferences.ContainsKey("IncludeUnPostedDocsList")?this.Preferences.IncludeUnPostedDocsList:"")),this.InitControls(),Logger.InfoLog("AccountDrillDownViewModel::Exiting BRSViewModel")}get MonthlyVisible(){return this._MonthlyVisible}set MonthlyVisible(e){this._MonthlyVisible=e,e&&(this.ReportGridObj.Data=this.MonthlyData,this.ReportGridObj.ReportColumns=this.MonthlyColumns,this.ReportGridObj.RefreshColumns())}get DailyVisible(){return this._DailyVisible}set DailyVisible(e){this._DailyVisible=e,e&&(this.ReportGridObj.Data=this.DailyData,this.ReportGridObj.ReportColumns=this.DailyColumns,this.ReportGridObj.RefreshColumns())}get VoucherVisible(){return this._VoucherVisible}set VoucherVisible(e){this._VoucherVisible=e,e&&(this.ReportGridObj.Data=this.VoucherData,this.ReportGridObj.ReportColumns=this.VoucherColumns,this.ReportGridObj.RefreshColumns())}ReLoadData(e,t,o,s){this.MessageVisibility=!1,this.DisplayMessage="",this.NodeID=e,this.BackTrackType=this.Report.BackTrackType,this.Preferences=this.Report.Preferences,this.FromDate=this.Report.oReportDialog.FromDate,this.ToDate=this.Report.oReportDialog.ToDate,this.IsLocationVisible=this.Report.oReportDialog.Locations.Visible,this.ReportLocationWhere=this.Report.oReportDialog.LocationWhere,this.SetVisibilty(0),this.LoadData(),t>0&&e!=t&&(this.Accounts.Visible=!0,this.Accounts.Items.Clear(),this.Accounts.Items.push(c.d.ComboBoxItems_2(o,e.toString())),this.Accounts.Items.push(c.d.ComboBoxItems_2(s,t.toString())),this.Accounts.SelectedValue=this.Accounts.Items[0].Value)}AccountSelectionChanged(e){this.Accounts.Visible&&null!=this.Accounts.SelectedValue&&null!=e&&(this.NodeID=parseInt(this.Accounts.SelectedValue),this.LoadData())}InitControls(){let e;this.NetBalance=new D.a,this.OutStandingDr=new D.a,this.OutStandingCr=new D.a,this.NetClearBalance=new D.a,this.NetBalance.Label=s.a.GetResource("Reports_NetBalance"),this.OutStandingDr.Label=s.a.GetResource("Reports_OutStandingDr"),this.OutStandingCr.Label=s.a.GetResource("Reports_OutStandingCr"),this.NetClearBalance.Label=s.a.GetResource("Reports_NetClearBalance"),this.HeaderAppearance.Alignment="Left",this.HeaderAppearance.FontSize=12,this.HeaderAppearance.IsBold=!0,this.HeaderAppearance.BackColor="White",this.HeaderAppearance.ForeColor="Black",this.TextDataAppearance.Alignment="Left",this.TextDataAppearance.FontSize=12,this.TextDataAppearance.BackColor="White",this.TextDataAppearance.ForeColor="Black",this.NumberDataAppearance.Alignment="Right",this.NumberDataAppearance.FontSize=12,this.NumberDataAppearance.BackColor="White",this.NumberDataAppearance.ForeColor="Black",this.GrossTotalAppearance.IsBold=!0,this.GrossTotalAppearance.ForeColor="#FF000000",this.GrossTotalAppearance.BackColor="White",this.GrossTotalAppearance_Data.IsBold=!0,this.GrossTotalAppearance_Data.ForeColor="#FF000000",this.GrossTotalAppearance_Data.BackColor="White",this.GrossTotalAppearance_Data.Alignment="Right",this.BalanceFormat.DecimalsPoints=parseInt(s.a.SessionManager.Preferences.DecimalsinAmount),this.BalanceFormat.NegativeNumber=4,this.BalanceFormat.ShowDefaultSign=1,this.DrCrFormat.DecimalsPoints=parseInt(s.a.SessionManager.Preferences.DecimalsinAmount),this.DrCrFormat.NegativeNumber=0,this.DrCrFormat.ShowDefaultSign=0,"Millions"==s.a.SessionManager.Preferences.Commas?(this.BalanceFormat.Commas=1,this.DrCrFormat.Commas=1):"Lakhs"==s.a.SessionManager.Preferences.Commas&&(this.BalanceFormat.Commas=2,this.DrCrFormat.Commas=2),null!=this.Widget?(this.BackButtonVisible=!1,this.MonthlyVisible=!1,this.DailyVisible=!1,this.VoucherVisible=!0,this.VoucherColumns=new Array,e=this.GetColumn("Sno","Sno","STRING",this.TextDataAppearance,40),e.HeaderText="Sno",this.VoucherColumns.push(e),e=this.GetColumn("DocDate","Date","DATE",this.TextDataAppearance,100),e.HeaderText="Doc Date",this.VoucherColumns.push(e),e=this.GetColumn("VoucherNo","VoucherNo","STRING",this.TextDataAppearance,130),e.HeaderText="Doc No",e.LinkType=i.a.Document,this.VoucherColumns.push(e),e=this.GetColumn("Quantity","Qty","FLOAT",this.NumberDataAppearance,100),e.HeaderText="Quantity",e.DataFormat.DecimalsPoints=parseInt(s.a.SessionManager.Preferences.DecimalsinQty),this.VoucherColumns.push(e),"23"==this.Widget.CallStatusID&&(e=this.GetColumn("ExeQty","Ex. Qty","FLOAT",this.NumberDataAppearance,115),e.HeaderText="Executed Qty",e.DataFormat.DecimalsPoints=parseInt(s.a.SessionManager.Preferences.DecimalsinQty),this.VoucherColumns.push(e))):(this.MonthlyColumns=new Array,e=this.GetColumn("MonthName","Doc_Month","STRING",this.TextDataAppearance,90),this.MonthlyColumns.push(e),e=this.GetColumn("YearName","Doc_Year","STRING",this.TextDataAppearance,55),this.MonthlyColumns.push(e),"Account"==this.BackTrackType?(e=this.GetColumn("OpBalance","Op.Balance","FLOAT",this.NumberDataAppearance,120),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.MonthlyColumns.push(e),e=this.GetColumn("Dr","DocumentDesigner_DisplayDebit","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Cr","DocumentDesigner_DisplayCredit","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Balance","Service_Balance","FLOAT",this.NumberDataAppearance,130),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.MonthlyColumns.push(e)):"Product"==this.BackTrackType&&(e=this.GetColumn("OpStock","Reports_LblOpStock","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Receipt","DocumentDesigner_Receipt","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Issue","Reports_LblIssue","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Closing","Reports_LblClosing","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e)),this.DailyColumns=new Array,e=this.GetColumn("Date","Service_Date","DATE",this.TextDataAppearance,110),this.DailyColumns.push(e),"Account"==this.BackTrackType?(e=this.GetColumn("OpBalance","Op.Balance","FLOAT",this.NumberDataAppearance,120),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.DailyColumns.push(e),e=this.GetColumn("Dr","DocumentDesigner_DisplayDebit","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Cr","DocumentDesigner_DisplayCredit","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Balance","Service_Balance","FLOAT",this.NumberDataAppearance,120),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.DailyColumns.push(e)):"Product"==this.BackTrackType&&(e=this.GetColumn("OpStock","Reports_LblOpStock","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Receipt","DocumentDesigner_Receipt","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Issue","Reports_LblIssue","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Closing","Reports_LblClosing","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e)),this.VoucherColumns=new Array,e=this.GetColumn("VoucherNo","Doc_DocumentNumber","STRING",this.TextDataAppearance,120),e.LinkType=i.a.Document,this.VoucherColumns.push(e),"Account"==this.BackTrackType?(e=this.GetColumn("Dr","DocumentDesigner_DisplayDebit","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e),e=this.GetColumn("Cr","DocumentDesigner_DisplayCredit","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e)):"Product"==this.BackTrackType&&(e=this.GetColumn("Receipt","DocumentDesigner_Receipt","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e),e=this.GetColumn("Issue","Reports_LblIssue","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e)))}GetColumn(e,t,o,a,l){let r=new n.b;"Account"==this.BackTrackType?r.DecimalsPoints=parseInt(s.a.SessionManager.Preferences.DecimalsinAmount):"Product"==this.BackTrackType&&(r.DecimalsPoints=parseInt(s.a.SessionManager.Preferences.DecimalsinQty)),"Millions"==s.a.SessionManager.Preferences.Commas?r.Commas=1:"Lakhs"==s.a.SessionManager.Preferences.Commas&&(r.Commas=2),r.DateType=s.a.SessionManager.Preferences["Date Format"];let D=new i.b;return D.gridLines=3,D.ID=e,D.FieldName=e,D.HeaderText=s.a.GetResource(t),D.HeaderAppearance=a,D.DataAppearance=a,D.HeaderHeight=22,D.width=l,D.DataFormat=r,D.ColumnType=o,D}OnButtonClick(e){if(this.DisplayMessage="","Close"==e)null!=this.Widget?s.a.page.HideDialog():(this.Accounts.Visible=!1,this.Parent.ShowAccountDrillDown=!1);else if("BACK"==e)this.DailyVisible?this.SetVisibilty(0):this.VoucherVisible&&this.SetVisibilty(1);else if("CLEAR"==e);else if("Export"==e){let e=new r.ReportViewModel;e.ReportColumns=this.ReportGridObj.ReportColumns,e.Data=this.ReportGridObj.Data,e.ScreenName="";let t={};e.Reportds={Tables:[],Columns:[]},e.Reportds.Tables.push([t]),this.ExportFile("Print",e)}}ExportFile(e,t){this.DisplayMessage="Print"==e?"Printing data please wait...":"Exporting data please wait...";let o={};t.InitPrintOrExport(o),o.Type=e,o.PrintDataOnSeperatePageBy=this.Preferences.ContainsKey("PrintDataOnSeperatePageBy")?this.Preferences.PrintDataOnSeperatePageBy:"","PDF"==e?o.lst=[]:"Print"==e?(o.lst=[],o.Type="PDF"):"Excel"!=e&&"OpenXML"!=e||(o.lst=[]),o.al="al",s.a.report.ExportReport(t.Data,t.ReportColumns,o,"AccDrillDown").subscribe(t=>{console.log(t),"Print"==e?s.a.SessionManager.printTab(t.FileName):(s.a.SessionManager.Download(t.FileName,"khasim"),a.e.IsEmpty(t.Message)&&!a.e.IsEmpty(t.FileName)&&(this.DisplayMessage="Exported Successfully"))},e=>{console.log(e)})}LoadData(){let e=0,t=0,o=0,i=0,l="";"Account"==this.BackTrackType?l=this.GetAccountQuery():"Product"==this.BackTrackType&&(l=this.GetProductQuery());let r=s.a.report.ReportDataSet("RPT022",null!=this.Report&&this.Report.IsReportDB,l);if(this.MonthlyVisible){if("Account"==this.BackTrackType){r.Tables.length>1&&r.Tables[1].length>0&&(o=a.e.Double(r.Tables[1][0].Opening)),this.OpeningBalance.Label=s.a.GetResource("Reports_OpeningBalance");let l=new n.c;this.SetCellValue(o,this.BalanceFormat,"FLOAT",l),this.OpeningBalance.Text=this.MonthlyOpening=l.Text,r.Tables.length>2&&r.Tables[2].length>0&&(this.AccountName="["+r.Tables[2][0].AccountName.toString()+"]"),this.MonthlyData.Clear(),r.Tables[0].forEach(a=>{this.oRow=new n.d(this.MonthlyColumns.length,22),this.oRow.Height=20,this.SetCellValue(a.MonthName,this.MonthlyColumns[0].DataFormat,this.MonthlyColumns[0].ColumnType,this.oRow.Cells[0]),this.SetCellValue(a.YearName,this.MonthlyColumns[1].DataFormat,this.MonthlyColumns[1].ColumnType,this.oRow.Cells[1]),this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,this.MonthlyColumns[2].ColumnType,this.oRow.Cells[2]),i=parseFloat(a.DiffDrCr),i>=0?(this.SetCellValue(i,this.MonthlyColumns[3].DataFormat,this.MonthlyColumns[3].ColumnType,this.oRow.Cells[3]),t+=i):(this.SetCellValue(-i,this.MonthlyColumns[4].DataFormat,this.MonthlyColumns[4].ColumnType,this.oRow.Cells[4]),e+=-i),o+=i,this.SetCellValue(o,this.MonthlyColumns[5].DataFormat,this.MonthlyColumns[5].ColumnType,this.oRow.Cells[5]),this.oRow.NodeID=parseInt(a.mn),this.oRow.id=s.a.slick.rowid,this.MonthlyData.push(this.oRow)})}else if("Product"==this.BackTrackType){r.Tables.length>1&&r.Tables[1].length>0&&(o=a.e.Double(r.Tables[1][0].Opening)),this.OpeningBalance.Label=s.a.GetResource("Reports_LblOpeningStock");let l=new n.c;this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,"FLOAT",l),this.OpeningBalance.Text=this.MonthlyOpening=l.Text,r.Tables.length>2&&r.Tables[2].length>0&&(this.AccountName="["+r.Tables[2][0].ProductName.toString()+"]"),this.MonthlyData.Clear(),r.Tables[0].forEach(l=>{this.oRow=new n.d(this.MonthlyColumns.length,22),this.oRow.Height=20,this.SetCellValue(l.MonthName,this.MonthlyColumns[0].DataFormat,this.MonthlyColumns[0].ColumnType,this.oRow.Cells[0]),this.SetCellValue(l.YearName,this.MonthlyColumns[1].DataFormat,this.MonthlyColumns[1].ColumnType,this.oRow.Cells[1]),this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,this.MonthlyColumns[2].ColumnType,this.oRow.Cells[2]),i=a.e.Double(l.Receipt),this.SetCellValue(i,this.MonthlyColumns[3].DataFormat,this.MonthlyColumns[3].ColumnType,this.oRow.Cells[3]),t+=i,i=a.e.Double(l.Issue),this.SetCellValue(i,this.MonthlyColumns[4].DataFormat,this.MonthlyColumns[4].ColumnType,this.oRow.Cells[4]),e+=i,o=o+a.e.Double(l.Receipt)-a.e.Double(l.Issue),this.SetCellValue(o,this.MonthlyColumns[5].DataFormat,this.MonthlyColumns[5].ColumnType,this.oRow.Cells[5]),this.oRow.NodeID=parseInt(l.mn),this.oRow.id=s.a.slick.rowid,this.MonthlyData.push(this.oRow)})}r.Tables[0].length>0&&(this.oRow=new n.d(this.MonthlyColumns.length,22),this.oRow.Height=24,this.oRow.Cells[2].IsNormal=!1,this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[2].Text="Tr.Totals",this.oRow.Cells[3].IsNormal=!1,this.oRow.Cells[3].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(t,this.MonthlyColumns[3].DataFormat,this.MonthlyColumns[3].ColumnType,this.oRow.Cells[3]),this.oRow.Cells[4].IsNormal=!1,this.oRow.Cells[4].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(e,this.MonthlyColumns[4].DataFormat,this.MonthlyColumns[4].ColumnType,this.oRow.Cells[4]),this.oRow.id=s.a.slick.rowid,this.MonthlyData.push(this.oRow))}else if(this.DailyVisible){if("Account"==this.BackTrackType){r.Tables[1].length>0&&(o=a.e.Double(r.Tables[1][0].Opening)),this.OpeningBalance.Label=s.a.GetResource("Reports_OpeningBalance");let l=new n.c;this.SetCellValue(o,this.BalanceFormat,"FLOAT",l),this.OpeningBalance.Text=l.Text,this.DailyData.Clear(),r.Tables[0].forEach(a=>{this.oRow=new n.d(this.MonthlyColumns.length,22),this.oRow.Height=20,this.oRow.Tag=a.DocDate,this.SetCellValue(a.DocDate,this.DailyColumns[0].DataFormat,"DATE",this.oRow.Cells[0]),this.SetCellValue(o,this.DailyColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1]),i=parseFloat(a.DiffDrCr),i>=0?(this.SetCellValue(i,this.DailyColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2]),t+=i):(this.SetCellValue(-i,this.DailyColumns[3].DataFormat,"FLOAT",this.oRow.Cells[3]),e+=-i),o+=i,this.SetCellValue(o,this.DailyColumns[4].DataFormat,"FLOAT",this.oRow.Cells[4]),this.oRow.id=s.a.slick.rowid,this.DailyData.push(this.oRow)})}else if("Product"==this.BackTrackType){r.Tables[1].length>0&&(o=a.e.Double(r.Tables[1][0].Opening)),this.OpeningBalance.Label=s.a.GetResource("Reports_LblOpeningStock");let l=new n.c;this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,"FLOAT",l),this.OpeningBalance.Text=l.Text,this.DailyData.Clear(),r.Tables[0].forEach(a=>{this.oRow=new n.d(this.MonthlyColumns.length,22),this.oRow.Height=20,this.oRow.Tag=a.DocDate,this.SetCellValue(a.DocDate,this.DailyColumns[0].DataFormat,"DATE",this.oRow.Cells[0]),this.SetCellValue(o,this.MonthlyColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1]),i=parseFloat(a.Receipt),this.SetCellValue(i,this.MonthlyColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2]),t+=i,i=parseFloat(a.Issue),this.SetCellValue(i,this.MonthlyColumns[3].DataFormat,"FLOAT",this.oRow.Cells[3]),e+=i,o=o+parseFloat(a.Receipt)-parseFloat(a.Issue),this.SetCellValue(o,this.MonthlyColumns[4].DataFormat,"FLOAT",this.oRow.Cells[4]),this.oRow.id=s.a.slick.rowid,this.DailyData.push(this.oRow)})}r.Tables[0].length>0&&(this.oRow=new n.d(this.DailyColumns.length,22),this.oRow.Height=24,this.oRow.Cells[1].IsNormal=!1,this.oRow.Cells[1].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[1].Text="Tr.Totals",this.oRow.Cells[2].IsNormal=!1,this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(t,this.DailyColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2]),this.oRow.Cells[3].IsNormal=!1,this.oRow.Cells[3].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(e,this.DailyColumns[3].DataFormat,"FLOAT",this.oRow.Cells[3]),this.oRow.id=s.a.slick.rowid,this.DailyData.push(this.oRow))}else this.VoucherVisible&&("Account"==this.BackTrackType?(this.VoucherData.Clear(),r.Tables[0].forEach(o=>{this.oRow=new n.d(this.VoucherColumns.length,22),this.oRow.Height=20,this.SetCellValue(o.VoucherNo,this.VoucherColumns[0].DataFormat,"STRING",this.oRow.Cells[0]),null!=o.Debit&&(t+=parseFloat(o.Debit),this.SetCellValue(o.Debit,this.VoucherColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1])),null!=o.Credit&&(e+=parseFloat(o.Credit),this.SetCellValue(o.Credit,this.VoucherColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2])),this.oRow.id=s.a.slick.rowid,this.VoucherData.push(this.oRow)})):"Product"==this.BackTrackType&&(this.VoucherData.Clear(),r.Tables[0].forEach(o=>{this.oRow=new n.d(this.VoucherColumns.length,22),this.oRow.Height=20,this.SetCellValue(o.VoucherNo,this.VoucherColumns[0].DataFormat,"STRING",this.oRow.Cells[0]),null!=!o.Receipt&&(t+=parseFloat(o.Receipt),this.SetCellValue(o.Receipt,this.VoucherColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1])),null!=!o.Issue&&(e+=parseFloat(o.Issue),this.SetCellValue(o.Issue,this.VoucherColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2])),this.oRow.id=s.a.slick.rowid,this.VoucherData.push(this.oRow)})),r.Tables[0].length>0&&(this.oRow=new n.d(this.VoucherColumns.length,22),this.oRow.Height=24,this.oRow.Type=n.f.GrossTotal,this.oRow.Cells[0].IsNormal=!1,this.oRow.Cells[0].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[0].Text="Balance",this.oRow.Cells[1].IsNormal=!1,this.oRow.Cells[1].CellAppearance=this.GrossTotalAppearance_Data,"Account"==this.BackTrackType?this.SetCellValue(t-e,this.BalanceFormat,"FLOAT",this.oRow.Cells[1]):"Product"==this.BackTrackType&&this.SetCellValue(t-e,this.VoucherColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1]),this.oRow.id=s.a.slick.rowid,this.VoucherData.push(this.oRow)))}GetAccountQuery(){let e="",t=null!=this.Report&&this.Report.Preferences.ContainsKey("RoundOffDecimals")?this.Report.Preferences.RoundOffDecimals:"",o="";this.IsLocationVisible&&null!=this.ReportLocationWhere&&(o=a.e.IsEmpty(this.ReportLocationWhere)?" AND 1<>1":" AND DCC.dcCCNID2 IN ("+this.ReportLocationWhere+")");let s="",i="",n=this.Report.GetDimensionFilter_Str("DCC.dcCCNID");(o.length>0||n.length>0)&&(s=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.AccDocDetailsID=ACC.AccDocDetailsID "+o+n,i=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.InvDocDetailsID=ACC.InvDocDetailsID "+o+n);let l="",r="",D="";if(0==this.UnPostedDocsList.length?l=" AND (ACC.StatusID=369 or ACC.StatusID=429)":l+=" AND ACC.StatusID IN (369,429,"+this.UnPostedDocsList+")",D="DocDate<@From",this.PDCInclude){let e="(ACC.StatusID=370 OR ACC.StatusID=439";this.IncludeTerminatedPDC&&(e+=" OR ACC.StatusID=452"),e+=")",r=" AND ACC.DocumentType<>16 AND ("+e+" OR (ACC.DocumentType<>14 AND ACC.DocumentType<>19"+l+"))",D+=" AND ("+e+" OR (ACC.DocumentType<>14 AND ACC.DocumentType<>19"+l+"))"}else r=" AND ACC.DocumentType NOT IN (16,14,19)"+l,D+=" AND ACC.DocumentType<>14 AND ACC.DocumentType<>19"+l;let h="";if(this.MonthlyVisible||this.DailyVisible){let e=t.length>0?"VoucherNo,":"";h+="\nSELECT SUM(OP_Dr)-SUM(OP_Cr) Opening FROM (",t.length>0&&(h+="SELECT VoucherNo,\nCASE WHEN SUM(OP_Dr)-SUM(OP_Cr)>0 THEN round(SUM(OP_Dr)-SUM(OP_Cr),2) ELSE 0 END OP_Dr,\nCASE WHEN SUM(OP_Dr)-SUM(OP_Cr)<0 THEN round(SUM(OP_Cr)-SUM(OP_Dr),2) ELSE 0 END OP_Cr\nFROM ("),h+="\n--Opening Dr\nSELECT "+e+"ACC.Amount OP_Dr,0 OP_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+s+"\nWHERE DebitAccount=@AccountID AND (ACC.DocumentType=16 OR ("+D+"))\nUNION ALL--Opening Cr\nSELECT "+e+"0 OP_Dr,ACC.Amount OP_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+s+"\nWHERE CreditAccount=@AccountID AND (ACC.DocumentType=16 OR ("+D+"))",i.length>0&&(h+="\n--INEVENTORY DATA\nUNION ALL--Opening Dr\nSELECT "+e+"ACC.Amount OP_Dr,0 OP_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+i+"\nWHERE DebitAccount=@AccountID AND (ACC.DocumentType=16 OR ("+D+"))\nUNION ALL--Opening Cr\nSELECT "+e+"0 OP_Dr,ACC.Amount OP_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+i+"\nWHERE CreditAccount=@AccountID AND (ACC.DocumentType=16 OR ("+D+"))"),t.length>0&&(h+="\n                ) AS T1 GROUP BY VoucherNo"),h+=") AS T"}if(this.MonthlyVisible)e+="DECLARE @From FLOAT,@To FLOAT,@AccountID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.FromDate.Date.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ToDate.Date.ToString("dd MMM yyyy")+"'))\nSET @AccountID="+this.NodeID,e+="\nSELECT DATENAME(year,DocDate) YearName,DATENAME(month,DocDate) MonthName,Month(DocDate) mn,SUM(TR_Dr)-SUM(TR_Cr) DiffDrCr\nFROM (\nSELECT VoucherNo,DocDate,",e+=t.length>0?"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN round(SUM(TR_Dr)-SUM(TR_Cr),"+t+") ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN round(SUM(TR_Cr)-SUM(TR_Dr),"+t+") ELSE 0 END TR_Cr":"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN SUM(TR_Dr)-SUM(TR_Cr) ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN SUM(TR_Cr)-SUM(TR_Dr) ELSE 0 END TR_Cr",e+="\nFROM (\n--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+s+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND DebitAccount=@AccountID\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+s+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND CreditAccount=@AccountID",i.length>0&&(e+="\n--INEVENTORY DATA\nUNION ALL--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+i+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND DebitAccount=@AccountID\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+i+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND CreditAccount=@AccountID"),e+=") AS T1 GROUP BY VoucherNo,DocDate\n) AS ACC GROUP BY DATENAME(year,DocDate),Month(DocDate),DATENAME(month,DocDate)\nORDER BY YearName,mn",e+="\n"+h.toString()+"\n",e+=" SELECT AccountName FROM ACC_Accounts with(nolock) WHERE AccountID=@AccountID";else if(this.DailyVisible){let o=new Date(parseInt(this.ReportGridObj.SelectedRow.Cells[1].Text),this.ReportGridObj.SelectedRow.NodeID-1,1),a=o.AddMonths(1).AddDays(-1);o<this.FromDate.Date&&(o=this.FromDate.Date),e+="DECLARE @From FLOAT,@To FLOAT,@AccountID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+o.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+a.ToString("dd MMM yyyy")+"'))\nSET @AccountID="+this.NodeID,e+="\nSELECT DocDate,SUM(TR_Dr)-SUM(TR_Cr) DiffDrCr\nFROM (\nSELECT VoucherNo,DocDate,",e+=t.length>0?"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN round(SUM(TR_Dr)-SUM(TR_Cr),"+t+") ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN round(SUM(TR_Cr)-SUM(TR_Dr),"+t+") ELSE 0 END TR_Cr":"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN SUM(TR_Dr)-SUM(TR_Cr) ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN SUM(TR_Cr)-SUM(TR_Dr) ELSE 0 END TR_Cr",e+="\nFROM (\n--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+s+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND DebitAccount=@AccountID\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+s+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND CreditAccount=@AccountID",i.length>0&&(e+="\n--INEVENTORY DATA\nUNION ALL--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+i+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND DebitAccount=@AccountID\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+i+"\nWHERE (DocDate BETWEEN @From AND @To)"+r+" AND CreditAccount=@AccountID"),e+=") AS T1 GROUP BY VoucherNo,DocDate\n) AS ACC GROUP BY DocDate\nORDER BY DocDate",e+="\n"+h.toString()+"\n"}else this.VoucherVisible&&(e+="DECLARE @From FLOAT,@To FLOAT,@AccountID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+new Date(this.ReportGridObj.SelectedRow.Tag).ToString("dd MMM yyyy")+"'))\nSET @AccountID="+this.NodeID,e+="\nSELECT VoucherNo,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN SUM(TR_Dr)-SUM(TR_Cr) ELSE NULL END Debit,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN SUM(TR_Cr)-SUM(TR_Dr) ELSE NULL END Credit\nFROM (",e+="\n--Transaction Dr\nSELECT VoucherNo,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+s+"\nWHERE DocDate=@From"+r+" AND DebitAccount=@AccountID\nUNION ALL--Transaction Cr\nSELECT VoucherNo,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+s+"\nWHERE DocDate=@From"+r+" AND CreditAccount=@AccountID",i.length>0&&(e+="\n--INEVENTORY DATA\nUNION ALL--Transaction Dr\nSELECT VoucherNo,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+i+"\nWHERE DocDate=@From"+r+" AND DebitAccount=@AccountID\nUNION ALL--Transaction Cr\nSELECT VoucherNo,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+i+"\nWHERE DocDate=@From"+r+" AND CreditAccount=@AccountID"),e+=") AS ACC GROUP BY VoucherNo");return e.toString()}GetProductQuery(){let e="",t="";this.IsLocationVisible&&null!=this.ReportLocationWhere&&(t=a.e.IsEmpty(this.ReportLocationWhere)?" AND 1<>1":" AND DCC.dcCCNID"+(this.Report.oReportDialog.Locations.DBColumnID-5e4)+" IN ("+this.ReportLocationWhere+")");let o="",s="",i=this.Report.GetDimensionFilter_Str("DCC.dcCCNID");if((t.length>0||i.length>0)&&(o=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.InvDocDetailsID=D.InvDocDetailsID "+t+i),s=this.IncludeUnPostedDocs?"":" AND D.StatusID=369",this.MonthlyVisible){let t=!1,a="";this.FromDate.Visible?a="(DocDate BETWEEN @From AND @To)":(t=!0,a="DocDate<=@To"),e+="DECLARE @From FLOAT,@To FLOAT,@ProductID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.FromDate.Date.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ToDate.Date.ToString("dd MMM yyyy")+"'))\nSET @ProductID="+this.NodeID,e+="\nSELECT DATENAME(year,DocDate) YearName,DATENAME(month,DocDate) MonthName,Month(DocDate) mn,SUM(Receipt) Receipt,SUM(Issue) Issue\nFROM (\n--Transaction Receipt\nSELECT CONVERT(DATETIME,DocDate) DocDate,UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=1 AND D.DocumentType<>3 AND "+a+s+"\nUNION ALL\n--Transaction Issue\nSELECT CONVERT(DATETIME,DocDate) DocDate,0 Receipt,UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=-1 AND D.DocumentType<>3 AND "+a+s,e+=") AS INV GROUP BY DATENAME(year,DocDate),Month(DocDate),DATENAME(month,DocDate)\nORDER BY YearName,mn",e+=t?"\nSELECT SUM(Receipt)-SUM(Issue) Opening FROM (\n--Opening Receipt\nSELECT UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=1 AND \n(D.DocDate<=@To AND D.DocumentType=3)"+s+"\nUNION ALL\n--Opening Issue\nSELECT 0 Receipt,UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=-1 AND \n(D.DocDate<=@To AND D.DocumentType=3)"+s+"\n) AS T":"\nSELECT SUM(Receipt)-SUM(Issue) Opening FROM (\n--Opening Receipt\nSELECT UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+s+"\nUNION ALL\n--Opening Issue\nSELECT 0 Receipt,UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=-1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+s+"\n) AS T",e+=" SELECT ProductName FROM INV_Product WITH(NOLOCK) WHERE ProductID=@ProductID"}else if(this.DailyVisible){let t=new Date(parseInt(this.ReportGridObj.SelectedRow.Cells[1].Text),this.ReportGridObj.SelectedRow.NodeID-1,1),a=t.AddMonths(1).AddDays(-1);t<this.FromDate.Date&&this.FromDate.Visible&&(t=this.FromDate.Date),e+="DECLARE @From FLOAT,@To FLOAT,@ProductID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+t.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+a.ToString("dd MMM yyyy")+"'))\nSET @ProductID="+this.NodeID,e+="\nSELECT CONVERT(DATETIME,DocDate) DocDate,SUM(Receipt) Receipt,SUM(Issue) Issue\nFROM (\n--Transaction Receipt\nSELECT DocDate,UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=1 AND D.DocumentType<>3 AND (DocDate BETWEEN @From AND @To)"+s+"\nUNION ALL\n--Transaction Issue\nSELECT DocDate,0 Receipt,UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=-1 AND D.DocumentType<>3 AND (DocDate BETWEEN @From AND @To)"+s+"\n",e+=") AS INV GROUP BY DocDate\nORDER BY DocDate",e+="\nSELECT SUM(Receipt)-SUM(Issue) Opening FROM (\n--Opening Receipt\nSELECT UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+s+"\nUNION ALL\n--Opening Issue\nSELECT 0 Receipt,UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=-1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+s+"\n) AS T"}else this.VoucherVisible&&(e+="DECLARE @From FLOAT,@To FLOAT,@ProductID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+new Date(this.ReportGridObj.SelectedRow.Tag).ToString("dd MMM yyyy")+"'))\nSET @ProductID="+this.NodeID,e+="\n--Transaction Receipt\nSELECT VoucherNo,SUM(UOMConvertedQty) Receipt,NULL Issue,1 VoucherType\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=1 AND D.DocumentType<>3 AND DocDate=@From"+s+"\nGROUP BY VoucherNo\nUNION ALL\n--Transaction Issue\nSELECT VoucherNo,NULL Receipt,SUM(UOMConvertedQty) Issue,-1 VoucherType\nFROM INV_DocDetails D WITH(NOLOCK)"+o+"\nWHERE D.ProductID=@ProductID AND IsQtyIgnored=0 AND D.VoucherType=-1 AND D.DocumentType<>3 AND DocDate=@From"+s+"\nGROUP BY VoucherNo\nORDER BY VoucherType DESC,VoucherNo");return e.toString()}SetVisibilty(e){0==e?(this.Title="Monthly Balances",this.BackButtonVisible=!1,this.MonthlyVisible=!0,this.DailyVisible=!1,this.VoucherVisible=!1,this.OpeningBalance.Visible=!0,this.OpeningBalance.Text=this.MonthlyOpening,this.Accounts.Enable=!0):1==e?(this.Title="Daily Balances",this.BackButtonVisible=!0,this.MonthlyVisible=!1,this.VoucherVisible=!1,this.DailyVisible=!0,this.OpeningBalance.Visible=!0,this.Accounts.Enable=!1):2==e&&(this.Title="Voucher Balances",this.BackButtonVisible=!0,this.MonthlyVisible=!1,this.DailyVisible=!1,this.VoucherVisible=!0,this.OpeningBalance.Visible=!1,this.Accounts.Enable=!1)}OnRowDoubleClick(e,t){return this.MonthlyVisible?this.OnMonthlyRowDoubleClick(e,t):this.DailyVisible?this.OnDailyRowDoubleClick(e,t):this.VoucherVisible&&this.OnVoucherRowDoubleClick(e,t),!0}OnMonthlyRowDoubleClick(e,t){this.MonthlyData.indexOf(e)<this.MonthlyData.length-1&&(this.SetVisibilty(1),this.LoadData())}OnDailyRowDoubleClick(e,t){this.DailyData.indexOf(e)<this.DailyData.length-1&&(this.SetVisibilty(2),this.LoadData())}OnVoucherRowDoubleClick(e,t){this.VoucherVisible&&this.VoucherData.indexOf(e)<this.VoucherData.length-1&&u.RibbonExtViewModel.LoadDocument_VoucherNo(e.Cells[0].Text)}OnDataClick(e){e.Column.LinkType==i.a.Document&&this.VoucherData.indexOf(e.Row)<this.VoucherData.length&&(u.RibbonExtViewModel.LoadDocument_VoucherNo(e.Row.Cells[e.ColumnIndex].Text),this.WidgetVisible&&s.a.page.HideDialog())}SetCellValue(e,t,o,s){r.ReportViewModel.SetCellValue(e,t,o,-1,s)}LoadWidgetData(e){e.Tables[0].Columns.push("Sno");let t=1;e.Tables[0].forEach(e=>{e.Sno=t++}),e.Tables[0].forEach(e=>{this.oRow=new n.d(this.VoucherColumns.length,22),this.oRow.Height=22;for(let t=0;t<this.VoucherColumns.length;t++){let o=this.VoucherColumns[t];Object(T.isNullOrUndefined)(e[o.ID])||r.ReportViewModel.SetCellValue(e[o.ID],o.DataFormat,o.ColumnType,-1,this.oRow.Cells[t])}this.oRow.id=s.a.slick.rowid,this.VoucherData.push(this.oRow)})}}}}]);