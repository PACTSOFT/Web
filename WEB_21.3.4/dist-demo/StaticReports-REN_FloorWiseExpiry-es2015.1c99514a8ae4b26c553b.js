(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{eoN1:function(e,t,l){"use strict";l.r(t),l.d(t,"REN_FloorWiseExpiry",(function(){return a}));var s=l("Do2H"),o=l("Lp6j"),r=l("vTM8"),i=l("1xwR"),n=l("mvPR");class a extends i.b{constructor(e){super(e),this.colors=new r.a,this.colorNames=new r.a}LoadReport(){let e=0,t=0;this.ViewModel.Preferences.ContainsKey("Property")&&""!=this.ViewModel.Preferences.Property&&(e=parseInt(this.ViewModel.Preferences.Property)),this.ViewModel.Preferences.ContainsKey("Status")&&""!=this.ViewModel.Preferences.Status&&(t=parseInt(this.ViewModel.Preferences.Status));let l=this.ViewModel.Preferences.ContainsKey("StatusDimension")?parseInt(this.ViewModel.Preferences.StatusDimension):0,r=[];r.push(e),r.push(this.ViewModel.ToDatePicker.Date.ToString("dd/MMM/yyyy")),r.push(t),r.push(l),r.push(this.ViewModel.SelectTag),r.push(this.ViewModel.FromTag),r.push(s.a.SessionManager.UserID),r.push(s.a.SessionManager.LanguageID),s.a.report.GetFloorWiseExpiry(r,this.ViewModel.IsReportDB).then(e=>{let t=e;this.FillColors(),null!=t&&t.Tables.length>2&&this.colors.keys.forEach(e=>{let l={Key:e,Value:this.colors[e]},o=t.Tables[2].filter(e=>e.NodeID==l.Key);o.length>0?this.colorNames.push(o[0].Name.toString(),l.Value):"0"==l.Key&&this.colorNames.push(s.a.GetResource("nearingexpiry"),l.Value)});let l=1;t.Tables[1].length>0&&o.e.IsNum(t.Tables[1][0][t.Columns[1][0]])&&(l=parseInt(t.Tables[1][0][t.Columns[1][0]]));let r=new Array,i=new Array,a=this.ViewModel.ReportColumns[0].Clone();a.HeaderText="Floor",i.push(a);for(let s=1;s<this.ViewModel.ColumnSource.length;s++)this.ViewModel.ColumnSource[s].HeaderAppearance.IsVisible&&r.push(this.ViewModel.ColumnSource[s]);for(let s=0;s<l;s++)a=this.ViewModel.ReportColumns[0].Clone(),a.HeaderText="Unit",i.push(a);this.ViewModel.ReportColumns=i;let h=new Array,p=1,u=null,d="",w=!1;for(let c=0;c<t.Tables[0].length;c++,p++){if(d!=t.Tables[0][c].Property.toString()&&(w=!0),u!=o.e.String(t.Tables[0][c].FloorName)||w){if(c>0&&h.forEach(e=>{this.ViewModel.addRow(e)}),w){let e=new n.d(this.ViewModel.ReportColumns.length,this.ViewModel.RowHeight);e.Cells[0].Text=t.Tables[0][c].Property.toString(),e.Cells[0].ColSpan=this.ViewModel.ReportColumns.length-1,u=null,this.ViewModel.addRow(e),w=!1}h.Clear(),h.push(new n.d(this.ViewModel.ReportColumns.length,this.ViewModel.RowHeight)),h.push(new n.d(this.ViewModel.ReportColumns.length,this.ViewModel.RowHeight)),h.push(new n.d(this.ViewModel.ReportColumns.length,this.ViewModel.RowHeight)),r.forEach(e=>{h.push(new n.d(this.ViewModel.ReportColumns.length,this.ViewModel.RowHeight))}),h[0].Cells[0].Text=o.e.String(t.Tables[0][c].FloorName),p=1}if(u=o.e.String(t.Tables[0][c].FloorName),d=o.e.String(t.Tables[0][c].Property),h[0].Cells[p].Text=o.e.String(t.Tables[0][c].Unit),h[1].Cells[p].Text=o.e.String(t.Tables[0][c].UnitTypeName),h[2].Cells[p].Text=o.e.IsEmpty(t.Tables[0][c].ContractExpiryDate)?"":new Date(t.Tables[0][c].ContractExpiryDate).ToString(s.a.SessionManager.Preferences["Date Format"]),this.colors.ContainsKey(o.e.String(t.Tables[0][c].UnitStatus))&&!o.e.IsEmpty(this.colors[o.e.String(t.Tables[0][c].UnitStatus)]))for(let e=0;e<h.length;e++)h[e].Cells[p].IsNormal=!1,h[e].Cells[p].CellAppearance=this.ViewModel.ReportColumns[p].DataAppearance.Clone(),h[e].Cells[p].CellAppearance.BackColor=this.colors[o.e.String(t.Tables[0][c].UnitStatus)];if(this.ViewModel.Preferences.ContainsKey("ExpiryIn")&&""!=this.ViewModel.Preferences.ExpiryIn){let e=0;if(e=o.e.Int(this.ViewModel.Preferences.ExpiryIn),e>0&&!o.e.IsEmpty(t.Tables[0][c].ContractExpiryDate)&&new Date(t.Tables[0][c].ContractExpiryDate.toString())<=this.ViewModel.ToDatePicker.Date.AddDays(e)&&""!=this.colors[0])for(let t=0;t<3;t++)h[t].Cells[p].IsNormal=!1,h[t].Cells[p].CellAppearance=t<3?this.ViewModel.ReportColumns[p].DataAppearance.Clone():r[t-3].DataAppearance.Clone(),h[t].Cells[p].CellAppearance.BackColor=this.colors[0]}for(let e=0;e<r.length;e++){let l=t.Tables[0][c][r[e].ID].toString();l.length>0&&this.ViewModel.SetCellValue(l,r[e].DataFormat,r[e].ColumnType,h[3+e].Cells[p])}}t.Tables[0].length>0&&h.forEach(e=>{this.ViewModel.addRow(e)})}).then(e=>{this.ViewModel.process_RunWorkerCompleted()})}FillColors(){if(this.ViewModel.Preferences.ContainsKey("StatusColors")&&""!=this.ViewModel.Preferences.StatusColors){let e=new o.f;e.LoadXml("<xml>"+this.ViewModel.Preferences.StatusColors+"</xml>");let t=e.SelectNodes("xml/Color");null!=t&&t.length>0&&t.forEach(e=>{null!=e.attributes.ID&&null!=e.attributes.Value&&this.colors.push(e.attributes.ID.value,e.attributes.Value.value)})}}LoadReportWithPostFilters(e){}}}}]);