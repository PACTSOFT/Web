(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{"8mzQ":function(e,t,o){"use strict";o.r(t),o.d(t,"ACC_BRSReport",(function(){return n}));var s=o("1xwR"),l=o("mvPR"),i=o("Lp6j"),a=o("Do2H"),h=o("MCLT"),r=o("ThYU");class n extends s.b{constructor(e){super(e),this.i=0,this.k=0,this.Balance=0,this.OpBalance=0,this.colBalanceIndex=-1,this.colDebitIndex=-1,this.colCreditIndex=-1,this.colSpanBF=-1,this.colSubTotalStartIndex=0,this.BankID=0,this.DateWiseDrCr=!1,this.dblDr=0,this.dblCr=0,this.dblTotal=0,this.dsAccount=null,this.iLoop=0,this.ForeignCurrencyID=0}LoadReport(){let e="",t="",o=this.ViewModel.oReportDialog.GetSeqNosList();o.length>0&&(this.ViewModel.oReportDialog.IsZeroSelected||this.ViewModel.oReportDialog.IsOneSelected||(o=this.ViewModel.oReportDialog.GetSeqNosListWithRoots(),this.ViewModel.oReportDialog.IsGroupExists?(e="A1.AccountID=GTP.GTID",t=o.Contains(",")?",(select T.AccountID GTID from ACC_Accounts T with(nolock),ACC_Accounts GT1 with(nolock) where T.lft BETWEEN GT1.lft AND GT1.rgt AND GT1.AccountID IN ("+o+") group by T.AccountID) AS GTP ":",(select T.AccountID GTID from ACC_Accounts T with(nolock),ACC_Accounts GT1 with(nolock) where T.lft BETWEEN GT1.lft AND GT1.rgt AND GT1.AccountID="+o+" group by T.AccountID) AS GTP "):e=o.Contains(",")?"A1.AccountID IN ("+o+")":"A1.AccountID="+o));let s="";s="SELECT A1.AccountID,A1.AccountName"+this.ViewModel.GroupSelectTag+" FROM ACC_Accounts A1 with(nolock)"+this.ViewModel.GroupFromTag+t+" WHERE A1.IsGroup=0 AND A1.AccountTypeID in (2,3) ",s+=this.GetAccountWiseLocationWhere("A1"),e.length>0&&(s+=" AND "+e),s+=" Order By A1.AccountName",a.a.report.ReportDataSetAsync("RPT022",this.ViewModel.IsReportDB,s).then(e=>{if(this.dsAccount=e,0==this.ViewModel.lstGroup.length){let e=new r.Group;e.Height=22,e.GroupAppearance=new l.a,e.GroupAppearance.BackColor="#FFFBD5B5",e.GroupAppearance.ForeColor="#FF000000",e.GroupAppearance.FontFamilyName="Calibri",e.GroupAppearance.FontSize=15,e.GroupAppearance.IsBold=!0,this.ViewModel.lstGroup.push(e)}this.LoadReportFromData(0,0)}).then(()=>{this.ViewModel.process_RunWorkerCompleted()})}LoadReportWithPostFilters(e){}LoadReportFromData(e,t){this.GrdRow=-1,this.colSubTotalStartIndex=-1,this.AggTotal=i.e.NumArray(this.oColumns.length+1,2),this.DataSetCollection.Clear(),this.ViewModel.lstGroupIndex.Clear(),this.ViewModel.Data.Clear();for(let s=0;s<this.oColumns.length;s++)if("Debit"==this.oColumns[s].ID||"Credit"==this.oColumns[s].ID||"Balance"==this.oColumns[s].ID){this.colSpanBF=s;break}if(this.ViewModel.lstGroup.length>0)for(this.k=0;this.k<this.oColumns.length;this.k++)if(this.ViewModel.lstGroup[0].TotalCols.ContainsKey(this.oColumns[this.k].ID)){this.colSubTotalStartIndex=this.k;break}for(let s=this.oColumns.length-1;s>=0;s--)"Balance"==this.oColumns[s].ID?(this.colBalanceIndex=s,this.oColumns[s].DataFormat.ShowDefaultSign=0):"Dr"==this.oColumns[s].ID?this.colDebitIndex=s:"Cr"==this.oColumns[s].ID&&(this.colCreditIndex=s);try{if(null==this.dsAccount){if(this.dsAccount=a.a.report.ReportDataSet("RPT053",this.ViewModel.IsReportDB,e.toString()),null!=this.dsAccount&&this.dsAccount.Tables.length>0&&this.dsAccount.Tables[0].length>0){if(0==this.ViewModel.lstGroup.length){let e=new r.Group;e.Height=22,e.GroupAppearance=new l.a,e.GroupAppearance.BackColor="#FFFBD5B5",e.GroupAppearance.ForeColor="#FF000000",e.GroupAppearance.FontFamilyName="Calibri",e.GroupAppearance.FontSize=15,e.GroupAppearance.IsBold=!0,this.ViewModel.lstGroup.push(e)}let e=this.NewReportRow_2(l.f.Group,this.ViewModel.lstGroup[0].GroupAppearance);this.ViewModel.lstGroup[0].Height>0&&(e.Height=this.ViewModel.lstGroup[0].Height),e.PrintVisible=this.ViewModel.lstGroup[0].GroupAppearance.IsPrintVisible,e.Cells[0].Text=this.dsAccount.Tables[0][0].AccountName.toString(),e.Cells[0].ColSpan=e.Cells.length,e.LevelNo=0,this.Balance=0,this.GrdRow++,this.ViewModel.Data.push(e)}this.LoadByBank(e,t).then(()=>{this.ViewModel.process_RunWorkerCompleted()})}else{if(t=0,this.ViewModel.Preferences.ContainsKey("ForeignCurrency")){let e=new i.f;e.LoadXml("<XML>"+this.ViewModel.Preferences.ForeignCurrency+"</XML>");let o=e.SelectSingleNode("IsChecked");null!=o&&"1"==o.InnerText&&(o=e.SelectSingleNode("Value"),t=parseInt(o.InnerText))}this.LoadReportFromData_CallBack(t)}}catch(o){this.ViewModel.DisplayMessage=o.Message,Logger.ErrorLog("ACC_BRSReport::Error LoadReport",o)}}LoadReportFromData_CallBack(e){if(this.iLoop>=this.dsAccount.Tables[0].length)return void this.ViewModel.process_RunWorkerCompleted();this.AggTotal=i.e.NumArray(this.oColumns.length+1,2);let t=this.NewReportRow_2(l.f.Group,this.ViewModel.lstGroup[0].GroupAppearance);this.ViewModel.lstGroup[0].Height>0&&(t.Height=this.ViewModel.lstGroup[0].Height),t.PrintVisible=this.ViewModel.lstGroup[0].GroupAppearance.IsPrintVisible,t.Cells[0].Text=this.dsAccount.Tables[0][this.iLoop].AccountName.toString(),t.Cells[0].ColSpan=t.Cells.length,t.LevelNo=0,this.Balance=0,this.GrdRow++,this.ViewModel.Data.push(t),this.LoadByBank(parseInt(this.dsAccount.Tables[0][this.iLoop].AccountID),e).then(()=>{this.iLoop++,this.LoadReportFromData_CallBack(e)})}LoadByBank(e,t){let o=null,s=null,h=0,r=0,n=0,c=0,d=!1;0!=e&&(this.BankID=e),this.DateWiseDrCr="1"==this.ViewModel.Preferences.DateWiseDrCr;let p=[];return p.push(this.BankID),p.push(1),p.push(this.ViewModel.oReportDialog.FromDate.Date),p.push(this.ViewModel.oReportDialog.ToDate.Date),this.ViewModel.oReportDialog.Locations.Visible?(this.ViewModel.oReportDialog.SetLocationWhere(),p.push(this.ViewModel.oReportDialog.LocationWhere)):p.push(""),p.push(t),p.push(1),p.push(""),p.push(""),a.a.report.GetBRSVouchers(p).then(e=>{this.ViewModel.DateFilter=this.ViewModel.FromDatePicker.Date.ToString(a.a.SessionManager.Preferences["Date Format"]),this.ViewModel.DateFilter+="  to  "+this.ViewModel.ToDatePicker.Date.ToString(a.a.SessionManager.Preferences["Date Format"]),null==this.dsAccount&&e.Tables[3].length>0&&(this.ViewModel.DateFilter+=" ["+e.Tables[3][0].AccountName.toString()+"]"),this.ViewModel.Preferences.ContainsKey("Preview")&&"true"==this.ViewModel.Preferences.Preview?(o=this.dtpreview,s=this.dtpreviewColumns,o.forEach(e=>{null!=e.clrDate_key&&(e.ClearanceDate=e.clrDate_key),e.BRS_Status=e.Status})):(o=e.Tables[0],s=e.Columns[0]),i.e.IsEmpty(s)||s.Contains("Status")||s.push("Status"),i.e.IsEmpty(s)||s.Contains("AccountName")||(s.push("AccountName"),o.forEach(t=>{t.AccountName=e.Tables[3][0].AccountName}));for(let t=o.length-1;t>=0;t--)this.ViewModel.Preferences.ContainsKey("Preview")&&"true"==this.ViewModel.Preferences.Preview?null!=o[t].clrDate_key?new Date(o[t].clrDate_key)>this.ViewModel.oReportDialog.ToDate.Date?o[t].BRS_Status=0:1900==new Date(o[t].clrDate_key).getFullYear()&&(o[t].ClearanceDate=null):o[t].ClearanceDate=null:new Date(o[t].ClearanceDate)>this.ViewModel.oReportDialog.ToDate.Date?o[t].BRS_Status=0:1900==new Date(o[t].ClearanceDate).getFullYear()&&(o[t].ClearanceDate=null),o[t].Status=o[t].BRS_Status;e.Tables.length>1&&e.Columns[1].Contains("Bal")&&e.Tables[1].length>0&&!i.e.IsEmpty(e.Tables[1][0][e.Columns[1][0]])&&(this.dblTotal=parseFloat(e.Tables[1][0][e.Columns[1][0]])),null!=e&&e.Tables.length>1&&e.Columns[1].Contains("Bal")&&e.Tables[1].length>0&&!i.e.IsEmpty(e.Tables[1][0][e.Columns[1][0]])&&(h=parseFloat(e.Tables[1][0][e.Columns[1][0]])),null!=e&&e.Tables.length>2&&e.Columns[2].Contains("Bal")&&e.Tables[2].length>0&&!i.e.IsEmpty(e.Tables[2][0][e.Columns[2][0]])&&(r=parseFloat(e.Tables[2][0][e.Columns[2][0]])),null!=e&&e.Tables.length>5&&e.Columns[5].Contains("Bal")&&e.Tables[5].length>0&&!i.e.IsEmpty(e.Tables[5][0][e.Columns[5][0]])&&(c=parseFloat(e.Tables[5][0][e.Columns[5][0]])),null!=e&&e.Tables.length>4&&e.Columns[4].Contains("Bal")&&e.Tables[4].length>0&&!i.e.IsEmpty(e.Tables[4][0][e.Columns[4][0]])&&(d=!0,n=parseFloat(e.Tables[4][0][e.Columns[4][0]])),this.ViewModel.Preferences.ContainsKey("GroupBy")&&""!=this.ViewModel.Preferences.GroupBy&&(o=this.CheckGroupbyCheque(o,s)),this.dv=o,this.dvTable=o,this.dv.SortBy(["Date,VoucherNo"]),this.BalanceBFAppearance.ForeColor=this.BalanceBFAppearance_Data.ForeColor="Red",this.BalanceBFAppearance.IsBold=this.BalanceBFAppearance_Data.IsBold=!0,this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl1")&&!i.e.IsEmpty(this.ViewModel.Preferences.BRSLbl1)?this.ViewModel.Preferences.BRSLbl1:a.a.GetResource("Balance As Per Books"),this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.dblTotal>=0?this.ViewModel.SetCellValue(this.dblTotal,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-this.dblTotal,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow),this.DateWiseDrCr?(this.dv=this.dvTable.filter(e=>0==e.Status),this.addBRS(),this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.BalanceBFAppearance_Data),this.oRow.LevelNo=1,this.oRow.Cells[this.colDebitIndex-1].Text=a.a.GetResource("Reports_ReportTotal"),this.oRow.Cells[this.colDebitIndex-1].CellAppearance=this.BalanceBFAppearance,this.colDebitIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[0],this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]),this.colCreditIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[0],this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)):(this.dv=this.dvTable.filter(e=>0==e.Status&&(null==e.Cr||0==e.Cr)),this.dv.length>0&&(this.addBRS(),this.colDebitIndex>=0&&(this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.BalanceBFAppearance_Data),this.oRow.LevelNo=1,this.oRow.Cells[this.colDebitIndex-1].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl3")&&!i.e.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl3)?this.ViewModel.Preferences.BRSLbl3:"Total Debit",this.oRow.Cells[this.colDebitIndex-1].CellAppearance=this.BalanceBFAppearance,this.ViewModel.SetCellValue(this.AggTotal[0],this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]),this.ViewModel.Data.push(this.oRow))),this.dv=this.dvTable.filter(e=>0==e.Status&&(null==e.Dr||0==e.Dr)),this.dv.length>0&&(this.addBRS(),this.colCreditIndex>=0&&(this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.BalanceBFAppearance_Data),this.oRow.LevelNo=1,this.oRow.Cells[this.colCreditIndex-1].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl4")&&!i.e.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl4)?this.ViewModel.Preferences.BRSLbl4:"Total Credit",this.oRow.Cells[this.colCreditIndex-1].CellAppearance=this.BalanceBFAppearance,this.ViewModel.SetCellValue(this.AggTotal[0],this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)))),this.dblTotal=this.dblTotal-(this.AggTotal[0]-this.AggTotal[0]),this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl2")&&!i.e.IsEmpty(this.ViewModel.Preferences.BRSLbl2)?this.ViewModel.Preferences.BRSLbl2:a.a.GetResource("Balance As Per Bank Statement"),this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.dblTotal>=0?this.ViewModel.SetCellValue(this.dblTotal,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-this.dblTotal,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow),this.ViewModel.Preferences.ContainsKey("UnreconciledAmount")&&"0"==this.ViewModel.Preferences.UnreconciledAmount||(this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl5")&&!i.e.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl5)?this.ViewModel.Preferences.BRSLbl5:"Total Unreconciled Amount",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,c>=0?this.ViewModel.SetCellValue(c,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-c,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)),this.ViewModel.Preferences.ContainsKey("ReconciledAmount")&&"0"==this.ViewModel.Preferences.ReconciledAmount||(this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl6")&&!i.e.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl6)?this.ViewModel.Preferences.BRSLbl6:"Total Reconciled Balance",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,r>=0?this.ViewModel.SetCellValue(r,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-r,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)),d&&(this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text="Statement Balance",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,n>=0?this.ViewModel.SetCellValue(n,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-n,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow),this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text="Variance",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,r-n>=0?this.ViewModel.SetCellValue(r-n,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-(r-n),this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)),this.ViewModel.Preferences.ContainsKey("ShowReconciledEntries")&&"1"==this.ViewModel.Preferences.ShowReconciledEntries&&(this.dv=this.dvTable.filter(e=>1==e.Status),this.dv.length>0&&(this.colDebitIndex>=0&&(this.AggTotal[0]=0),this.colCreditIndex>=0&&(this.AggTotal[0]=0),this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text="Reconciled Entries",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.ViewModel.Data.push(this.oRow),this.addBRS(),(this.colDebitIndex>=0||this.colCreditIndex>=0)&&(this.GrdRow++,this.oRow=this.NewReportRow_2(l.f.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.colDebitIndex-1].Text="Reconciled Total",this.oRow.Cells[this.colDebitIndex-1].CellAppearance=this.GrossTotalAppearance,this.colDebitIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[0],this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]),this.colCreditIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[0],this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)))),this.ViewModel.refreshDataView()})}CheckGroupbyCheque(e,t){t.Contains("GroupIDs")||t.push("GroupIDs");let o=new Array,s=!1;"CHK"==this.ViewModel.Preferences.GroupBy&&(s=!0);for(let l=0;l<e.length;l++)if(!o.Contains(e[l])){let t=0,a=0,h="",r=e.filter(t=>t.VoucherNo==e[l].VoucherNo.toString());if(s&&(i.e.IsEmpty(e[l].ChequeNo)||(r=r.filter(t=>t.ChequeNo.toString()==e[l].ChequeNo.toString()))),r.length>1){for(let e=1;e<r.length;e++)i.e.IsEmpty(r[e].Dr)||(a+=parseFloat(r[e].Dr)),i.e.IsEmpty(r[e].Cr)||(t+=parseFloat(r[e].Cr)),h+=r[e].AccDocDetailsID.toString()+",",o.push(r[e]);r[0].GroupIDs=h,r[0].Cr=i.e.IsEmpty(r[0].Cr)?t:parseFloat(r[0].Cr)+t,r[0].Dr=i.e.IsEmpty(r[0].Dr)?a:parseFloat(r[0].Dr)+a}}for(let l=0;l<o.length;l++)e.Remove(o[l]);return e.forEach(e=>{i.e.IsEmpty(e.Dr)||i.e.IsEmpty(e.Cr)||(parseFloat(e.Dr)>parseFloat(e.Cr)?(e.Dr=parseFloat(e.Dr)-parseFloat(e.Cr),e.Cr=null):parseFloat(e.Cr)>parseFloat(e.Dr)&&(e.Cr=parseFloat(e.Cr)-parseFloat(e.Dr),e.Dr=null))}),e}addBRS(){for(this.k=0;this.k<this.dv.length;this.k++){this.oRow=this.NewReportRow(),this.oRow.LevelNo=1,this.oRow.Cells[1].IsNormal=!1,this.dblDr=0,this.dblCr=0;for(let e=0;e<this.oColumns.length;e++){let t="";""!=this.oColumns[e].Formula||Object(h.isNullOrUndefined)(this.dv[this.k][this.oColumns[e].ID])||(t=this.dv[this.k][this.oColumns[e].ID].toString()),""!=t&&(this.ViewModel.SetCellValue(t,this.oColumns[e].DataFormat,this.oColumns[e].ColumnType,this.oRow.Cells[e]),e==this.colDebitIndex?(this.dblDr=i.e.Double(t),this.AggTotal[e][0]+=this.dblDr):e==this.colCreditIndex&&(this.dblCr=i.e.Double(t),this.AggTotal[e][0]+=this.dblCr))}this.Balance=this.Balance+this.dblDr-this.dblCr,this.colBalanceIndex>=0&&this.DateWiseDrCr&&this.ViewModel.SetCellValue(this.Balance,this.oColumns[this.colBalanceIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colBalanceIndex]),this.ViewModel.ApplyKPI(this.oRow),this.GrdRow++,this.ViewModel.Data.push(this.oRow)}}}}}]);