(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{"0T9g":function(t,e,s){"use strict";s.r(e),s.d(e,"eTradingReportFormat",(function(){return p})),s.d(e,"ACC_TradingReports",(function(){return I}));var i=s("Do2H"),o=s("Lp6j"),l=s("eQJW"),h=s("1xwR"),a=s("mvPR"),n=s("vTM8"),r=s("MCLT"),d=s("ThYU"),c=s("8iaB");class T{constructor(){this.Lft=0,this.Rgt=0}}var p=function(t){return t[t.Vertical=0]="Vertical",t[t.Horizontal=1]="Horizontal",t[t.Plain=2]="Plain",t}({}),u=function(t){return t[t.None=0]="None",t[t.MonthWise=1]="MonthWise",t[t.QtrWise=4]="QtrWise",t[t.HalfYearWise=5]="HalfYearWise",t[t.YearWise=3]="YearWise",t[t.TagWise=2]="TagWise",t}({});class C{}class I extends h.b{constructor(t){super(t),this.Show=u.None,this.k=0,this.BalIndex=0,this.LevelNo=0,this.ReportTotalIndex=0,this.CountMonths=0,this.ForeignCurrencyID=0,this.CurrencyType=0,this.CellStartPos=0,this.GroupTotalIndex=0,this.YTDIndex=0,this.YTD_LYIndex=0,this.BAL_LYIndex=0,this.TotalBudgetIndex=1,this.VariancePercentIndex=1,this.SalesPercentIndex=1,this.NegNumber=4,this.ColumnSize=0,this.AccNameIndex=0,this.FirstTypeEndIndex=0,this.GrossCellIndex=0,this.ReportRowStartIndex=0,this.TagID=0,this.CADimension=0,this.Olddbl=0,this.dbl=0,this.dblTemp=0,this.exchRate=0,this.dblTotalSales=0,this.OldReportTotalMonthWise=null,this.lstTotal=null,this.lstParents=new Array,this.STACKROWS=new Array,this.lstParentCell=new Array,this.IsIncome=!1,this.IsIncomeNegative=!1,this.IncludeOpeningStock=!1,this.IncludeClosingStock=!1,this.ShowPrevMonthData=!1,this.ShowPrevMonthDiffData=!1,this.ShowPrevMonthVarPer=!1,this.ShowdetailsofControlGroups=!1,this.GroupTotalsAtEnd=!1,this.GroupTotalsSeperate=!1,this.DontShowSummaryGroupTotals=!1,this.ShowCarryForward=!1,this.ShowNetProfitBeforeAndAfter=!1,this.ClubIncomeExpenseInPlainReport=!1,this.ShowTotalBudget=!1,this.ShowBudget=!1,this.ShowBudgetVariance=!1,this.ShowBudgetVariancePercent=!1,this.HideZeroBudgetAccounts=!1,this.ShowGrossInIncome=!1,this.ShowIncomeFirst=!1,this.IsFirstCall=!1,this.ShowAllAccounts=!1,this.IsAccountWise=!1,this.AddGrossToVariance=!1,this.IgnoreGrossRowsForBS=!1,this.ShowSalesPercentage=!1,this.ShowSalesPerMonthly=!1,this.GrossAtEnd=!1,this.NetAtEnd=!1,this.lstTagSalesTotal=new n.a,this.dvYTD=null,this.dvBAL_LY=null,this.dvYTD_LY=null,this.dvYTDTable=null,this.dvBAL_LYTable=null,this.dvYTD_LYTable=null,this.sbSpaces="",this.GrossRows=new Array(2),this.ReportFormat=p.Vertical,this.IncomeExpenseHeader=new a.a,this.GroupRowAppearance=new a.a,this.AccountID=0,this.RetainedEarningAccount=0,this.CurrentBudgetID=0,this.PreviousBudgetID=0,this.LastAccountID=0,this.FirstAccountID=0,this.LocationWhere="",this.dsNew=null,this.dsOpenCompany=null,this.dsOpeningStock=null,this.dsClosingStock=null,this.dsList=new Array,this.dv1=null,this.dv2=null,this.dvCurrentBudget=null,this.dvPrevBudget=null,this.dv1Table=null,this.dv2Table=null,this.dvCurrentBudgetTable=null,this.dvPrevBudgetTable=null,this.dv1Columns=null,this.dv2Columns=null,this.IncomeAccounts=new Array,this.lstTags=new Array,this.lstPMTags=new Array,this.dblMonBal=0,this.dblActBudget=0,this.dblClosingStock=0,this.dblOpeningStock=0,this.YearSlots=new n.a,this.QtrSlot=new n.a,this.HideTagWiseBudget=!1,this.HideEmptyDimensions=!1,this.lstTagColumns=new Array,this.lstTagVisibleColumns=new Array,this.TextFields=new n.a,this.TempData=new Array,this.IsAddRow=0,this.dblAccountsDrOpBalDiff=0,this.dblAccountsCrOpBalDiff=0,this.dblDrOpBalDiff=0,this.dblCrOpBalDiff=0,this.dblOpeningBalanceDifference=0,this.lstTagsOpeningBalance=new n.a,this.IncomeExpenseHeader.IsBold=!0,this.IncomeExpenseHeader.FontSize=14,this.IncomeExpenseHeader.ForeColor="#FF00465A",this.IncomeExpenseHeader.BackColor="White",this.GroupRowAppearance.IsBold=!1,this.GroupRowAppearance.FontSize=12,this.GroupRowAppearance.ForeColor="#FF00465A",this.GroupRowAppearance.BackColor="White"}LoadReport(){if("True"==i.a.SessionManager.Preferences.EnableLocationWise.toString()&&"True"==i.a.SessionManager.Preferences["LW Reports"]&&"True"==i.a.SessionManager.Preferences.LWAccPeriod&&(this.CheckLWAccountingDate(),!o.e.IsEmpty(this.ViewModel.DisplayMessage)))return;if(this.GrdRow=-1,this.CountMonths=0,this.Show=u.None,this.ReportTotal=new Array(2).fill(0),this.lstTotal=new Array,this.LevelNo=parseInt(this.ViewModel.Preferences.Level),this.ShowIncomeFirst="Income"==this.ViewModel.Preferences.ShowFirst,this.ViewModel.IsReportCollapsable=!0,"Vertical"==this.ViewModel.Preferences.ReportFormat?this.ReportFormat=p.Vertical:"Horizontal"==this.ViewModel.Preferences.ReportFormat?(this.ViewModel.IsReportCollapsable=!1,this.ReportFormat=p.Horizontal):this.ReportFormat=p.Plain,this.ViewModel.Preferences.ContainsKey("IncludeStock")&&(this.IncludeOpeningStock=this.ViewModel.Preferences.IncludeStock.Contains("<OpeningStock />"),this.IncludeClosingStock=this.ViewModel.Preferences.IncludeStock.Contains("<ClosingStock />")),this.PDCInclude=!(!this.ViewModel.Preferences.ContainsKey("IncludePDCs")||"1"!=this.ViewModel.Preferences.IncludePDCs),this.IncludeUnApprovedPDC=!(!this.ViewModel.Preferences.ContainsKey("IncludeUnApprovedPDC")||"1"!=this.ViewModel.Preferences.IncludeUnApprovedPDC),this.IncludeTerminatedPDC=!this.ViewModel.Preferences.ContainsKey("IncludeTerminatedPDC")||"0"!=this.ViewModel.Preferences.IncludeTerminatedPDC,this.UnPostedDocsInclude=!(!this.ViewModel.Preferences.ContainsKey("IncludeUnPostedDocs")||"1"!=this.ViewModel.Preferences.IncludeUnPostedDocs),this.UnPostedDocsList=this.UnPostedDocsInclude&&this.ViewModel.Preferences.ContainsKey("IncludeUnPostedDocsList")?this.ViewModel.Preferences.IncludeUnPostedDocsList:"",this.ShowdetailsofControlGroups=!(!this.ViewModel.Preferences.ContainsKey("ShowdetailsofControlGroups")||"1"!=this.ViewModel.Preferences.ShowdetailsofControlGroups),5==this.ViewModel.StaticReportType&&(this.ShowdetailsofControlGroups=!0),this.ForeignCurrencyID=0,this.ViewModel.Preferences.ContainsKey("ForeignCurrency")){let t=new o.f;t.LoadXml("<XML>"+this.ViewModel.Preferences.ForeignCurrency+"</XML>");let e=o.f.SelectSingleNode(t.DocumentElement,"IsChecked");null!=e&&"1"==e.innerHTML&&(e=o.f.SelectSingleNode(t.DocumentElement,"Value"),this.ForeignCurrencyID=parseInt(e.innerHTML))}else if(this.ViewModel.Preferences.ContainsKey("Currency")){let t=new o.f;t.LoadXml("<XML>"+this.ViewModel.Preferences.Currency+"</XML>"),this.CurrencyType=parseInt(o.f.SelectSingleNode(t.DocumentElement,"Type").innerHTML),1==this.CurrencyType?(o.e.IsEmpty(i.a.SessionManager.Preferences.DimensionwiseCurrency)||0==parseInt(i.a.SessionManager.Preferences.DimensionwiseCurrency))&&(this.CurrencyType=0):2==this.CurrencyType&&(this.ForeignCurrencyID=parseInt(o.f.SelectSingleNode(t.DocumentElement,"Value").innerHTML))}if(this.GroupTotalsAtEnd=!(!this.ViewModel.Preferences.ContainsKey("GroupTotalsAtEnd")||"1"!=this.ViewModel.Preferences.GroupTotalsAtEnd),this.GroupTotalsSeperate=!(!this.ViewModel.Preferences.ContainsKey("GroupTotalsSeperate")||"1"!=this.ViewModel.Preferences.GroupTotalsSeperate),this.DontShowSummaryGroupTotals=!(!this.ViewModel.Preferences.ContainsKey("DontShowSummaryGroupTotals")||"1"!=this.ViewModel.Preferences.DontShowSummaryGroupTotals),this.ClubIncomeExpenseInPlainReport=!(!this.ViewModel.Preferences.ContainsKey("ClubIncomeExpenseInPlainReport")||"1"!=this.ViewModel.Preferences.ClubIncomeExpenseInPlainReport),this.ShowCarryForward=!(!this.ViewModel.Preferences.ContainsKey("ShowCarryForward")||"1"!=this.ViewModel.Preferences.ShowCarryForward),this.ShowNetProfitBeforeAndAfter=!(!this.ViewModel.Preferences.ContainsKey("ShowNetProfit")||"BeforeAndAfter"!=this.ViewModel.Preferences.ShowNetProfit),this.ShowAllAccounts=!(!this.ViewModel.Preferences.ContainsKey("ShowAllAccounts")||"1"!=this.ViewModel.Preferences.ShowAllAccounts),this.HideZeroBudgetAccounts=!(!this.ViewModel.Preferences.ContainsKey("HideZeroBudgetAccounts")||"1"!=this.ViewModel.Preferences.HideZeroBudgetAccounts),this.IsAccountWise=!(!this.ViewModel.Preferences.ContainsKey("AccountWise")||"1"!=this.ViewModel.Preferences.AccountWise),this.DontApplyLocationWiseAccountsFilter=!(!this.ViewModel.Preferences.ContainsKey("DontApplyLocationWiseAccountsFilter")||"1"!=this.ViewModel.Preferences.DontApplyLocationWiseAccountsFilter),this.DontApplyLocationWiseAccountsFilter||(this.ApplyLWAccountLFilterWhenIgnoreLoc=!(!this.ViewModel.Preferences.ContainsKey("ApplyLWAccountLFilterWhenIgnoreLoc")||"1"!=this.ViewModel.Preferences.ApplyLWAccountLFilterWhenIgnoreLoc)),this.RetainedEarningAccount=this.ViewModel.Preferences.ContainsKey("RetainedEarningAccount")?o.e.Int(this.ViewModel.Preferences.RetainedEarningAccount):0,this.ClosingStockAccount=this.ViewModel.Preferences.ContainsKey("ClosingStockAccount")?o.e.Int(this.ViewModel.Preferences.ClosingStockAccount):0,this.AddGrossToVariance=!(!this.ViewModel.Preferences.ContainsKey("AddGrossToVariance")||"1"!=this.ViewModel.Preferences.AddGrossToVariance),this.NegNumber=this.ViewModel.Preferences.ContainsKey("NegNumber")?parseInt(this.ViewModel.Preferences.NegNumber):4,this.GrossAtEnd=!(!this.ViewModel.Preferences.ContainsKey("GrossAtEnd")||"1"!=this.ViewModel.Preferences.GrossAtEnd),this.NetAtEnd=!(!this.ViewModel.Preferences.ContainsKey("NetAtEnd")||"1"!=this.ViewModel.Preferences.NetAtEnd),this.ShowBudget=!1,this.ShowBudgetVariance=!1,this.CurrentBudgetID=0,this.PreviousBudgetID=0,this.ReportFormat==p.Vertical){let t="0";if(this.ViewModel.Preferences.ContainsKey("ShowSalesPercentage")){let t=new o.f;t.LoadXml("<XML>"+this.ViewModel.Preferences.ShowSalesPercentage+"</XML>"),"1"==o.f.SelectSingleNode(t.DocumentElement,"IsChecked").innerHTML&&(this.ShowSalesPercentage=!0,"Repeat Tag Wise"==o.f.SelectSingleNode(t.DocumentElement,"Value").innerHTML&&(this.ShowSalesPerMonthly=!0))}this.ViewModel.Preferences.ContainsKey("FinalReportsShow")&&(t=this.ViewModel.Preferences.FinalReportsShow),this.ViewModel.Preferences.ContainsKey("HideTagWiseBudget")&&"1"==this.ViewModel.Preferences.HideTagWiseBudget&&(this.HideTagWiseBudget=!0),"1"==t?(this.Show=u.MonthWise,this.ViewModel.oReportDialog.FromDate.Date.iMonth()==this.ViewModel.oReportDialog.ToDate.Date.iMonth()&&this.ViewModel.oReportDialog.FromDate.Date.getFullYear()==this.ViewModel.oReportDialog.ToDate.Date.getFullYear()&&(this.ViewModel.Preferences.ContainsKey("FinalReportsShowPrevMn")||this.ViewModel.Preferences.ContainsKey("FinalReportsShowDifference")||this.ViewModel.Preferences.ContainsKey("FinalReportsShowVarPer")||(this.Show=u.None))):"4"==t?this.Show=u.QtrWise:"5"==t?this.Show=u.HalfYearWise:"3"==t?(this.Show=u.YearWise,this.ViewModel.oReportDialog.FromDate.Date.getFullYear()==this.ViewModel.oReportDialog.ToDate.Date.getFullYear()&&(this.ViewModel.Preferences.ContainsKey("FinalReportsShowPrevMn")||this.ViewModel.Preferences.ContainsKey("FinalReportsShowDifference")||this.ViewModel.Preferences.ContainsKey("FinalReportsShowVarPer")||(this.Show=u.None))):"2"==t&&(this.Show=u.TagWise,this.TagID=parseInt(this.ViewModel.Preferences.FinalReportsShowTag),this.ViewModel.Preferences.ContainsKey("FinalReportsShowTagHideColumns")&&(this.HideEmptyDimensions=!0),this.TagColumnName="Name",this.ViewModel.Preferences.ContainsKey("FinalReportsShowTagColumn")&&("0"==this.ViewModel.Preferences.FinalReportsShowTagColumn?this.TagColumnName="Code":"2"==this.ViewModel.Preferences.FinalReportsShowTagColumn&&(this.TagColumnName="Code+'-'+Name"))),8==this.ViewModel.StaticReportType&&(this.ViewModel.Preferences.ContainsKey("CurrentBudget")&&(this.CurrentBudgetID=o.e.Int(this.ViewModel.Preferences.CurrentBudget)),this.ViewModel.Preferences.ContainsKey("PreviousBudget")&&(this.PreviousBudgetID=o.e.Int(this.ViewModel.Preferences.PreviousBudget)),this.ViewModel.Preferences.ContainsKey("ShowActualBudget")&&"1"==this.ViewModel.Preferences.ShowActualBudget&&(this.CurrentBudgetID>0||this.PreviousBudgetID>0)&&(this.ShowBudget=!0),this.ViewModel.Preferences.ContainsKey("ShowVariance")&&"1"==this.ViewModel.Preferences.ShowVariance&&(this.CurrentBudgetID>0||this.PreviousBudgetID>0)&&(this.ShowBudgetVariance=!0),this.ViewModel.Preferences.ContainsKey("ShowVariancePercent")&&"1"==this.ViewModel.Preferences.ShowVariancePercent&&(this.VariancePercentIndex=1==this.ShowBudgetVariance?2:1,(this.CurrentBudgetID>0||this.PreviousBudgetID>0)&&(this.ShowBudgetVariancePercent=!0)),this.ViewModel.Preferences.ContainsKey("ShowTotalBudget")&&"1"==this.ViewModel.Preferences.ShowTotalBudget&&(this.TotalBudgetIndex=1==this.ShowBudget?2:1,(this.CurrentBudgetID>0||this.PreviousBudgetID>0)&&(this.ShowTotalBudget=!0))),this.Show!=u.MonthWise&&this.Show!=u.QtrWise&&this.Show!=u.HalfYearWise&&this.Show!=u.YearWise||this.ViewModel.oReportDialog.ToDate.Date.Subtract(this.ViewModel.oReportDialog.FromDate.Date).TotalDays<=366&&(this.ShowPrevMonthData=this.ViewModel.Preferences.ContainsKey("FinalReportsShowPrevMn"),this.ShowPrevMonthDiffData=this.ViewModel.Preferences.ContainsKey("FinalReportsShowDifference"),this.ShowPrevMonthVarPer=this.ViewModel.Preferences.ContainsKey("FinalReportsShowVarPer"))}this.CellStartPos=0,this.dtYearStartMonth=new Date(this.ViewModel.oReportDialog.FromDate.Date.getFullYear(),this.AccountingFromMonth-1,1),this.dtYearStartMonth>this.ViewModel.oReportDialog.FromDate.Date&&(this.dtYearStartMonth=this.dtYearStartMonth.AddYears(-1)),this.YTDIndex=this.YTD_LYIndex=this.BAL_LYIndex=-1;let t=null,e=null,s=null,h=null;for(let i=0;i<this.ViewModel.ColumnSourceALL.length;i++)"Bud_Budget"==this.ViewModel.ColumnSourceALL[i].ID?(s=this.ViewModel.ColumnSourceALL[i].Clone(),s.HeaderAppearance.IsVisible=s.DataAppearance.IsVisible=!0,this.ViewModel.ColumnSourceALL[i].HeaderAppearance.IsVisible=!1):"Bud_TotalBudget"==this.ViewModel.ColumnSourceALL[i].ID?(h=this.ViewModel.ColumnSourceALL[i].Clone(),h.HeaderAppearance.IsVisible=h.DataAppearance.IsVisible=!0,this.ViewModel.ColumnSourceALL[i].HeaderAppearance.IsVisible=!1):"Bud_Variance"==this.ViewModel.ColumnSourceALL[i].ID?(t=this.ViewModel.ColumnSourceALL[i].Clone(),t.HeaderAppearance.IsVisible=t.DataAppearance.IsVisible=!0,this.ViewModel.ColumnSourceALL[i].HeaderAppearance.IsVisible=!1):"Bud_VariancePerc"==this.ViewModel.ColumnSourceALL[i].ID&&(e=this.ViewModel.ColumnSourceALL[i].Clone(),e.HeaderAppearance.IsVisible=e.DataAppearance.IsVisible=!0,this.ViewModel.ColumnSourceALL[i].HeaderAppearance.IsVisible=!1);let a=new Array;for(let i=0;i<this.ViewModel.ColumnSource.length;i++)if(33!=this.ViewModel.ColumnSource[i].ID.length&&"AccountCode"!=this.ViewModel.ColumnSource[i].ID&&"AccountName"!=this.ViewModel.ColumnSource[i].ID||this.TextFields.push(this.ViewModel.ColumnSource[i].ID,i),a.push(this.ViewModel.ColumnSource[i].Clone()),"Balance"==this.ViewModel.ColumnSource[i].ID){if(a[a.length-1].DataFormat.NegativeNumber=4!=this.NegNumber?this.NegNumber:0,this.ShowTotalBudget){let t=null!=h?h.Clone():a[a.length-1].Clone();t.HeaderText=null!=h?t.HeaderText:"Total Budget",t.ID="TotalBudget",t.DataFormat.NegativeNumber=0,a.InsertAt(t,a.length-1),this.ViewModel.GrpReportTotal.TotalCols.ContainsKey(t.ID)||this.ViewModel.GrpReportTotal.TotalCols.push(t.ID,this.BalIndex-1),this.BalIndex=this.BalIndex+1}if(this.ShowBudget){let t=null!=s?s.Clone():a[a.length-1].Clone();t.HeaderText=null!=s?t.HeaderText:"Budget",t.ID="BudgetBalance",t.DataFormat.NegativeNumber=0,a.InsertAt(t,a.length-1),this.ViewModel.GrpReportTotal.TotalCols.ContainsKey(t.ID)||this.ViewModel.GrpReportTotal.TotalCols.push(t.ID,this.BalIndex-1)}if(this.BalIndex=a.length-1,this.ShowBudgetVariance){let e=null!=t?t.Clone():a[this.BalIndex].Clone();e.HeaderText=null!=t?e.HeaderText:"Variance",e.ID="VarianceBalance",e.DataFormat.NegativeNumber=0,a.push(e)}if(this.ShowBudgetVariancePercent){let t=null!=e?e.Clone():a[this.BalIndex].Clone();t.HeaderText=null!=e?t.HeaderText:"Variance %",t.DataFormat.PercentageOn="BudgetBalance",t.ID="PercentVarianceBalance",t.DataFormat.NegativeNumber=0,a.push(t)}if(this.ShowSalesPercentage){let t=a[this.BalIndex].Clone();t.HeaderText="Percentage",t.width>85&&(t.width=85),t.DataFormat.PercentageOn="Balance",t.ID="SalesPercentage",t.DataFormat.NegativeNumber=0,this.SalesPercentIndex=a.length-this.BalIndex,a.push(t)}}else if("YTD"==this.ViewModel.ColumnSource[i].ID){if(4!=this.NegNumber&&(a[a.length-1].DataFormat.NegativeNumber=this.NegNumber),this.ShowBudget){let t=null!=s?s.Clone():a[a.length-1].Clone();t.HeaderText=null!=s?"YTD "+t.HeaderText:"YTD Budget",t.ID="BudgetYTD",t.DataFormat.NegativeNumber=0,a.InsertAt(t,a.length-1)}if(this.YTDIndex=a.length-1,this.ShowBudgetVariance){let e=null!=t?t.Clone():a[this.YTDIndex].Clone();e.HeaderText=null!=t?"YTD "+e.HeaderText:"YTD Variance",e.ID="VarianceYTD",e.DataFormat.NegativeNumber=0,a.push(e)}if(this.ShowBudgetVariancePercent){let t=null!=e?e.Clone():a[this.YTDIndex].Clone();t.HeaderText=null!=e?"YTD "+t.HeaderText:"YTD Variance %",t.DataFormat.PercentageOn="BudgetYTD",t.ID="PercentVarianceYTD",t.DataFormat.NegativeNumber=0,a.push(t)}}else if("LastYearBalance"==this.ViewModel.ColumnSource[i].ID){if(4!=this.NegNumber&&(a[a.length-1].DataFormat.NegativeNumber=this.NegNumber),this.ShowBudget){let t=null!=s?s.Clone():a[a.length-1].Clone();t.HeaderText=null!=s?"LastYear "+t.HeaderText:"LastYear Budget",t.ID="BudgetLastYearBalance",t.DataFormat.NegativeNumber=0,a.InsertAt(t,a.length-1)}if(this.BAL_LYIndex=a.length-1,this.ShowBudgetVariance){let e=null!=t?t.Clone():a[this.BAL_LYIndex].Clone();e.HeaderText=null!=t?"LastYear "+e.HeaderText:"LastYear Variance",e.ID="VarianceLastYearBalance",e.DataFormat.NegativeNumber=0,a.push(e)}if(this.ShowBudgetVariancePercent){let t=null!=e?e.Clone():a[this.BAL_LYIndex].Clone();t.HeaderText=null!=e?"LastYear "+t.HeaderText:"LastYear Variance %",t.DataFormat.PercentageOn="BudgetLastYearBalance",t.ID="PercentVarianceLastYearBalance",t.DataFormat.NegativeNumber=0,a.push(t)}}else if("LastYearYTD"==this.ViewModel.ColumnSource[i].ID){if(4!=this.NegNumber&&(a[a.length-1].DataFormat.NegativeNumber=this.NegNumber),this.ShowBudget){let t=null!=s?s.Clone():a[a.length-1].Clone();t.HeaderText=null!=s?"LastYear YTD "+t.HeaderText:"LastYear YTD Budget",t.ID="BudgetLastYearYTD",t.DataFormat.NegativeNumber=0,a.InsertAt(t,a.length-1)}if(this.YTD_LYIndex=a.length-1,this.ShowBudgetVariance){let e=null!=t?t.Clone():a[this.YTD_LYIndex].Clone();e.HeaderText=null!=t?"LastYear YTD "+e.HeaderText:"LastYear YTD Variance",e.ID="VarianceLastYearYTD",e.DataFormat.NegativeNumber=0,a.push(e)}if(this.ShowBudgetVariancePercent){let t=null!=e?e.Clone():a[this.YTD_LYIndex].Clone();t.HeaderText=null!=e?"LastYear YTD "+t.HeaderText:"LastYear YTD Variance %",t.DataFormat.PercentageOn="BudgetLastYearYTD",t.ID="PercentVarianceLastYearYTD",t.DataFormat.NegativeNumber=0,a.push(t)}}if(this.frmBalance=a[this.BalIndex].DataFormat.Clone(),this.frmBalance.NegativeNumber=0,this.frmBudget=a[this.BalIndex].DataFormat.Clone(),this.frmBalance.NegativeNumber=0,this.AccNameIndex=this.BalIndex-1,this.ShowBudget&&this.AccNameIndex--,this.ShowTotalBudget&&this.AccNameIndex--,this.ReportFormat==p.Plain&&(this.ClubIncomeExpenseInPlainReport?this.GroupTotalIndex=this.ViewModel.ColumnSource.length:(this.GroupTotalIndex=this.ViewModel.ColumnSource.length+1,a.push(this.ViewModel.ColumnSource[this.BalIndex].Clone()))),this.GroupTotalsSeperate){let t=this.ViewModel.ColumnSource[this.BalIndex].Clone();t.HeaderText="TOTAL",a.InsertAt(t,this.BalIndex+1),-1!=this.YTDIndex&&this.YTDIndex++,-1!=this.BAL_LYIndex&&this.BAL_LYIndex++,-1!=this.YTD_LYIndex&&this.YTD_LYIndex++}if(this.ColumnSize=a.length,this.ReportFormat==p.Horizontal){let t=a.length;for(let e=0;e<t;e++)a.push(a[e].Clone())}if(this.ReportFormat==p.Plain&&!this.ClubIncomeExpenseInPlainReport){let t=a[this.BalIndex],e=a[this.BalIndex+1];this.ShowIncomeFirst?7==this.ViewModel.StaticReportType?(t.HeaderText=i.a.GetResource("Reports_LblAssets").toUpperCase(),e.HeaderText=i.a.GetResource("Reports_LblLiabilities").toUpperCase()):(t.HeaderText=i.a.GetResource("Reports_LblIncome").toUpperCase(),e.HeaderText=i.a.GetResource("Reports_LblExpneses").toUpperCase()):7==this.ViewModel.StaticReportType?(t.HeaderText=i.a.GetResource("Reports_LblLiabilities").toUpperCase(),e.HeaderText=i.a.GetResource("Reports_LblAssets").toUpperCase()):(t.HeaderText=i.a.GetResource("Reports_LblExpneses").toUpperCase(),e.HeaderText=i.a.GetResource("Reports_LblIncome").toUpperCase())}if(this.Show==u.YearWise&&(this.HideTagWiseBudget=!0),this.Show==u.MonthWise||this.Show==u.YearWise||this.Show==u.QtrWise||this.Show==u.HalfYearWise){let i,o=this.dtYearStartMonth;i=this.Show==u.YearWise?o:new Date(this.ViewModel.oReportDialog.FromDate.Date.getFullYear(),this.ViewModel.oReportDialog.FromDate.Date.getMonth(),1);let l=1,h=this.Show==u.HalfYearWise?6:3,n="",r=!0,d=a[a.length-1];for(-1!=this.BalIndex&&(d=a[this.BalIndex]);i<=this.ViewModel.oReportDialog.ToDate.Date;){let c=d.Clone();if(this.Show==u.MonthWise)c.HeaderText=i.ToString("MMM yy"),c.ID=7==this.ViewModel.StaticReportType?"Y"+i.getFullYear()+"M"+i.iMonth().ToString("00"):"Y"+i.getFullYear()+"M"+i.iMonth(),this.YearSlots.push(c.ID,i);else if(this.Show==u.QtrWise||this.Show==u.HalfYearWise){if(r){for(i=new Date(this.ViewModel.FromDatePicker.Date.getFullYear(),this.AccountingFromMonth-1,1),i>this.ViewModel.FromDatePicker.Date&&(i=i.AddYears(-1)),l=1;i.AddMonths(h)<=this.ViewModel.FromDatePicker.Date;)l++,i=i.AddMonths(h);n=1==this.AccountingFromMonth?i.getFullYear().toString():i.iMonth()>=this.AccountingFromMonth?i.getFullYear().toString()+"-"+((i.getFullYear()+1)%100).toString():(i.getFullYear()-1).toString()+"-"+(i.getFullYear()%100).toString()}else l++,(this.Show==u.QtrWise&&5==l||this.Show==u.HalfYearWise&&3==l)&&(l=1),n=1==this.AccountingFromMonth?i.getFullYear().toString():i.iMonth()>=this.AccountingFromMonth?i.getFullYear().toString()+"-"+((i.getFullYear()+1)%100).toString():(i.getFullYear()-1).toString()+"-"+(i.getFullYear()%100).toString();c.HeaderText=(this.Show==u.HalfYearWise?"H":"Q")+l+" "+n,c.ID="Y"+i.getFullYear()+"M"+i.iMonth(),this.YearSlots.push(c.ID,i),r=!1;let t=new C;t.dtStart=i,t.dtEnd=i.AddMonths(h).AddDays(-1),this.QtrSlot.push(c.ID,t)}else c.HeaderText=1!=o.iMonth()?o.getFullYear().toString()+"-"+(o.getFullYear()+1).toString():o.getFullYear().toString(),c.ID="Y"+i.getFullYear(),this.YearSlots.push(c.ID,o),o=o.AddYears(1);if(this.lstTags.push(c.ID),a.push(c),++this.CountMonths,this.ShowBudget&&!this.HideTagWiseBudget){let t=null!=s?s.Clone():c.Clone();t.HeaderText=(null!=s?t.HeaderText:"Budget")+"-"+c.HeaderText,t.ID=this.Show==u.MonthWise?"Budget"+i.ToString("MMMyyyy"):this.Show==u.QtrWise||this.Show==u.HalfYearWise?"Budget"+c.ID:"Budget"+i.ToString("yyyy"),t.DataFormat.NegativeNumber=0,a.InsertAt(t,a.length-1),++this.CountMonths}if(this.ShowBudgetVariance&&!this.HideTagWiseBudget){let e=null!=t?t.Clone():c.Clone();e.HeaderText=(null!=t?e.HeaderText:"Variance")+"-"+c.HeaderText,e.ID=this.Show==u.MonthWise?"Variance"+i.ToString("MMMyyyy"):this.Show==u.QtrWise||this.Show==u.HalfYearWise?"Variance"+c.ID:"Variance"+i.ToString("yyyy"),e.DataFormat.NegativeNumber=0,a.push(e),++this.CountMonths}if(this.ShowBudgetVariancePercent&&!this.HideTagWiseBudget){let t=null!=e?e.Clone():c.Clone();t.HeaderText=(null!=e?t.HeaderText:"Variance %")+"-"+c.HeaderText,t.ID=this.Show==u.MonthWise?"PercentVariance"+i.ToString("MMMyyyy"):this.Show==u.QtrWise||this.Show==u.HalfYearWise?"PercentVariance"+c.ID:"PercentVariance"+i.ToString("yyyy"),t.DataFormat.NegativeNumber=0,a.push(t),++this.CountMonths}if(this.ShowPrevMonthData||this.ShowPrevMonthDiffData||this.ShowPrevMonthVarPer){let t=c.Clone(),e=i.AddYears(-1);if(this.Show==u.MonthWise)t.HeaderText=e.ToString("MMM yy"),t.ID=7==this.ViewModel.StaticReportType?"Y"+e.getFullYear()+"M"+e.iMonth().ToString("00"):"Y"+e.getFullYear()+"M"+e.iMonth();else if(this.Show==u.QtrWise||this.Show==u.HalfYearWise){let e=i.AddYears(-1);n=1==this.AccountingFromMonth?e.getFullYear().toString():e.iMonth()>=this.AccountingFromMonth?e.getFullYear().toString()+"-"+((e.getFullYear()+1)%100).toString():(e.getFullYear()-1).toString()+"-"+(e.getFullYear()%100).toString(),t.HeaderText=(this.Show==u.HalfYearWise?"H":"Q")+l+" "+n,t.ID="Y"+e.getFullYear()+"M"+e.iMonth();let s=new C;s.dtStart=e,s.dtEnd=e.AddMonths(h).AddDays(-1),this.QtrSlot.push(t.ID,s)}else this.Show==u.YearWise&&(t.HeaderText=e.ToString("yyyy"),t.ID="Y"+e.getFullYear());this.lstPMTags.push(t.ID),t.HeaderAppearance.IsVisible=this.ShowPrevMonthData,a.push(t),++this.CountMonths}if(this.ShowPrevMonthDiffData){let t=c.Clone();i.AddYears(-1),t.HeaderText="Diff",this.Show==u.MonthWise?t.ID=7==this.ViewModel.StaticReportType?"DIFF_Y"+i.getFullYear()+"M"+i.iMonth().ToString("00"):"DIFF_Y"+i.getFullYear()+"M"+i.iMonth():this.Show==u.QtrWise||this.Show==u.HalfYearWise?t.ID="DIFF_Y"+i.getFullYear()+"M"+i.iMonth():this.Show==u.YearWise&&(t.ID="DIFF_Y"+i.getFullYear()),a.push(t),++this.CountMonths}if(this.ShowPrevMonthVarPer){let t=c.Clone();i.AddYears(-1),t.HeaderText="Variance %",t.DataFormat.PercentageOn="DIFF",this.Show==u.MonthWise?t.ID=7==this.ViewModel.StaticReportType?"VARPER_Y"+i.getFullYear()+"M"+i.iMonth().ToString("00"):"VARPER_Y"+i.getFullYear()+"M"+i.iMonth():this.Show==u.QtrWise||this.Show==u.HalfYearWise?t.ID="VARPER_Y"+i.getFullYear()+"M"+i.iMonth():this.Show==u.YearWise&&(t.ID="VARPER_Y"+i.getFullYear()),a.push(t),++this.CountMonths}if(this.ShowSalesPerMonthly){let t=c.Clone();t.HeaderText="Percentage",t.DataFormat.PercentageOn="Balance",t.width>85&&(t.width=85),t.ID=this.Show==u.MonthWise?"SalesPercentage_Y"+i.getFullYear()+"M"+i.iMonth():this.Show==u.QtrWise||this.Show==u.HalfYearWise?"SalesPercentage_"+c.ID:"SalesPercentage_Y"+i.ToString("yyyy"),t.DataFormat.NegativeNumber=0,a.push(t),++this.CountMonths}i=this.Show==u.MonthWise?i.AddMonths(1):this.Show==u.QtrWise||this.Show==u.HalfYearWise?i.AddMonths(h):i.AddYears(1)}}else if(this.Show==u.TagWise){let o=a[a.length-1];-1!=this.BalIndex&&(o=a[this.BalIndex]);let l=this.GetTagWiseQuery(this.TagID,this.TagColumnName,"Name");i.a.report.DataSet("RPT022",l).Tables[0].forEach(i=>{let l=o.Clone();if(l.HeaderText=i.Name.toString(),l.ID=i.NodeID.toString(),this.lstTagColumns.push(l.ID),a.push(l),++this.CountMonths,this.ShowBudget&&!this.HideTagWiseBudget){let t=null!=s?s.Clone():l.Clone();t.HeaderText=(null!=s?t.HeaderText:"Budget")+"-"+l.HeaderText,t.ID="Budget"+l.ID,t.DataFormat.NegativeNumber=0,a.InsertAt(t,a.length-1),++this.CountMonths}if(this.ShowBudgetVariance&&!this.HideTagWiseBudget){let e=null!=t?t.Clone():l.Clone();e.HeaderText=(null!=t?e.HeaderText:"Variance")+"-"+l.HeaderText,e.ID="Variance"+l.ID,e.DataFormat.NegativeNumber=0,a.push(e),++this.CountMonths}if(this.ShowBudgetVariancePercent&&!this.HideTagWiseBudget){let t=null!=e?e.Clone():l.Clone();t.HeaderText=(null!=e?t.HeaderText:"Variance %")+"-"+l.HeaderText,t.ID="PercentVariance"+l.ID,t.DataFormat.NegativeNumber=0,a.push(t),++this.CountMonths}if(this.ShowSalesPerMonthly){let t=l.Clone();t.HeaderText="Percentage",t.DataFormat.PercentageOn="Balance",t.width>85&&(t.width=85),t.ID="SalesPercentage_"+l.ID,t.DataFormat.NegativeNumber=0,a.push(t),++this.CountMonths}this.lstTags.push(l.ID)})}this.ViewModel.ReportColumns=a,this.oColumns=this.ViewModel.ReportColumns,this.IsIncomeNegative=7!=this.ViewModel.StaticReportType,this.LocationWhere="",this.ViewModel.oReportDialog.Locations.Visible&&null!=this.ViewModel.oReportDialog.LocationWhere&&(this.LocationWhere=o.e.IsEmpty(this.ViewModel.oReportDialog.LocationWhere)?" AND 1<>1":" AND DCC.dcCCNID2 IN ("+this.ViewModel.oReportDialog.LocationWhere+")"),this.dsList.Clear(),this.dsBudget=null;this.ViewModel.oReportDialog.Locations.Visible&&null!=this.ViewModel.oReportDialog.LocationWhere&&o.e.IsEmpty(this.ViewModel.oReportDialog.LocationWhere),7==this.ViewModel.StaticReportType&&Object(l.j)(i.a.SessionManager.Preferences.OpenCompany)||this.Show==u.TagWise&&(this.IncludeOpeningStock||this.IncludeClosingStock)&&(this.IncludeOpeningStock&&this.SetStockBalance(!0),this.IncludeClosingStock&&this.SetStockBalance(!1)),8!=this.ViewModel.StaticReportType?(this.ReportRowStartIndex=-1,this.SetDataSet(this.ViewModel.StaticReportType).then(t=>{this.ReportFormat==p.Plain?this.LoadPlainReport():this.LoadHorizontalVerticalReports(),this.LoadReportComplete()})):(this.ReportRowStartIndex=-1,this.SetDataSet(5).then(t=>{this.LoadHorizontalVerticalReports(),this.Olddbl=this.dbl,this.OldReportTotalMonthWise=this.ReportTotalMonthWise,this.CellStartPos=0,this.ReportRowStartIndex=this.GrdRow,this.ReportTotal[0]=this.ReportTotal[1]=0,this.GrossRows[0]=null,this.GrossRows[1]=null,this.ShowIncomeFirst=!(!this.ViewModel.Preferences.ContainsKey("ShowFirst2")||"Income"!=this.ViewModel.Preferences.ShowFirst2),this.SetDataSet(8).then(t=>{this.LoadHorizontalVerticalReports(),this.LoadReportComplete()})}))}LoadReportComplete(){console.log(this.TempData);for(let t=0;t<this.TempData.length;t++){let e=this.TempData[t];e.Visible&&(this.ReportFormat==p.Horizontal&&(e.Parent=null),this.ViewModel.addRow(e))}this.ViewModel.process_RunWorkerCompleted()}SetDataSet(t){let e,s,h="",a="",d="",c="",T="",C="",I="",D=new Array;if(5==t?(c="4,8",T="5,9",this.IncomeAccounts.push(4),this.IncomeAccounts.push(8),D.push(5),D.push(9)):6==t?(c="4,8,11",T="5,9,12",h=",A.PL IsSummary",a=",A.PL",this.IncomeAccounts.push(4),this.IncomeAccounts.push(8),this.IncomeAccounts.push(11),D.push(5),D.push(9),D.push(12)):7==t?(c="1,2,7,10,13,15",T="3,6,14,16",h=",A.BS IsSummary",a=",A.BS",this.IncomeAccounts.push(15),this.IncomeAccounts.push(13),this.IncomeAccounts.push(1),this.IncomeAccounts.push(2),this.IncomeAccounts.push(7),D.push(3),D.push(6),D.push(14),D.push(16)):8==t&&(c="11",T="12",this.IncomeAccounts.push(11),D.push(12)),this.ViewModel.Preferences.ContainsKey("AccountTypesFilter")&&this.ViewModel.Preferences.AccountTypesFilter.length>0){let t=this.ViewModel.Preferences.AccountTypesFilter.split(",");for(let e=this.IncomeAccounts.length-1;e>=0;e--)t.Contains(this.IncomeAccounts[e].toString())||this.IncomeAccounts.RemoveAt(e);for(let e=D.length-1;e>=0;e--)t.Contains(D[e].toString())||D.RemoveAt(e);this.IncomeAccounts.forEach(t=>{d.length>0&&(d+=","),d+=t.toString()}),D.forEach(t=>{d.length>0&&(d+=","),d+=t.toString()})}else d=c+","+T;if(8==this.ViewModel.StaticReportType&&(h=",A.PLT IsSummary",a=",A.PLT"),this.exchRate=0,this.ForeignCurrencyID>0)e="AmountFC",s=" AND ACC.CurrencyID="+this.ForeignCurrencyID;else if(e=1==this.CurrencyType?"AmountBC":"Amount",s="",this.ViewModel.Preferences.ContainsKey("FCWithExchRate")){let t=new o.f;t.LoadXml("<XML>"+this.ViewModel.Preferences.FCWithExchRate+"</XML>");let s=o.f.SelectSingleNode(t.DocumentElement,"IsChecked");null!=s&&"1"==s.innerHTML&&(this.exchRate=o.e.Double(o.f.SelectSingleNodeText(t.DocumentElement,"TextValue")),this.exchRate<=0&&(this.exchRate=1),e="Amount/"+this.exchRate.toString())}let m=!1,S="",A="",w=this.ViewModel.oReportDialog.GetSeqNosListWithRoots();this.ViewModel.oReportDialog.IsZeroSelected||this.ViewModel.oReportDialog.IsOneSelected||(this.ViewModel.oReportDialog.IsGroupExists?(A="A.AccountID=GTP.GTID",S=w.Contains(",")?",(select T.AccountID GTID from ACC_Accounts T with(nolock),ACC_Accounts GT1 with(nolock) where T.lft BETWEEN GT1.lft AND GT1.rgt AND GT1.AccountID IN ("+w+") group by T.AccountID\nunion select T.AccountID GTID from ACC_Accounts T with(nolock) where T.IsGroup=1) AS GTP ":",(select T.AccountID GTID from ACC_Accounts T with(nolock),ACC_Accounts GT1 with(nolock) where T.lft BETWEEN GT1.lft AND GT1.rgt AND GT1.AccountID="+w+" group by T.AccountID\nunion select T.AccountID GTID from ACC_Accounts T with(nolock) where T.IsGroup=1) AS GTP ",m=!0):A=w.Contains(",")?"A.AccountID IN ("+w+")":"A.AccountID="+w),7==t&&i.a.SessionManager.Preferences.ContainsKey("ControlAccDimension")&&i.a.SessionManager.Preferences.ContainsKey("IsControlAccounts")&&"TRUE"==i.a.SessionManager.Preferences.IsControlAccounts.toUpperCase()&&(this.CADimension=parseInt(i.a.SessionManager.Preferences.ControlAccDimension));let R="",g="",x="",P=this.GetDimensionFilter("DCC.dcCCNID");(this.LocationWhere.length>0||this.Show==u.TagWise||P.length>0||this.CADimension>0)&&(g=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.AccDocDetailsID=ACC.AccDocDetailsID "+this.LocationWhere+P,x=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.InvDocDetailsID=ACC.InvDocDetailsID "+this.LocationWhere+P);let B="",b="",M="",L="",V="";this.Show==u.MonthWise?(B=",Mn",b=",CONVERT(DATETIME,DocDate) DocDate",V=",1 DocDate",M=7==this.ViewModel.StaticReportType?",'Y'+CONVERT(NVARCHAR,YEAR(DocDate))+'M'+(case when Month(DocDate)<10 then '0' else '' end)+ CONVERT(NVARCHAR,Month(DocDate)) Mn":",'Y'+CONVERT(NVARCHAR,YEAR(DocDate))+'M'+ CONVERT(NVARCHAR,Month(DocDate)) Mn",L=",YEAR(DocDate), MONTH(DocDate)"):this.Show==u.QtrWise||this.Show==u.HalfYearWise?(B=",Mn",b=",CONVERT(DATETIME,DocDate) DocDate",V=",1 DocDate",M=",CONVERT(NVARCHAR,YEAR(DocDate))+'-'+ CONVERT(NVARCHAR,Month(DocDate)) Mn",L=",YEAR(DocDate), MONTH(DocDate)"):this.Show==u.YearWise?1==this.AccountingFromMonth?(B=",Mn",b=",CONVERT(DATETIME,DocDate) DocDate",V=",1 DocDate",M=",'Y'+CONVERT(NVARCHAR,YEAR(DocDate)) Mn",L=",YEAR(DocDate)"):(B=",Mn",b=",CONVERT(DATETIME,DocDate) DocDate",V=",1 DocDate",M=7==t?",case when MONTH(DocDate)<4 and YEAR(DocDate)!=1900 then YEAR(DocDate)-1 else YEAR(DocDate) end Mn":",case when MONTH(DocDate)<4 then YEAR(DocDate)-1 else YEAR(DocDate) end Mn",L=",YEAR(DocDate),MONTH(DocDate)"):this.Show==u.TagWise&&(B=",TagID Mn",b=",DCC.dcCCNID"+(this.TagID-5e4)+" TagID",V=b,M=",TagID",L=",TagID"),this.CADimension>0&&(B+=",CADID,A1CC.CCNID"+(this.CADimension-5e4)+" CAD",b+=",DCC.dcCCNID"+(this.CADimension-5e4)+" CADID",V+=",DCC.dcCCNID"+(this.CADimension-5e4)+" CADID",M+=",CADID",L+=",CADID"),I="";let f="";0==this.UnPostedDocsList.length?f=" AND (ACC.StatusID=369 or ACC.StatusID=429)":f+=" AND ACC.StatusID IN (369,429,"+this.UnPostedDocsList+")";let F="(ACC.StatusID=370 OR ACC.StatusID=439"+(this.IncludeTerminatedPDC?" OR ACC.StatusID=452":"")+(this.IncludeUnApprovedPDC?" OR ACC.StatusID=371 OR ACC.StatusID=441":"")+")";if(this.PDCInclude?(C=" AND ACC.DocumentType<>16 AND ("+F+" OR (ACC.DocumentType<>14 AND ACC.DocumentType<>19"+f+"))",I+=" AND ("+F+" OR (ACC.DocumentType<>14 AND ACC.DocumentType<>19"+f+"))"):(C=" AND ACC.DocumentType NOT IN (16,14,19)"+f,I+=" AND ACC.DocumentType<>14 AND ACC.DocumentType<>19"+f),7==t)R+="\nSELECT A.AccountCode,A.AccountName,ACC.Balance"+B+",ACC.OpDocBalance,A.AccountID,A.IsGroup,A.lft,A.rgt,A.AccountTypeID,A.Depth,A.BS IsSummary"+this.ViewModel.SelectTag,this.IsAccountWise&&(R+=",A.ParentID"),R+="\nFROM (",this.Show==u.YearWise&&1!=this.AccountingFromMonth&&(R+="select AccountID,'Y'+convert(nvarchar,Mn) Mn,sum(Balance) Balance,sum(OpDocBalance) OpDocBalance from ("),R+="\nSELECT T1.AccountID"+M.Replace(",CADID",",case when CA.AccountTypeID=6 or CA.AccountTypeID=7 then CADID else 1 end CADID")+",SUM(OP_Dr)+SUM(TR_Dr)-(SUM(OP_Cr)+SUM(TR_Cr)) Balance,SUM(OpDocDr)-SUM(OpDocCr) OpDocBalance\nFROM (",R+="\n--Opening Dr\nSELECT DebitAccount AccountID"+V+",ACC."+e+" OP_Dr,0 OP_Cr,0 TR_Dr,0 TR_Cr,case when ACC.DocumentType=16 then ACC."+e+" else 0 end OpDocDr,0 OpDocCr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+g+"\nWHERE (DocDate<@From OR (ACC.DocumentType=16"+f+")) "+I+s+"\nUNION ALL--Opening Cr\nSELECT CreditAccount AccountID"+V+",0 OP_Dr,ACC."+e+" OP_Cr,0 TR_Dr, 0 TR_Cr,0 OpDocDr,case when ACC.DocumentType=16 then ACC."+e+" else 0 end OpDocCr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+g+"\nWHERE (DocDate<@From OR (ACC.DocumentType=16"+f+"))  "+I+s+"\nUNION ALL--Transaction Dr\nSELECT DebitAccount AccountID"+b+",0 OP_Dr,0 OP_Cr,"+e+" TR_Dr,0 TR_Cr,0 OpDocDr,0 OpDocCr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+g+"\nWHERE (DocDate BETWEEN @From AND @To)"+C+s+"\nUNION ALL--Transaction Cr\nSELECT CreditAccount AccountID"+b+",0 OP_Dr,0 OP_Cr,0 TR_Dr,"+e+" TR_Cr,0 OpDocDr,0 OpDocCr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+g+"\nWHERE (DocDate BETWEEN @From AND @To)"+C+s,x.length>0&&(R+="\n--INEVENTORY DATA\nUNION ALL--Opening Dr\nSELECT DebitAccount AccountID"+V+",ACC."+e+" OP_Dr,0 OP_Cr,0 TR_Dr,0 TR_Cr,0 OpDocDr,0 OpDocCr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+x+"\nWHERE (DocDate<@From OR (ACC.DocumentType=16"+f+")) "+I+s+"\nUNION ALL--Opening Cr\nSELECT CreditAccount AccountID"+V+",0 OP_Dr,ACC."+e+" OP_Cr,0 TR_Dr, 0 TR_Cr,0 OpDocDr,0 OpDocCr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+x+"\nWHERE (DocDate<@From OR (ACC.DocumentType=16"+f+")) "+I+s+"\nUNION ALL--Transaction Dr\nSELECT DebitAccount AccountID"+b+",0 OP_Dr,0 OP_Cr,"+e+" TR_Dr,0 TR_Cr,0 OpDocDr,0 OpDocCr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+x+"\nWHERE (DocDate BETWEEN @From AND @To)"+C+s+"\nUNION ALL--Transaction Cr\nSELECT CreditAccount AccountID"+b+",0 OP_Dr,0 OP_Cr,0 TR_Dr,"+e+" TR_Cr,0 OpDocDr,0 OpDocCr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+x+"\nWHERE (DocDate BETWEEN @From AND @To)"+C+s);else{let t="";this.PDCInclude&&(t=" OR (DocDate<=@To AND (ACC.DocumentType=14 OR ACC.DocumentType=19) AND "+F+")",C=" AND ACC.DocumentType NOT IN (16,14,19) "+f),R+="\nSELECT distinct A.AccountCode,A.AccountName,ACC.Balance"+B+",A.AccountID,A.IsGroup,A.lft,A.rgt,A.AccountTypeID,A.Depth"+h+this.ViewModel.SelectTag,this.IsAccountWise&&(R+=",A.ParentID"),R+="\nFROM (",this.Show==u.YearWise&&1!=this.AccountingFromMonth&&(R+="select AccountID,'Y'+convert(nvarchar,Mn) Mn,sum(Balance) Balance from ("),R+="\nSELECT AccountID"+M+",SUM(TR_Dr)-SUM(TR_Cr) Balance\nFROM (",R+="\n--Transaction Dr\nSELECT DebitAccount AccountID"+b+",ACC."+e+" TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+g+"\nWHERE (((DocDate BETWEEN @From AND @To)"+C+")"+t+")"+s+"\nUNION ALL--Transaction Cr\nSELECT CreditAccount AccountID"+b+",0 TR_Dr,ACC."+e+" TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+g+"\nWHERE (((DocDate BETWEEN @From AND @To)"+C+")"+t+")"+s,x.length>0&&(R+="\n--INEVENTORY DATA\nUNION ALL--Transaction Dr\nSELECT DebitAccount AccountID"+b+",ACC."+e+" TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+x+"\nWHERE (DocDate BETWEEN @From AND @To)"+C+s+"\nUNION ALL--Transaction Cr\nSELECT CreditAccount AccountID"+b+",0 TR_Dr,ACC."+e+" TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+x+"\nWHERE (DocDate BETWEEN @From AND @To)"+C+s)}R+=") AS T1 ",this.CADimension>0&&(R+=" JOIN ACC_Accounts CA WITH(NOLOCK) ON CA.AccountID=T1.AccountID "),R+=" GROUP BY T1.AccountID"+L.Replace(",CADID",",case when CA.AccountTypeID=6 or CA.AccountTypeID=7 then CADID else 1 end"),this.CADimension>0&&(R+=",CA.AccountTypeID"),this.Show==u.YearWise&&1!=this.AccountingFromMonth&&(R+=") AS T1 GROUP BY AccountID,Mn"+(this.CADimension>0?"CADID":"")),R+="\n) AS ACC RIGHT JOIN ACC_Accounts A WITH(NOLOCK) ON A.AccountID=ACC.AccountID",this.HideZeroBudgetAccounts&&this.CurrentBudgetID>0&&(this.ShowBudget||this.ShowBudgetVariance)&&(R+=" inner join (SELECT AccountID FROM COM_BudgetAlloc with(nolock) WHERE BudgetDefID="+this.CurrentBudgetID+" GROUP BY AccountID) as T on T.AccountID=A.AccountID"),R+=this.ViewModel.FromTag,R+=S,this.CADimension>0&&(R+=" left JOIN COM_CCCCDATA A1CC WITH(NOLOCK) ON A1CC.CostCenterID=2 and A1CC.NodeID=A.AccountID"),R+="\nWHERE A.AccountID>1",R+=this.GetAccountWiseLocationWhere("A"),R+=this.ViewModel.HideCostCenterTree?" AND A.AccountTypeID IN ("+d+")":A.length>0?this.IsAccountWise||m?" AND ("+A+(this.CADimension>0?" or A1CC.CCNID40>1":"")+")":" AND (A.IsGroup=1 or ("+A+")"+(this.CADimension>0?" or A1CC.CCNID40>1":"")+")":" AND A.AccountTypeID IN ("+d+")",this.IsAccountWise?(R+=" AND A.IsGroup=0",R+="Code"==this.ViewModel.Preferences.TreeSortOn?" Order By AccountCode":"TreeOrder"==this.ViewModel.Preferences.TreeSortOn?" Order By lft":" Order By AccountName"):R+=" Order By lft",7!=this.ViewModel.StaticReportType||this.Show!=u.YearWise&&this.Show!=u.MonthWise||(R+=",Mn");let N="";N+="DECLARE @From FLOAT,@To FLOAT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.FromDate.Date.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.ToDate.Date.ToString("dd MMM yyyy")+"'))\n",N+=R,this.IsAccountWise&&(N+=" select AccountID,AccountCode,AccountName,AccountTypeID"+h+",lft,Depth,ParentID from acc_accounts A with(nolock) where IsGroup=1 Order By Depth");let O=new n.a;if(O.push("dsNew",i.a.report.ReportDataSetAsync("RPT022",this.ViewModel.IsReportDB,N)),(this.ShowPrevMonthData||this.ShowPrevMonthDiffData||this.ShowPrevMonthVarPer)&&O.push("dtPrevMonth",i.a.report.ReportDataSetAsync("RPT022",this.ViewModel.IsReportDB,"DECLARE @From FLOAT,@To FLOAT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.FromDate.Date.AddYears(-1).ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.ToDate.Date.AddYears(-1).ToString("dd MMM yyyy")+"'))\n"+R)),-1!=this.YTDIndex&&O.push("dvYTDTable",i.a.report.ReportDataTable("RPT022",this.ViewModel.IsReportDB,"DECLARE @From FLOAT,@To FLOAT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.dtYearStartMonth.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.ToDate.Date.ToString("dd MMM yyyy")+"'))\n"+R)),-1!=this.BAL_LYIndex&&O.push("dvBAL_LYTable",i.a.report.ReportDataTable("RPT022",this.ViewModel.IsReportDB,"DECLARE @From FLOAT,@To FLOAT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.FromDate.Date.AddYears(-1).ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.ToDate.Date.AddYears(-1).ToString("dd MMM yyyy")+"'))\n"+R)),-1!=this.YTD_LYIndex&&O.push("dvYTD_LYTable",i.a.report.ReportDataTable("RPT022",this.ViewModel.IsReportDB,"DECLARE @From FLOAT,@To FLOAT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.dtYearStartMonth.AddYears(-1).ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ViewModel.oReportDialog.ToDate.Date.AddYears(-1).ToString("dd MMM yyyy")+"'))\n"+R)),this.dsOpenCompany=null,this.dblDrOpBalDiff=0,7==t&&Object(l.j)(i.a.SessionManager.Preferences.OpenCompany)){let t="";this.YearSlots.length>0&&(t+="<XML>",this.YearSlots.keys.forEach(e=>{t+='<Row ID="'+e+'" EndDate="'+this.YearSlots[e].ToString("dd MMM yyyy")+'" />'}),t+="</XML>"),O.push("dsOpenCompany",i.a.report.GetOpenCompanyData(7,this.ViewModel.oReportDialog.FromDate.Date,this.ViewModel.oReportDialog.ToDate.Date,this.TagID,this.LocationWhere+P,!1,this.UnPostedDocsList,this.PDCInclude,this.IncludeTerminatedPDC,t.toString(),this.CurrencyType,this.ForeignCurrencyID,this.exchRate,this.ViewModel.IsReportDB))}return Promise.all(O.values).then(e=>{let s;if(this.dsNew=e[0],this.dsList.push(this.dsNew),this.dv=this.dsNew.Tables[0],this.dvTable=this.dsNew.Tables[0],this.dvColumns=this.dsNew.Columns[0],this.CADimension>0&&this.RefreshCAD(this.dsNew.Tables[0]),this.ShowSalesPercentage&&(5==t||6==t)){let e,s;s=this.dsNew.Tables[0].filter(5==t?t=>4==t.AccountTypeID||8==t.AccountTypeID:t=>4==t.AccountTypeID||8==t.AccountTypeID||11==t.AccountTypeID),e=s.Compute("sum","Balance"),null!=e&&(this.dblTotalSales=-parseFloat(e)),this.ShowSalesPerMonthly&&this.lstTags.forEach(t=>{if(this.Show==u.QtrWise){let i=new Date(parseInt(t.substr(1,4)),parseInt(t.substr(6))-1,1),o=[i.ToString("yyyy-M"),i.AddMonths(1).ToString("yyyy-M"),i.AddMonths(2).ToString("yyyy-M")];e=s.filter(t=>o.Contains(t.Mn)).Compute("sum","Balance")}else if(this.Show==u.HalfYearWise){let i=new Date(parseInt(t.substr(1,4)),parseInt(t.substr(6))-1,1),o=[i.ToString("yyyy-M"),i.AddMonths(1).ToString("yyyy-M"),i.AddMonths(2).ToString("yyyy-M"),i.AddMonths(3).ToString("yyyy-M"),i.AddMonths(4).ToString("yyyy-M"),i.AddMonths(5).ToString("yyyy-M")];e=s.filter(t=>o.Contains(t.Mn)).Compute("sum","Balance")}else e=s.filter(e=>e.Mn==t).Compute("sum","Balance");if(null!=e){let s=-parseFloat(e);s>0&&this.lstTagSalesTotal.push(t,s)}})}if(O.ContainsKey("dtPrevMonth")){s=O.keys.indexOf("dtPrevMonth");let t=e[s].Tables[0];for(let i=0;i<t.length;i++){let o=t[i];if(null==o.Mn)continue;let l={};for(let t=0;t<e[s].Columns[0].length;t++)l[e[s].Columns[0][t]]=o[e[s].Columns[0][t]];let h=this.dsNew.Tables[0].filter(t=>t.AccountID==o.AccountID);h.length>0?this.dsNew.Tables[0].InsertAt(l,this.dsNew.Tables[0].indexOf(h[0])):(this.dsNew.Tables[0].push(l),t.Columns.Contains("lft"))}}if(O.ContainsKey("dvYTDTable")&&(s=O.keys.indexOf("dvYTDTable"),this.dvYTDTable=e[s].Tables[0],this.dsNew.Columns[0].push("YTD")),O.ContainsKey("dvBAL_LYTable")&&(s=O.keys.indexOf("dvBAL_LYTable"),this.dvBAL_LYTable=e[s].Tables[0],this.dsNew.Columns[0].push("LastYearBalance")),O.ContainsKey("dvYTD_LYTable")&&(s=O.keys.indexOf("dvYTD_LYTable"),this.dvYTD_LYTable=e[s].Tables[0],this.dsNew.Columns[0].push("LastYearYTD")),this.SetBudgetDataSet(S,A),7==this.ViewModel.StaticReportType){this.dblOpeningBalanceDifference=0;let t=this.dsNew.Tables[0].Compute("sum","OpDocBalance");null!=t&&(this.dblOpeningBalanceDifference=-parseFloat(t)),this.lstTagsOpeningBalance.Clear(),this.Show==u.TagWise&&this.lstTagColumns.forEach(e=>{this.dblTemp=0,t=this.dsNew.Tables[0].filter(t=>t.Mn==e).Compute("sum","OpDocBalance"),null!=t&&(this.dblTemp=-parseFloat(t)),0!=this.dblTemp&&this.lstTagsOpeningBalance.push(e,this.dblTemp)})}if(O.ContainsKey("dsOpenCompany")){s=O.keys.indexOf("dsOpenCompany"),this.dsOpenCompany=e[s],this.dsOpenCompany.Tables[0].forEach(t=>{t.Dr=-parseFloat(t.Dr),t.Cr=-parseFloat(t.Cr)}),this.dsOpenCompany.Tables[1].length>0&&(this.FirstAccountID=null!=this.dsOpenCompany.Tables[1][0].FirstAccount?parseInt(this.dsOpenCompany.Tables[1][0].FirstAccount):0,null!=this.dsOpenCompany.Tables[1][0].PreviousYearEndDate&&new Date(this.dsOpenCompany.Tables[1][0].PreviousYearEndDate)>=this.ViewModel.oReportDialog.ToDate.Date&&(this.LastAccountID=parseInt(this.dsOpenCompany.Tables[1][0].LastAccount)));let t="";if(this.ViewModel.oReportDialog.Locations.Visible&&null!=this.ViewModel.oReportDialog.LocationWhere&&(t=o.e.IsEmpty(this.ViewModel.oReportDialog.LocationWhere)?"-1":this.ViewModel.oReportDialog.LocationWhere),this.IncludeOpeningStock||this.IncludeClosingStock)if(this.Show==u.TagWise)this.IncludeOpeningStock&&this.SetStockBalance(!0),this.IncludeClosingStock&&this.SetStockBalance(!1);else if(0==this.dsOpenCompany.Tables[2].length);else{this.dblTemp=0,this.dsOpenCompany.Tables[2].Columns.push("OpStock"),this.dsOpenCompany.Tables[2].Columns.push("ClStock"),this.dsOpenCompany.Tables[2].Columns.push("DiffStock");for(let t=0;t<this.dsOpenCompany.Tables[2].length;t++);this.dblOpeningStock=this.dblTemp}this.dblAccountsDrOpBalDiff=0,this.dblAccountsCrOpBalDiff=0;let i=new Array;if(this.YearSlots.length>0){for(let t=this.dsOpenCompany.Tables[0].length-1;t>0;t--)this.dsOpenCompany.Tables[0][t].Dr=parseFloat(this.dsOpenCompany.Tables[0][t].Dr)-parseFloat(this.dsOpenCompany.Tables[0][t-1].Dr),this.dsOpenCompany.Tables[0][t].Cr=parseFloat(this.dsOpenCompany.Tables[0][t].Cr)-parseFloat(this.dsOpenCompany.Tables[0][t-1].Cr);for(let t=0;t<this.dsOpenCompany.Tables[0].length;t++){let e=this.dsOpenCompany.Tables[0][t];if(this.dv=this.dvTable.filter(t=>t.AccountID==e.AccountID),this.dv.length>0){let t=0,s=null;for(t=0;t<this.dv.length;t++){if(null==this.dv[t].Mn||o.e.String(e.Mn)==o.e.String(this.dv[t].Mn)){s=this.dv[t];break}if(this.Show==u.MonthWise){let i=o.e.String(e.Mn).split("M"),l=new Date(parseInt(i[0].substr(1,4)),parseInt(i[1])-1,1);if(i=o.e.String(this.dv[t].Mn).split("M"),l<new Date(parseInt(i[0].substr(1,4)),parseInt(i[1])-1,1)){s=this.dv[t];break}}else if(this.Show==u.YearWise&&parseFloat(e.Mn.toString().substr(1,4))<parseFloat(this.dv[t].Mn.toString().substr(1,4))){s=this.dv[t];break}}if(null!=s&&o.e.String(e.Mn)==o.e.String(s.Mn));else{let t={};for(let e=0;e<this.dvColumns.length;e++)t[this.dvColumns[e]]=this.dv[0][this.dvColumns[e]];if(t.Mn=o.e.String(e.Mn),t.Balance=0,null!=s){let e=this.dvTable.indexOf(s);this.dvTable.InsertAt(t,e),null==s.Mn&&this.dvTable.Remove(s)}else{let e=this.dvTable.indexOf(this.dv[this.dv.length-1]);this.dvTable.InsertAt(t,e+1)}s=t}this.dbl=o.e.Double(s.Balance),o.e.String(e.Mn)==this.oColumns[this.CellStartPos+this.ColumnSize].ID&&(this.dblAccountsDrOpBalDiff=parseFloat(e.Dr),this.dblAccountsCrOpBalDiff=parseFloat(e.Cr)),this.dbl=this.dbl+parseFloat(e.Dr)-parseFloat(e.Cr),s.Balance=this.dbl,i.Contains(s)||i.push(s)}}}else this.dsOpenCompany.Tables[0].forEach(t=>{if(this.Show==u.TagWise){if(this.dv=this.dvTable.filter(e=>e.AccountID==t.AccountID&&e.Mn==t.TagID),0==this.dv.length){if(this.dv=this.dvTable.filter(e=>e.AccountID==t.AccountID&&Object(r.isNullOrUndefined)(e.Mn)),this.dv.length>0)this.dv[0].Mn=t.TagID;else{this.dv=this.dvTable.filter(e=>e.AccountID==t.AccountID);let e={};for(let t=0;t<this.dvColumns.length;t++)e[this.dvColumns[t]]=this.dv[0][this.dvColumns[t]];e.Mn=t.TagID,e.Balance=null,this.dvTable.InsertAt(e,this.dvTable.indexOf(this.dv[0]))}this.dv=this.dvTable.filter(e=>e.AccountID==t.AccountID&&e.Mn==t.TagID)}}else this.dv=this.dvTable.filter(e=>e.AccountID==t.AccountID);if(this.dv.length>0){if(this.dbl=o.e.Double(this.dv[0].Balance),this.dblAccountsDrOpBalDiff+=parseFloat(t.Dr),this.dblAccountsCrOpBalDiff+=parseFloat(t.Cr),this.dbl=this.dbl+parseFloat(t.Dr)-parseFloat(t.Cr),this.IncludeClosingStock||this.IncludeOpeningStock){let e=this.dsOpenCompany.Tables[2].filter(e=>e.AccountID==t.AccountID).Compute("sum","DiffStock");null!=e&&(this.dbl-=parseFloat(e))}this.dv[0].Balance=this.dbl}});this.dblDrOpBalDiff>0&&(this.dblDrOpBalDiff=Math.abs(this.dblDrOpBalDiff-this.dblAccountsDrOpBalDiff)),this.dblCrOpBalDiff>0&&(this.dblCrOpBalDiff=Math.abs(this.dblCrOpBalDiff-this.dblAccountsCrOpBalDiff)),this.dblDrOpBalDiff=this.dblDrOpBalDiff-this.dblCrOpBalDiff,this.dv=this.dvTable,0!=this.LastAccountID&&(this.IgnoreGrossRowsForBS=!0)}for(let t=0;t<this.CountMonths;t++)this.dsNew.Columns[0].push(this.oColumns[this.ColumnSize+t].ID);this.ReportFormat!=p.Plain&&(this.dv1=this.dv1Table=this.dsNew.Tables[0],this.dv2=this.dv2Table=this.dsNew.Tables[0],this.dv1Columns=this.dsNew.Columns[0],this.dv2Columns=this.dsNew.Columns[0],this.dv1=this.dv1.filter(t=>c.split(",").Contains(t.AccountTypeID.toString())),this.dv2=this.dv2.filter(t=>T.split(",").Contains(t.AccountTypeID.toString())));let h=this.dsNew.Tables[0].filter(t=>t.AccountID==this.RetainedEarningAccount);if(h.length>0){let t,e=0,s=this.dsNew.Tables[0].filter(t=>c.split(",").Contains(t.AccountTypeID.toString())).Compute("sum","Balance");null!=s&&(t=o.e.Double(s),e=t),s=this.dsNew.Tables[0].filter(t=>T.split(",").Contains(t.AccountTypeID.toString())).Compute("sum","Balance"),null!=s&&(t=o.e.Double(s),e+=t),e+=this.dblOpeningBalanceDifference,this.IsIncome=this.IncomeAccounts.Contains(parseInt(h[0].AccountTypeID)),t=o.e.Double(h[0].Balance),t-=e,t-=this.dblClosingStock-this.dblOpeningStock,this.dblDrOpBalDiff>0?t-=this.dblDrOpBalDiff:t+=this.dblDrOpBalDiff,h[0].Balance=t,-1!=this.YTDIndex&&(this.dvYTD=this.dvYTDTable.filter(t=>t.AccountID==this.RetainedEarningAccount),this.dvYTD.length>0&&(s=this.dvYTD.filter(t=>c.split(",").Contains(t.AccountTypeID.toString())).Compute("sum","Balance"),null!=s&&(t=o.e.Double(s),this.dblTemp=t),s=this.dvYTD.filter(t=>T.split(",").Contains(t.AccountTypeID.toString())).Compute("sum","Balance"),null!=s&&(t=o.e.Double(s),this.dblTemp=this.dblTemp+t),t=o.e.Double(this.dvYTD[0].Balance),this.dvYTD[0].Balance=t-this.dblTemp)),7==this.ViewModel.StaticReportType&&Object(l.j)(i.a.SessionManager.Preferences.OpenCompany)&&(this.IgnoreGrossRowsForBS=!0)}if(this.IsAccountWise&&this.UpdateDataTableWithGroups(),this.Show==u.TagWise&&this.HideEmptyDimensions){let t=!1;if(this.lstTagColumns.forEach(e=>{var s=this.oColumns.find(t=>t.ID==e);s&&(0==this.dsNew.Tables[0].filter(t=>t.Mn==s.ID).length?this.lstTagVisibleColumns.Contains(e)||(s.HeaderAppearance.IsVisible=!1,null!=(s=this.oColumns.find(t=>t.ID=="Budget"+e))&&(s.HeaderAppearance.IsVisible=!1),null!=(s=this.oColumns.find(t=>t.ID=="Variance"+e))&&(s.HeaderAppearance.IsVisible=!1),null!=(s=this.oColumns.find(t=>t.ID=="PercentVariance"+e))&&(s.HeaderAppearance.IsVisible=!1),t=!0):(s.HeaderAppearance.IsVisible=!0,this.lstTagVisibleColumns.push(e)))}),t){let t=new Array;this.oColumns.forEach(e=>{t.push(e)}),this.ViewModel.ReportColumns=t}}})}SetBudgetDataSet(t,e){if(this.dvPrevBudget=null,this.dvCurrentBudget=null,this.dvCurrentBudgetTable=null,this.ShowBudget||this.ShowBudgetVariance||this.ShowBudgetVariancePercent||this.ShowTotalBudget){if(null==this.dsBudget){let t,e="",o="",l="";var s=this.ViewModel.oReportDialog.CostCenterFilters.Where(t=>t.CostCenterID>5e4&&t.SelectedNodes.length>0);if(s.length>0){let t="SELECT CostCenterID FROM COM_BudgetDefDims with(nolock) WHERE BudgetDefID="+this.CurrentBudgetID+" and CostCenterID>50000";this.PreviousBudgetID>0&&(-1!=this.BAL_LYIndex||-1!=this.YTD_LYIndex)&&(t+=" SELECT CostCenterID FROM COM_BudgetDefDims with(nolock) WHERE BudgetDefID="+this.PreviousBudgetID+" and CostCenterID>50000");let e=i.a.report.ReportDataSet("RPT022",this.ViewModel.IsReportDB,t);e.Tables[0].forEach(t=>{if(s.find(e=>e.CostCenterID==parseInt(t.CostCenterID))){let e=this.GetFilterByDimension_1(parseInt(t.CostCenterID));e.length>0&&(o+=" AND CCNID"+(parseInt(t.CostCenterID)-5e4)+" IN ("+e+")")}}),e.Tables.length>1&&e.Tables[1].forEach(t=>{if(s.find(e=>e.CostCenterID==parseInt(t.CostCenterID))){let e=this.GetFilterByDimension_1(parseInt(t.CostCenterID));e.length>0&&(l+=" AND CCNID"+(parseInt(t.CostCenterID)-5e4)+" IN ("+e+")")}})}if(this.Show==u.TagWise){e+="SELECT AccountID,CCNID"+(this.TagID-5e4)+" TagID,SUM(AnnualAmount) AnnualAmount",t=this.dtYearStartMonth;for(let s=1;s<=12;s++)e+=",SUM(Month"+s+"Amount) "+t.ToString("MMMyyyy"),t=t.AddMonths(1);if(e+=" FROM COM_BudgetAlloc with(nolock) WHERE BudgetDefID="+this.CurrentBudgetID,e+=o.toString(),e+=" GROUP BY AccountID,CCNID"+(this.TagID-5e4),this.PreviousBudgetID>0&&(-1!=this.BAL_LYIndex||-1!=this.YTD_LYIndex)){e+=" SELECT AccountID,CCNID"+(this.TagID-5e4)+" TagID,SUM(AnnualAmount) AnnualAmount",t=this.dtYearStartMonth;for(let s=1;s<=12;s++)e+=",SUM(Month"+s+"Amount) "+t.ToString("MMMyyyy"),t=t.AddMonths(1);e+=" FROM COM_BudgetAlloc with(nolock) WHERE BudgetDefID="+this.PreviousBudgetID,e+=l.toString(),e+=" GROUP BY AccountID,CCNID"+(this.TagID-5e4)}}else{e+="SELECT AccountID,SUM(AnnualAmount) AnnualAmount",t=this.dtYearStartMonth;for(let s=1;s<=12;s++)e+=",SUM(Month"+s+"Amount) "+t.ToString("MMMyyyy"),t=t.AddMonths(1);if(e+=" FROM COM_BudgetAlloc with(nolock) WHERE BudgetDefID="+this.CurrentBudgetID,e+=o.toString(),e+=" GROUP BY AccountID",this.PreviousBudgetID>0&&(-1!=this.BAL_LYIndex||-1!=this.YTD_LYIndex)){e+=" SELECT AccountID,SUM(AnnualAmount) AnnualAmount",t=this.dtYearStartMonth;for(let s=1;s<=12;s++)e+=",SUM(Month"+s+"Amount) "+t.ToString("MMMyyyy"),t=t.AddMonths(1);e+=" FROM COM_BudgetAlloc with(nolock) WHERE BudgetDefID="+this.PreviousBudgetID,e+=l.toString(),e+=" GROUP BY AccountID"}}this.dsBudget=i.a.report.ReportDataSet("RPT022",this.ViewModel.IsReportDB,e)}this.dvCurrentBudget=this.dvCurrentBudgetTable=this.dsBudget.Tables[0],this.dsBudget.Tables.length>1&&(this.dvPrevBudget=this.dvPrevBudgetTable=this.dsBudget.Tables[1]),this.dsNew.Columns[0].push("BudgetBalance"),this.dsNew.Columns[0].push("VarianceBalance"),this.dsNew.Columns[0].push("PercentVarianceBalance"),-1!=this.YTDIndex&&(this.dsNew.Columns[0].push("BudgetYTD"),this.dsNew.Columns[0].push("VarianceYTD"),this.dsNew.Columns[0].push("PercentVarianceYTD")),-1!=this.BAL_LYIndex&&(this.dsNew.Columns[0].push("BudgetLastYearBalance"),this.dsNew.Columns[0].push("VarianceLastYearBalance"),this.dsNew.Columns[0].push("PercentVarianceLastYearBalance")),-1!=this.YTD_LYIndex&&(this.dsNew.Columns[0].push("BudgetLastYearYTD"),this.dsNew.Columns[0].push("VarianceLastYearYTD"),this.dsNew.Columns[0].push("PercentVarianceLastYearYTD"))}}SetDataSetForPostFilters(t,e){let s="",h="",a="",n="";5==t?(a="4,8",n="5,9",this.IncomeAccounts.push(4),this.IncomeAccounts.push(8)):6==t?(a="4,8,11",n="5,9,12",s=",A.PL IsSummary",h=",A.PL",this.IncomeAccounts.push(4),this.IncomeAccounts.push(8),this.IncomeAccounts.push(11)):7==t?(a="13,15,1,2,7",n="14,16,6,3",s=",A.BS IsSummary",h=",A.BS",this.IncomeAccounts.push(15),this.IncomeAccounts.push(13),this.IncomeAccounts.push(1),this.IncomeAccounts.push(2),this.IncomeAccounts.push(7)):8==t&&(a="11",n="12",this.IncomeAccounts.push(11)),this.dv=this.dvTable=this.dsNew.Tables[0],this.dvColumns=this.dsNew.Columns[0],this.dsOpenCompany=null,this.dblDrOpBalDiff=0,7==t&&Object(l.j)(i.a.SessionManager.Preferences.OpenCompany)&&(this.dsOpenCompany=i.a.report.GetOpenCompanyData(7,this.ViewModel.oReportDialog.FromDate.Date,this.ViewModel.oReportDialog.ToDate.Date,0,this.LocationWhere,!1,this.UnPostedDocsList,this.PDCInclude,this.IncludeTerminatedPDC,"",this.CurrencyType,this.ForeignCurrencyID,this.exchRate,this.ViewModel.IsReportDB),this.dblAccountsDrOpBalDiff=0,this.dblAccountsCrOpBalDiff=0,this.dsOpenCompany.Tables[0].forEach(t=>{this.dv=this.dvTable.filter(e=>e.AccountID==t.AccountID),this.dv.length>0&&(this.dbl=o.e.Double(this.dv[0].Balance),this.dblAccountsDrOpBalDiff+=parseFloat(t.Dr),this.dblAccountsCrOpBalDiff+=parseFloat(t.Cr),this.dbl=this.dbl+parseFloat(t.Dr)-parseFloat(t.Cr),this.dv[0].Balance=this.dbl)}),this.dblDrOpBalDiff>0&&(this.dblDrOpBalDiff=Math.abs(this.dblDrOpBalDiff-this.dblAccountsDrOpBalDiff)),this.dblCrOpBalDiff>0&&(this.dblCrOpBalDiff=Math.abs(this.dblCrOpBalDiff-this.dblAccountsCrOpBalDiff)),this.dblDrOpBalDiff=this.dblDrOpBalDiff-this.dblCrOpBalDiff,this.dv=this.dvTable),this.ReportFormat!=p.Plain?(this.dv1=this.dv1Table=this.dsNew.Tables[0],this.dv2=this.dv2Table=this.dsNew.Tables[0],this.dv1=this.dv1.filter(t=>a.split(",").Contains(t.AccountTypeID.toString())),this.dv2=this.dv2.filter(t=>n.split(",").Contains(t.AccountTypeID.toString())),this.dv1=c.a.FilterData(this.dv1,this.ViewModel.PostDataFetchFilterFields),this.dv2=c.a.FilterData(this.dv2,this.ViewModel.PostDataFetchFilterFields)):e.length>0&&(this.dv=c.a.FilterData(this.dv,this.ViewModel.PostDataFetchFilterFields));let r=this.dsNew.Tables[0].filter(t=>t.AccountID==this.RetainedEarningAccount);if(r.length>0){let t=0,e=0,s=this.dv1Table.filter(t=>a.split(",").Contains(t.AccountTypeID.toString())).Compute("sum","Balance");null!=s&&(e=o.e.Double(s),t=e),s=this.dv1Table.filter(t=>n.split(",").Contains(t.AccountTypeID.toString())).Compute("sum","Balance"),null!=s&&(e=o.e.Double(s),t+=e),this.IsIncome=this.IncomeAccounts.Contains(parseInt(r[0].AccountTypeID)),e=o.e.Double(r[0].Balance),e-=t,this.dblDrOpBalDiff>0?e-=this.dblDrOpBalDiff:e+=this.dblDrOpBalDiff,r[0].Balance=e}}RefreshCAD(t){let e=new n.c;for(let s=t.length-1;s>=0;s--)if(null!=t[s].CADID&&parseInt(t[s].CADID)>1){let i=parseInt(t[s].CADID);if(!e.ContainsKey(i)){let s=t.filter(t=>t.CAD==i);s.length>0&&e.push(i,s[0])}e.ContainsKey(i)&&(null!=t[s].Balance&&(e[i].Balance=null==e[i].Balance?t[s].Balance:parseFloat(e[i].Balance)+parseFloat(t[s].Balance)),null!=t[s].OpDocBalance&&(e[i].OpDocBalance=null==e[i].OpDocBalance?t[s].OpDocBalance:parseFloat(e[i].OpDocBalance)+parseFloat(t[s].OpDocBalance)),e.values.Contains(t[s])||t.RemoveAt(s))}}LoadReportWithPostFilters(t){this.GrdRow=-1,this.CellStartPos=0,this.ReportRowStartIndex=-1,this.FirstTypeEndIndex=0,this.ReportTotal=new Array(2).fill(0),this.lstTotal=new Array,this.GrossRows[0]=null,this.GrossRows[1]=null,this.ShowIncomeFirst="Income"==this.ViewModel.Preferences.ShowFirst,this.ViewModel.ClearRows(),this.TempData.Clear(),8!=this.ViewModel.StaticReportType?(this.dsNew=this.dsList[0],this.SetDataSetForPostFilters(this.ViewModel.StaticReportType,t),this.ReportFormat==p.Plain?this.LoadPlainReport():this.LoadHorizontalVerticalReports()):(this.OldReportTotalMonthWise=null,this.dsNew=this.dsList[0],this.SetDataSetForPostFilters(5,t),this.LoadHorizontalVerticalReports(),this.Olddbl=this.dbl,this.CellStartPos=0,this.ReportRowStartIndex=this.GrdRow,this.ReportTotal[0]=this.ReportTotal[1]=0,this.ShowIncomeFirst=!(!this.ViewModel.Preferences.ContainsKey("ShowFirst2")||"Income"!=this.ViewModel.Preferences.ShowFirst2),this.dsNew=this.dsList[1],this.SetDataSetForPostFilters(8,t),this.LoadHorizontalVerticalReports()),this.LoadReportComplete()}GetQuarterID(t){for(let e=0;e<this.QtrSlot.keys.length;e++)if(this.QtrSlot.values[e].dtStart<=t&&this.QtrSlot.values[e].dtEnd>=t)return this.QtrSlot.keys[e];return""}LoadHorizontalVerticalReports(){this.ReportTotalMonthWise=o.e.NumArray(2,this.CountMonths+4),this.ReportTotalYTD=o.e.NumArray(2,3),this.ReportTotalALL=o.e.NumArray(2,this.oColumns.length),this.strIncomeLabel=7==this.ViewModel.StaticReportType?i.a.GetResource("Reports_LblAssets").toUpperCase():i.a.GetResource("Reports_LblIncome").toUpperCase(),this.strExpenseLabel=7==this.ViewModel.StaticReportType?i.a.GetResource("Reports_LblLiabilities").toUpperCase():i.a.GetResource("Reports_LblExpneses").toUpperCase(),8!=this.ViewModel.StaticReportType?(this.ViewModel.Preferences.ContainsKey("Income1Label")&&(this.strIncomeLabel=this.ViewModel.Preferences.Income1Label),this.ViewModel.Preferences.ContainsKey("Expneses1Label")&&(this.strExpenseLabel=this.ViewModel.Preferences.Expneses1Label)):-1==this.ReportRowStartIndex?this.ViewModel.Preferences.ContainsKey("Income1Label")&&(this.strIncomeLabel=this.ViewModel.Preferences.Income1Label,this.strExpenseLabel=this.ViewModel.Preferences.Expneses1Label):this.ViewModel.Preferences.ContainsKey("Income2Label")&&(this.strIncomeLabel=this.ViewModel.Preferences.Income2Label,this.strExpenseLabel=this.ViewModel.Preferences.Expneses2Label),this.AddSection(this.ShowIncomeFirst,!0),this.AddSection(!this.ShowIncomeFirst,!1),this.AddOpenBalanceDifference(),7==this.ViewModel.StaticReportType?(this.AddOpenBalanceDifferenceForBS(),this.dbl=this.ReportTotal[0]+this.ReportTotal[1],this.ShowGrossInIncome=!(this.dbl>=0),Math.abs(this.ReportTotal[0])>Math.abs(this.ReportTotal[1])?this.ReportTotal[1]=this.ReportTotal[1]-this.dbl:this.ReportTotal[0]=this.ReportTotal[0]-this.dbl,this.dbl<0&&(this.dbl=-this.dbl)):(this.dbl=this.ReportTotal[0]+this.ReportTotal[1],this.ShowGrossInIncome=this.dbl>=0,this.GrossAtEnd&&-1==this.ReportRowStartIndex||this.NetAtEnd&&-1!=this.ReportRowStartIndex||(Math.abs(this.ReportTotal[0])>Math.abs(this.ReportTotal[1])?(this.ReportTotal[1]=this.ReportTotal[1]-this.dbl,this.AddGrossToVariance&&(this.ShowBudgetVariance&&(this.ReportTotalALL[1][this.BalIndex+1]=this.ReportTotalALL[1][this.BalIndex+1]+this.dbl),this.ShowBudgetVariancePercent&&(this.ReportTotalALL[1][this.BalIndex+this.VariancePercentIndex]=this.ReportTotalALL[1][this.BalIndex+this.VariancePercentIndex]+this.dbl))):(this.ReportTotal[0]=this.ReportTotal[0]-this.dbl,this.AddGrossToVariance&&(this.ShowBudgetVariance&&(this.ReportTotalALL[0][this.BalIndex+1]=this.ReportTotalALL[0][this.BalIndex+1]+this.dbl),this.ShowBudgetVariancePercent&&(this.ReportTotalALL[0][this.BalIndex+this.VariancePercentIndex]=this.ReportTotalALL[0][this.BalIndex+this.VariancePercentIndex]+this.dbl)))),this.dbl<0&&(this.dbl=-this.dbl)),this.AddReportTotal(this.ShowIncomeFirst,!0),this.AddReportTotal(!this.ShowIncomeFirst,!1)}AddSection(t,e){let s,i,h;this.IsIncome=t,this.IsFirstCall=e,this.lstParents.Clear(),this.lstTotal.Clear(),e||(this.FirstTypeEndIndex=this.GrdRow,this.ReportFormat==p.Horizontal&&(this.GrdRow=this.ReportRowStartIndex,this.CellStartPos=this.CellStartPos+this.ColumnSize)),t?(this.dv=this.dv1,this.dvTable=this.dv1Table,this.dvColumns=this.dv1Columns,this.ReportTotalIndex=0,this.AddGroup(this.strIncomeLabel)):(this.dv=this.dv2,this.dvTable=this.dv2Table,this.dvColumns=this.dv2Columns,this.ReportTotalIndex=1,this.AddGroup(this.strExpenseLabel)),-1!=this.ReportRowStartIndex?this.AddRow_BF():t||this.AddOpeningStock();for(let a=0;a<this.dv.length;a++)if(this.drAccount=this.dv[a],t=this.IncomeAccounts.Contains(parseInt(this.drAccount.AccountTypeID)),this.strAccountID=this.drAccount.AccountID.toString(),i=!1,Object(l.j)(this.drAccount.IsGroup))this.dbl=0,this.AddRow();else{if(this.Show!=u.None){if(this.dblTemp=0,this.AccountID=parseInt(this.drAccount.AccountID),this.strTemp=o.e.String(this.drAccount.Mn),7!=this.ViewModel.StaticReportType||this.Show!=u.MonthWise&&this.Show!=u.YearWise){for(this.strTemp.length>0&&(this.Show!=u.QtrWise&&this.Show!=u.HalfYearWise||(this.strTemp=this.GetQuarterID(new Date(parseInt(this.strTemp.split("-")[0]),parseInt(this.strTemp.split("-")[1])-1,1))),this.dblTemp=this.lstPMTags.Contains(this.strTemp)?0:parseFloat(this.drAccount.Balance),i=this.Show!=u.TagWise||Math.abs(this.dblTemp)>1e-4,this.dvColumns.Contains(this.strTemp)&&(this.drAccount[this.strTemp]=this.drAccount.Balance),this.ShowSalesPerMonthly&&this.lstTagSalesTotal.ContainsKey(this.strTemp)&&(this.drAccount["SalesPercentage_"+this.strTemp]=100*this.dblTemp/this.lstTagSalesTotal[this.strTemp]));a+1<this.dv.length&&this.AccountID==parseInt(this.dv[a+1].AccountID);)this.strTemp=o.e.String(this.dv[a+1].Mn),this.strTemp.length>0&&(this.Show==u.QtrWise||this.Show==u.HalfYearWise?(this.strTemp=this.GetQuarterID(new Date(parseInt(this.strTemp.split("-")[0]),parseInt(this.strTemp.split("-")[1])-1,1)),this.lstPMTags.Contains(this.strTemp)||(this.dblTemp=this.dblTemp+parseFloat(this.dv[a+1].Balance)),this.dvColumns.Contains(this.strTemp)&&(this.drAccount[this.strTemp]=null==this.drAccount[this.strTemp]?this.dv[a+1].Balance:parseFloat(this.drAccount[this.strTemp])+parseFloat(this.dv[a+1].Balance),this.ShowSalesPerMonthly&&this.lstTagSalesTotal.ContainsKey(this.strTemp)&&null!=this.drAccount[this.strTemp]&&(this.drAccount["SalesPercentage_"+this.strTemp]=100*parseFloat(this.drAccount[this.strTemp])/this.lstTagSalesTotal[this.strTemp]))):(this.lstPMTags.Contains(this.strTemp)||(this.dblTemp=this.dblTemp+parseFloat(this.dv[a+1].Balance),i||this.Show!=u.TagWise||(i=Math.abs(parseFloat(this.dv[a+1].Balance))>1e-4)),this.dvColumns.Contains(this.strTemp)&&(this.drAccount[this.strTemp]=this.dv[a+1].Balance,this.ShowSalesPerMonthly&&this.lstTagSalesTotal.ContainsKey(this.strTemp)&&null!=this.drAccount[this.strTemp]&&(this.drAccount["SalesPercentage_"+this.strTemp]=100*parseFloat(this.drAccount[this.strTemp])/this.lstTagSalesTotal[this.strTemp])))),this.dv.Remove(this.dv[a+1]);if(this.ShowPrevMonthDiffData)for(let t=0;t<this.lstTags.length;t++)this.dvColumns.Contains(this.lstTags[t])&&this.dvColumns.Contains(this.lstPMTags[t])&&(this.drAccount["DIFF_"+this.lstTags[t]]=(null==this.drAccount[this.lstTags[t]]?0:parseFloat(this.drAccount[this.lstTags[t]]))-(null==this.drAccount[this.lstPMTags[t]]?0:parseFloat(this.drAccount[this.lstPMTags[t]])));if(this.ShowPrevMonthVarPer)for(let t=0;t<this.lstTags.length;t++)if(this.dvColumns.Contains(this.lstTags[t])&&this.dvColumns.Contains(this.lstPMTags[t])){let e=(null==this.drAccount[this.lstTags[t]]?0:parseFloat(this.drAccount[this.lstTags[t]]))-(null==this.drAccount[this.lstPMTags[t]]?0:parseFloat(this.drAccount[this.lstPMTags[t]])),s=null==this.drAccount[this.lstPMTags[t]]?0:parseFloat(this.drAccount[this.lstPMTags[t]]);0!=s&&(e=100*e/s),this.drAccount["VARPER_"+this.lstTags[t]]=e}}else if(this.strTemp.length>0)if(i=!0,this.dblTemp=parseFloat(this.drAccount.Balance),this.dvColumns.Contains(this.strTemp)){let t=!1;for(let e=0;e<this.CountMonths;e++)t?(a+1<this.dv.length&&this.AccountID==parseInt(this.dv[a+1].AccountID)&&(this.strTemp=o.e.String(this.dv[a+1].Mn),this.strTemp.length>0&&this.oColumns[this.CellStartPos+this.ColumnSize+e].ID==this.strTemp&&(this.dblTemp=this.dblTemp+parseFloat(this.dv[a+1].Balance),this.dvTable.Remove(this.dv[a+1]))),this.drAccount[this.oColumns[this.CellStartPos+this.ColumnSize+e].ID]=this.dblTemp):this.oColumns[this.CellStartPos+this.ColumnSize+e].ID==this.strTemp&&(t=!0,this.drAccount[this.strTemp]=this.dblTemp)}else for(let t=0;t<this.CountMonths;t++)a+1<this.dv.length&&this.AccountID==parseInt(this.dv[a+1].AccountID)&&(this.strTemp=o.e.String(this.dv[a+1].Mn),this.strTemp.length>0&&this.oColumns[this.CellStartPos+this.ColumnSize+t].ID==this.strTemp&&(this.dblTemp=this.dblTemp+parseFloat(this.dv[a+1].Balance),this.dvTable.Remove(this.dv[a+1]))),this.drAccount[this.oColumns[this.CellStartPos+this.ColumnSize+t].ID]=this.dblTemp;this.drAccount.Balance=this.dblTemp}if(this.dbl=o.e.Double(this.drAccount.Balance),s=!1,null!=this.dvCurrentBudget&&(this.dvCurrentBudget=this.dvCurrentBudgetTable.filter(t=>t.AccountID==this.strAccountID),this.dvCurrentBudget.length>0&&(s=!0)),h=!1,(Math.abs(this.dbl)>.01||this.ShowAllAccounts||s||i)&&(h=!0),!h&&null!=this.dvYTD){let t=this.dvYTD.filter(t=>t.AccountID==parseInt(this.strAccountID));t.length>0&&o.e.Double(t[0].Balance)>.01&&(h=!0)}if(!h&&null!=this.dvYTD_LY){let t=this.dvYTD_LY.filter(t=>t.AccountID==parseInt(this.strAccountID));t.length>0&&o.e.Double(t[0].Balance)>.01&&(h=!0)}if(!h&&null!=this.dvBAL_LY){let t=this.dvBAL_LY.filter(t=>t.AccountID==parseInt(this.strAccountID));t.length>0&&o.e.Double(t[0].Balance)>.01&&(h=!0)}if(h){if(this.Show==u.MonthWise){if(null!=this.dvCurrentBudget&&!this.HideTagWiseBudget){let t=this.ViewModel.FromDatePicker.Date;if(this.dvCurrentBudget.length>0)for(;t<=this.ViewModel.ToDatePicker.Date;)this.strTemp=t.ToString("MMMyyyy"),Object(r.isUndefined)(this.dvCurrentBudget[0][this.strTemp])||(this.dblActBudget=parseFloat(this.dvCurrentBudget[0][this.strTemp]),this.ShowBudget&&(this.drAccount["Budget"+this.strTemp]=this.dblActBudget),this.ShowBudgetVariance&&(this.dblMonBal=o.e.Double(this.drAccount["Y"+t.getFullYear()+"M"+t.iMonth()]),this.drAccount["Variance"+this.strTemp]=this.dblActBudget-Math.abs(this.dblMonBal)),this.ShowBudgetVariancePercent&&(this.dblMonBal=o.e.Double(this.drAccount["Y"+t.getFullYear()+"M"+t.iMonth()]),this.drAccount["PercentVariance"+this.strTemp]=0!=this.dblActBudget?100*(this.dblActBudget-Math.abs(this.dblMonBal))/this.dblActBudget:0)),t=t.AddMonths(1)}}else if(this.Show==u.QtrWise||this.Show==u.HalfYearWise){if(null!=this.dvCurrentBudget&&!this.HideTagWiseBudget){let t=null,e=this.ViewModel.FromDatePicker.Date;if(this.dvCurrentBudget.length>0)for(;e<=this.ViewModel.ToDatePicker.Date;)this.strTemp=e.ToString("MMMyyyy"),Object(r.isUndefined)(this.dvCurrentBudget[0][this.strTemp])||(this.dbl=parseFloat(this.dvCurrentBudget[0][this.strTemp]),this.strTemp=this.GetQuarterID(e),t!=this.strTemp?this.dblActBudget=this.dbl:this.dblActBudget+=this.dbl,t=this.strTemp,this.ShowBudget&&(this.drAccount["Budget"+this.strTemp]=this.dblActBudget),this.ShowBudgetVariance&&(this.dblMonBal=o.e.Double(this.drAccount[this.strTemp]),this.drAccount["Variance"+this.strTemp]=this.dblActBudget-Math.abs(this.dblMonBal)),this.ShowBudgetVariancePercent&&(this.dblMonBal=o.e.Double(this.drAccount[this.strTemp]),this.drAccount["PercentVariance"+this.strTemp]=0!=this.dblActBudget?100*(this.dblActBudget-Math.abs(this.dblMonBal))/this.dblActBudget:0)),e=e.AddMonths(1)}}else this.Show!=u.TagWise||null==this.dvCurrentBudget||this.HideTagWiseBudget||this.lstTags.forEach(t=>{this.dvCurrentBudget=this.dvCurrentBudgetTable.filter(e=>e.AccountID==this.strAccountID&&e.TagID==t),this.dblActBudget=this.GetBudgetAmount(this.dvCurrentBudget,this.ViewModel.FromDatePicker.Date,this.ViewModel.ToDatePicker.Date),this.ShowBudget&&(this.drAccount["Budget"+t]=this.dblActBudget),this.ShowBudgetVariance&&(this.dblMonBal=o.e.Double(this.drAccount[t]),this.drAccount["Variance"+t]=this.dblActBudget-Math.abs(this.dblMonBal)),this.ShowBudgetVariancePercent&&(this.dblMonBal=o.e.Double(this.drAccount[t]),this.drAccount["PercentVariance"+t]=0!=this.dblActBudget?100*(this.dblActBudget-Math.abs(this.dblMonBal))/this.dblActBudget:0)});this.AddRow()}}!e&&this.GrdRow+1<this.TempData.length&&(this.TempData[this.GrdRow+1].Cells[this.CellStartPos].Text="",this.TempData[this.GrdRow+1].Cells[this.CellStartPos+1].Text="",this.ViewModel.ColumnSource.length>2&&(this.TempData[this.GrdRow+1].Cells[this.CellStartPos+2].Text="")),this.UpdateTreeTotals(0),-1==this.ReportRowStartIndex&&t&&this.AddClosingStock(),this.AddNetProfitBeforeOtherIncome()}AddRow(){if(this.IsAddRow=0,this.oRow=this.NewReportRow(),this.oRow.LevelNo=parseInt(this.drAccount.Depth)-1,this.IsAccountWise||this.UpdateTreeTotals(this.oRow.LevelNo),this.oRow.NodeID=parseInt(this.drAccount.AccountID),this.oRow.DataRow=this.drAccount,this.oRow.LevelNo<=this.LevelNo&&(this.GrdRow++,this.ReportFormat==p.Horizontal?this.IsFirstCall||this.GrdRow>this.FirstTypeEndIndex?this.IsAddRow=1:(this.IsAddRow=2,this.oRow=this.TempData[this.GrdRow]):this.IsAddRow=1),this.ReportFormat!=p.Horizontal||this.IsFirstCall||(this.oRow.Tag=parseInt(this.drAccount.AccountID)),this.oRow.IsGroup=Object(l.j)(this.drAccount.IsGroup),this.IsAccountWise||(this.oRow.Cells[this.CellStartPos+this.AccNameIndex].level=parseInt(this.drAccount.Depth)-1),Object(l.j)(this.drAccount.IsGroup)){this.lstParents.push(this.oRow),this.lstTotal.push(new Array(this.oColumns.length).fill(0));for(let t=this.CellStartPos;t<this.oRow.Cells.length;t++)this.oRow.Cells[t].IsNormal=!1,this.oRow.Cells[t].CellAppearance=this.BalanceBFAppearance.Clone(),this.oRow.Cells[t].CellAppearance.Alignment=this.ViewModel.ReportColumns[t].DataAppearance.Alignment;this.oRow.Type=a.f.BalanceBF}else{this.ReportTotal[this.ReportTotalIndex]+=this.dbl;for(let t=this.CellStartPos;t<this.oRow.Cells.length;t++)this.oRow.Cells[t].IsNormal=!0,this.oRow.Cells[t].CellAppearance=null}if(this.TextFields.keys.forEach(t=>{let e=this.TextFields[t];this.oRow.Cells[this.CellStartPos+e].Text=this.drAccount[t].toString(),this.oRow.Cells[this.CellStartPos+e].Value=this.oRow.Cells[this.CellStartPos+e].Text}),this.oRow.Cells[this.CellStartPos+this.AccNameIndex].IsNormal=!1,!this.oRow.IsGroup){let t=0,e=0;if(this.FormatData(this.oRow.Cells[this.CellStartPos+this.BalIndex],this.dbl,this.oColumns[this.BalIndex]),this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BalIndex]+=this.dbl),-1!=this.YTDIndex&&(e=0,this.dvYTD=this.dvYTDTable.filter(t=>t.AccountID==this.strAccountID),this.dvYTD.length>0&&(this.dblTemp=o.e.Double(this.dvYTD[0].Balance),e=this.dblTemp,this.drAccount.YTD=this.dblTemp,this.ReportTotalYTD[this.ReportTotalIndex][0]+=this.dblTemp,this.FormatData(this.oRow.Cells[this.CellStartPos+this.YTDIndex],this.dblTemp,this.oColumns[this.YTDIndex]),this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTDIndex]+=this.dblTemp))),-1!=this.BAL_LYIndex&&(this.dvBAL_LY=this.dvBAL_LYTable.filter(t=>t.AccountID==this.strAccountID),this.dvBAL_LY.length>0&&(this.dblTemp=o.e.Double(this.dvBAL_LY[0].Balance),this.drAccount.LastYearBalance=this.dblTemp,this.ReportTotalYTD[this.ReportTotalIndex][1]+=this.dblTemp,this.FormatData(this.oRow.Cells[this.CellStartPos+this.BAL_LYIndex],this.dblTemp,this.oColumns[this.BAL_LYIndex]),this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BAL_LYIndex]+=this.dblTemp),null!=this.dvPrevBudgetTable&&(this.dvPrevBudget=this.dvPrevBudgetTable.filter(t=>t.AccountID==this.strAccountID),this.dblActBudget=this.GetBudgetAmount(this.dvPrevBudget,this.ViewModel.FromDatePicker.Date,this.ViewModel.ToDatePicker.Date),this.ShowBudget&&(this.ViewModel.SetCellValue(this.dblActBudget,this.oColumns[this.BAL_LYIndex-1].DataFormat,"FLOAT",this.oRow.Cells[this.BAL_LYIndex-1]),this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex-1]+=this.dblActBudget,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BAL_LYIndex-1]+=this.dblActBudget)),(this.ShowBudgetVariance||this.ShowBudgetVariancePercent)&&(t=this.IsIncome?-this.dblTemp-this.dblActBudget:this.dblActBudget-this.dblTemp,this.ShowBudgetVariance&&(this.ViewModel.SetCellValue(t,this.oColumns[this.BAL_LYIndex+1].DataFormat,"FLOAT",this.oRow.Cells[this.BAL_LYIndex+1]),this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex+1]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BAL_LYIndex+1]+=t)),this.ShowBudgetVariancePercent&&(this.dblTemp=0!=this.dblActBudget?100*t/this.dblActBudget:0,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BAL_LYIndex+this.VariancePercentIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BAL_LYIndex+this.VariancePercentIndex]),this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex+this.VariancePercentIndex]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BAL_LYIndex+this.VariancePercentIndex]+=t)))))),-1!=this.YTD_LYIndex&&(this.dvYTD_LY=this.dvYTD_LYTable.filter(t=>t.AccountID==this.strAccountID),this.dvYTD_LY.length>0&&(this.dblTemp=o.e.Double(this.dvYTD_LY[0].Balance),this.drAccount.LastYearYTD=this.dblTemp,this.ReportTotalYTD[this.ReportTotalIndex][2]+=this.dblTemp,this.FormatData(this.oRow.Cells[this.CellStartPos+this.YTD_LYIndex],this.dblTemp,this.oColumns[this.YTD_LYIndex]),this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTD_LYIndex]+=this.dblTemp),null!=this.dvPrevBudget&&(this.dvPrevBudget=this.dvPrevBudgetTable.filter(t=>t.AccountID==this.strAccountID),this.dblActBudget=this.GetBudgetAmount(this.dvPrevBudget,this.dtYearStartMonth,this.ViewModel.ToDatePicker.Date),this.ShowBudget&&(this.ViewModel.SetCellValue(this.dblActBudget,this.oColumns[this.YTD_LYIndex-1].DataFormat,"FLOAT",this.oRow.Cells[this.YTD_LYIndex-1]),this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex-1]+=this.dblActBudget,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTD_LYIndex-1]+=this.dblActBudget)),(this.ShowBudgetVariance||this.ShowBudgetVariancePercent)&&(t=this.IsIncome?-this.dblTemp-this.dblActBudget:this.dblActBudget-this.dblTemp,this.ShowBudgetVariance&&(this.ViewModel.SetCellValue(t,this.oColumns[this.YTD_LYIndex+1].DataFormat,"FLOAT",this.oRow.Cells[this.YTD_LYIndex+1]),this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex+1]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTD_LYIndex+1]+=t)),this.ShowBudgetVariancePercent&&(this.dblTemp=0!=this.dblActBudget?100*t/this.dblActBudget:0,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.YTD_LYIndex+this.VariancePercentIndex].DataFormat,"FLOAT",this.oRow.Cells[this.YTD_LYIndex+this.VariancePercentIndex]),this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex+this.VariancePercentIndex]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTD_LYIndex+this.VariancePercentIndex]+=t)))))),null!=this.dvCurrentBudget){this.dvCurrentBudget=this.dvCurrentBudget.filter(t=>t.AccountID==this.strAccountID);let s=this.GetBudgetAmount(this.dvCurrentBudget,this.ViewModel.FromDatePicker.Date,this.ViewModel.ToDatePicker.Date);this.ShowBudget&&(this.ViewModel.SetCellValue(s,this.oColumns[this.BalIndex-1].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex-1]),this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex-1]+=s,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BalIndex-1]+=s)),this.ShowTotalBudget&&(this.dblTemp=this.GetBudgetAmount(this.dvCurrentBudget),this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex-this.TotalBudgetIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex-this.TotalBudgetIndex]),this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex-this.TotalBudgetIndex]+=this.dblTemp,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BalIndex-this.TotalBudgetIndex]+=this.dblTemp)),(this.ShowBudgetVariance||this.ShowBudgetVariancePercent)&&(t=this.IsIncome?-this.dbl-s:s-this.dbl,this.ShowBudgetVariance&&(this.ViewModel.SetCellValue(t,this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex+1]),this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex+1]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BalIndex+1]+=t)),this.ShowBudgetVariancePercent&&(this.dblTemp=0!=s?100*t/s:0,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex+this.VariancePercentIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex+this.VariancePercentIndex]),this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex+this.VariancePercentIndex]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BalIndex+this.VariancePercentIndex]+=t))),-1!=this.YTDIndex&&(s=this.GetBudgetAmount(this.dvCurrentBudget,this.dtYearStartMonth,this.ViewModel.ToDatePicker.Date),this.ShowBudget&&(this.ViewModel.SetCellValue(s,this.oColumns[this.YTDIndex-1].DataFormat,"FLOAT",this.oRow.Cells[this.YTDIndex-1]),this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex-1]+=s,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTDIndex-1]+=s)),(this.ShowBudgetVariance||this.ShowBudgetVariancePercent)&&(t=this.IsIncome?-e-s:s-e,this.ShowBudgetVariance&&(this.ViewModel.SetCellValue(t,this.oColumns[this.YTDIndex+1].DataFormat,"FLOAT",this.oRow.Cells[this.YTDIndex+1]),this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex+1]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTDIndex+1]+=t)),this.ShowBudgetVariancePercent&&(this.dblTemp=0!=s?100*t/s:0,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.YTDIndex+this.VariancePercentIndex].DataFormat,"FLOAT",this.oRow.Cells[this.YTDIndex+this.VariancePercentIndex]),this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex+this.VariancePercentIndex]+=t,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.YTDIndex+this.VariancePercentIndex]+=t))))}this.ShowSalesPercentage&&this.dblTotalSales>0&&(this.dblTemp=this.IsIncome?100*-this.dbl/this.dblTotalSales:100*this.dbl/this.dblTotalSales,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex+this.SalesPercentIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex+this.SalesPercentIndex]),this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex+this.SalesPercentIndex]+=this.dblTemp,this.lstTotal.length>0&&(this.lstTotal[this.lstTotal.length-1][this.BalIndex+this.SalesPercentIndex]+=this.dblTemp));for(let s=0;s<this.CountMonths;s++)this.dblTemp=o.e.Double(this.drAccount[this.oColumns[this.ColumnSize+s].ID]),this.ReportTotalMonthWise[this.ReportTotalIndex][s]+=this.dblTemp,this.oColumns[this.ColumnSize+s].ID.startsWith("Budget")||this.oColumns[this.ColumnSize+s].ID.startsWith("Variance")||this.oColumns[this.ColumnSize+s].ID.startsWith("VARPER_")?this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.ColumnSize+s].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.ColumnSize+s]):this.FormatData(this.oRow.Cells[this.CellStartPos+this.ColumnSize+s],this.dblTemp,this.oColumns[this.ColumnSize+s]),this.lstTotal.length>0&&!this.oColumns[this.ColumnSize+s].ID.startsWith("VARPER_")&&(this.lstTotal[this.lstTotal.length-1][this.CellStartPos+this.ColumnSize+s]+=this.dblTemp);this.ViewModel.ApplyKPI(this.oRow)}if(1==this.IsAddRow){if(!(this.ShowdetailsofControlGroups||(this.oRow.IsExpanded=!Object(l.j)(this.drAccount.IsSummary),Object(l.j)(this.drAccount.IsSummary)&&(this.oRow.Type=a.f.Detail),this.oRow.IsGroup?this.lstParents.length>1&&(this.oRow.Parent=this.lstParents[this.lstParents.length-2]):this.lstParents.length>0&&(this.oRow.Parent=this.lstParents[this.lstParents.length-1]),null==this.oRow.Parent||this.oRow.Parent.IsExpanded&&this.oRow.Parent.Visible||(this.oRow.Visible=!1,this.ReportFormat!=p.Horizontal))))return void this.GrdRow--;this.TempData.push(this.oRow)}else if(2==this.IsAddRow){if(!this.ShowdetailsofControlGroups){this.oRow.IsExpanded=!Object(l.j)(this.drAccount.IsSummary),this.oRow.IsGroup?this.lstParents.length>1&&(this.oRow.Parent=this.lstParents[this.lstParents.length-2]):this.lstParents.length>0&&(this.oRow.Parent=this.lstParents[this.lstParents.length-1]);for(let t=0;t<this.lstParents.length;t++){let e=this.lstParents[t];if(null!=e&&!e.IsExpanded&&e!=this.oRow)return void this.GrdRow--}}this.TempData.Remove(this.oRow),this.TempData.InsertAt(this.oRow,this.GrdRow)}}AddReportTotal(t,e){let s=null,o=null;this.IsIncome=t;let l=-1,h=this.GrossAtEnd&&-1==this.ReportRowStartIndex||this.NetAtEnd&&-1!=this.ReportRowStartIndex;if(this.ReportTotalIndex=t?0:1,this.ReportFormat==p.Vertical){let t;this.GrdRow++,t=e?this.FirstTypeEndIndex+1:this.GrdRow,l=t,s=this.NewReportRow_2(a.f.ReportTotal,this.ViewModel.GrpReportTotal.SubTotalAppearance_Data),this.ViewModel.GrpReportTotal.Height>0&&(s.Height=this.ViewModel.GrpReportTotal.Height),s.LevelNo=0;for(let e=0;e<this.CountMonths;e++)this.oColumns[this.CellStartPos+this.ColumnSize+e].ID.startsWith("VARPER_")||this.oColumns[this.CellStartPos+this.ColumnSize+e].ID.startsWith("SalesPercentage_")||(s.Cells[this.CellStartPos+this.ColumnSize+e].IsNormal=!1,this.FormatData(s.Cells[this.CellStartPos+this.ColumnSize+e],this.ReportTotalMonthWise[this.ReportTotalIndex][e],this.oColumns[this.ColumnSize+e]));this.GrdRow++,o=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),o.Height=o.Height+2,o.LevelNo=0,this.GrossRows[this.ReportTotalIndex]=o,this.GrossCellIndex=this.CellStartPos}else this.ReportFormat==p.Horizontal&&(e?(this.FirstTypeEndIndex<this.GrdRow?this.FirstTypeEndIndex=this.GrdRow:this.GrdRow=this.FirstTypeEndIndex,this.GrdRow+=2,this.CellStartPos=0,l=this.FirstTypeEndIndex+1,o=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),o.Height=o.Height+2,o.LevelNo=0,s=this.NewReportRow_2(a.f.ReportTotal,this.ViewModel.GrpReportTotal.SubTotalAppearance_Data),this.ViewModel.GrpReportTotal.Height>0&&(s.Height=this.ViewModel.GrpReportTotal.Height),s.LevelNo=0):(this.CellStartPos+=this.ColumnSize,h?(o=this.TempData[this.GrdRow],s=this.TempData[this.GrdRow-1]):(o=this.TempData[this.GrdRow-1],s=this.TempData[this.GrdRow])),this.GrossRows[this.ReportTotalIndex]=o);if(!e){let t,e="";if(1==this.ShowGrossInIncome){if(t=this.GrossRows[0],this.ReportFormat==p.Horizontal&&(this.GrossCellIndex=this.ShowIncomeFirst?0:this.ColumnSize),this.ShowNetProfitBeforeAndAfter&&-1!=this.ReportRowStartIndex){let e=this.TempData.indexOf(this.GrossRows[0]);this.TempData.indexOf(this.GrossRows[1]),t=-1==e?this.GrossRows[0]:this.GrossRows[1]}h&&(t=o),this.dbl>=0?(e=8!=this.ViewModel.StaticReportType?"Reports_LblNetLossForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossLossForPeriod":this.ShowNetProfitBeforeAndAfter?"Reports_LblNetLossAfter":"Reports_LblNetLossForPeriod",this.ViewModel.SetCellValue(this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex]),this.AddGrossToVariance&&this.ShowBudgetVariance&&this.ViewModel.SetCellValue(this.dbl,this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex+1])):(e=8!=this.ViewModel.StaticReportType?"Reports_LblNetProfitForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossProfitForPeriod":this.ShowNetProfitBeforeAndAfter?"Reports_LblNetProfitAfter":"Reports_LblNetProfitForPeriod",this.ViewModel.SetCellValue(-this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex]),t.Cells[this.GrossCellIndex+this.BalIndex].Text+="Dr",this.AddGrossToVariance&&this.ShowBudgetVariance&&this.ViewModel.SetCellValue(-this.dbl,this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex+1])),this.ShowSalesPercentage&&this.dblTotalSales>0&&(this.dblTemp=100*this.dbl/this.dblTotalSales,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex+this.SalesPercentIndex].DataFormat,"FLOAT",t.Cells[this.BalIndex+this.SalesPercentIndex]))}else{if(t=this.GrossRows[1],this.ReportFormat==p.Horizontal&&(this.GrossCellIndex=this.ShowIncomeFirst?this.ColumnSize:0,this.ShowNetProfitBeforeAndAfter&&-1!=this.ReportRowStartIndex&&(this.GrossCellIndex=this.ShowIncomeFirst?0:this.ColumnSize)),this.ShowNetProfitBeforeAndAfter&&-1!=this.ReportRowStartIndex){let e=this.TempData.indexOf(this.GrossRows[0]);this.TempData.indexOf(this.GrossRows[1]),t=-1==e?this.GrossRows[0]:this.GrossRows[1]}h&&(t=o),this.dbl>=0?(e=8!=this.ViewModel.StaticReportType?"Reports_LblNetProfitForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossProfitForPeriod":this.ShowNetProfitBeforeAndAfter?"Reports_LblNetProfitAfter":"Reports_LblNetProfitForPeriod",this.ViewModel.SetCellValue(this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex]),this.AddGrossToVariance&&this.ShowBudgetVariance&&this.ViewModel.SetCellValue(-this.dbl,this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex+1])):(e=8!=this.ViewModel.StaticReportType?"Reports_LblNetLossForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossLossForPeriod":this.ShowNetProfitBeforeAndAfter?"Reports_LblNetLossAfter":"Reports_LblNetLossForPeriod",this.ViewModel.SetCellValue(-this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex]),t.Cells[this.GrossCellIndex+this.BalIndex].Text+="Cr",this.AddGrossToVariance&&this.ShowBudgetVariance&&this.ViewModel.SetCellValue(this.dbl,this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",t.Cells[this.GrossCellIndex+this.BalIndex+1])),this.ShowSalesPercentage&&this.dblTotalSales>0&&(this.dblTemp=100*this.dbl/this.dblTotalSales,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex+this.SalesPercentIndex].DataFormat,"FLOAT",t.Cells[this.BalIndex+this.SalesPercentIndex]))}this.SetPLText(t.Cells[this.GrossCellIndex+this.AccNameIndex],e),this.SetPLTextColor(t.Cells[this.GrossCellIndex+this.BalIndex],e),this.AddGrossToVariance&&this.ShowBudgetVariance&&this.SetPLTextColor(t.Cells[this.GrossCellIndex+this.BalIndex+1],e),this.ShowSalesPercentage&&this.dblTotalSales>0&&this.SetPLTextColor(t.Cells[this.BalIndex+this.SalesPercentIndex],e),this.Show==u.None&&(this.ReportFormat==p.Vertical?t==this.GrossRows[0]?(this.GrossRows[1].Visible=!1,(0!=this.RetainedEarningAccount||Math.abs(this.dbl)<.01)&&(this.GrossRows[0].Visible=!1)):(this.GrossRows[0].Visible=!1,(0!=this.RetainedEarningAccount||Math.abs(this.dbl)<.01)&&(this.GrossRows[1].Visible=!1)):this.ReportFormat==p.Horizontal&&(0!=this.RetainedEarningAccount||Math.abs(this.dbl)<.01)&&(t.Visible=!1))}h&&!this.ShowCarryForward&&(this.ReportFormat==p.Vertical?this.ShowGrossInIncome&&!t&&1==this.ReportTotalIndex?this.ReportTotal[1]-=this.Olddbl:!this.ShowGrossInIncome&&t&&0==this.ReportTotalIndex&&(this.ReportTotal[0]+=this.Olddbl):this.ShowGrossInIncome||0!=this.ReportTotalIndex?1==this.ReportTotalIndex&&(this.ReportTotal[1]-=this.Olddbl):this.ReportTotal[0]+=this.Olddbl);let n=-1;for(this.k=0;this.k<this.oColumns.length;this.k++)this.ViewModel.GrpReportTotal.TotalCols.ContainsKey(this.oColumns[this.k].ID)&&(-1==n&&(n=this.k),this.ViewModel.SetCellValue(Math.abs(this.ReportTotal[this.ReportTotalIndex]),this.oColumns[this.BalIndex].DataFormat,"FLOAT",s.Cells[this.CellStartPos+this.BalIndex]));if(s.Cells[this.CellStartPos].CellAppearance=this.ViewModel.GrpReportTotal.SubTotalAppearance,s.Cells[this.CellStartPos].Text=i.a.GetResource("Reports_ReportTotal"),8==this.ViewModel.StaticReportType&&(this.GrossAtEnd||this.NetAtEnd)){let e;t?(e=i.a.GetResource("Reports_LblIncome"),-1==this.ReportRowStartIndex?this.ViewModel.Preferences.ContainsKey("Income1Label")&&(e=this.ViewModel.Preferences.Income1Label):this.ViewModel.Preferences.ContainsKey("Income2Label")&&(e=this.ViewModel.Preferences.Income2Label)):(e=i.a.GetResource("Reports_LblExpneses"),-1==this.ReportRowStartIndex?this.ViewModel.Preferences.ContainsKey("Expneses1Label")&&(e=this.ViewModel.Preferences.Expneses1Label):this.ViewModel.Preferences.ContainsKey("Expneses2Label")&&(e=this.ViewModel.Preferences.Expneses2Label)),s.Cells[this.CellStartPos].Text=e+" Total"}if(n>0&&(s.Cells[this.CellStartPos].ColSpan=n),-1!=this.YTDIndex&&(this.FormatData(s.Cells[this.CellStartPos+this.YTDIndex],this.ReportTotalYTD[this.ReportTotalIndex][0],this.oColumns[this.YTDIndex]),this.ShowBudget&&this.FormatData(s.Cells[this.CellStartPos+this.YTDIndex-1],this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex-1],this.oColumns[this.YTDIndex-1]),this.ShowBudgetVariance&&this.FormatData(s.Cells[this.CellStartPos+this.YTDIndex+1],this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex+1],this.oColumns[this.YTDIndex+1]),this.ShowBudgetVariancePercent)){let t=0;this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex-1]>0&&(t=100*this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex+this.VariancePercentIndex]/this.ReportTotalALL[this.ReportTotalIndex][this.YTDIndex-1]),this.FormatData(s.Cells[this.CellStartPos+this.YTDIndex+this.VariancePercentIndex],t,this.oColumns[this.YTDIndex+this.VariancePercentIndex])}if(-1!=this.BAL_LYIndex&&(this.FormatData(s.Cells[this.CellStartPos+this.BAL_LYIndex],this.ReportTotalYTD[this.ReportTotalIndex][1],this.oColumns[this.BAL_LYIndex]),this.ShowBudget&&this.FormatData(s.Cells[this.CellStartPos+this.BAL_LYIndex-1],this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex-1],this.oColumns[this.BAL_LYIndex-1]),this.ShowBudgetVariance&&this.FormatData(s.Cells[this.CellStartPos+this.BAL_LYIndex+1],this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex+1],this.oColumns[this.BAL_LYIndex+1]),this.ShowBudgetVariancePercent)){let t=0;this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex-1]>0&&(t=100*this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex+this.VariancePercentIndex]/this.ReportTotalALL[this.ReportTotalIndex][this.BAL_LYIndex-1]),this.FormatData(s.Cells[this.CellStartPos+this.BAL_LYIndex+this.VariancePercentIndex],t,this.oColumns[this.BAL_LYIndex+this.VariancePercentIndex])}if(-1!=this.YTD_LYIndex&&(this.FormatData(s.Cells[this.CellStartPos+this.YTD_LYIndex],this.ReportTotalYTD[this.ReportTotalIndex][2],this.oColumns[this.YTD_LYIndex]),this.ShowBudget&&this.FormatData(s.Cells[this.CellStartPos+this.YTD_LYIndex-1],this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex-1],this.oColumns[this.YTD_LYIndex-1]),this.ShowBudgetVariance&&this.FormatData(s.Cells[this.CellStartPos+this.YTD_LYIndex+1],this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex+1],this.oColumns[this.YTD_LYIndex+1]),this.ShowBudgetVariancePercent)){let t=0;this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex-1]>0&&(t=100*this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex+this.VariancePercentIndex]/this.ReportTotalALL[this.ReportTotalIndex][this.YTD_LYIndex-1]),this.FormatData(s.Cells[this.CellStartPos+this.YTD_LYIndex+this.VariancePercentIndex],t,this.oColumns[this.YTD_LYIndex+this.VariancePercentIndex])}if(-1!=this.BalIndex&&(this.ShowTotalBudget&&this.FormatData(s.Cells[this.CellStartPos+this.BalIndex-this.TotalBudgetIndex],this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex-this.TotalBudgetIndex],this.oColumns[this.BalIndex-this.TotalBudgetIndex]),this.ShowBudget&&this.FormatData(s.Cells[this.CellStartPos+this.BalIndex-1],this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex-1],this.oColumns[this.BalIndex-1]),this.ShowBudgetVariance&&this.FormatData(s.Cells[this.CellStartPos+this.BalIndex+1],this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex+1],this.oColumns[this.BalIndex+1]),this.ShowBudgetVariancePercent)){let t=0;this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex-1]>0&&(t=100*this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex+this.VariancePercentIndex]/this.ReportTotalALL[this.ReportTotalIndex][this.BalIndex-1]),this.FormatData(s.Cells[this.CellStartPos+this.BalIndex+this.VariancePercentIndex],t,this.oColumns[this.BalIndex+this.VariancePercentIndex])}h?-1==l?(l=this.TempData.indexOf(o),this.TempData.RemoveAt(l),this.TempData.InsertAt(o,l),this.ViewModel.GrpReportTotal.GroupAppearance.IsVisible||(s.Visible=!1),l=this.TempData.indexOf(s),this.TempData.RemoveAt(l),this.TempData.InsertAt(s,l)):(this.ViewModel.GrpReportTotal.GroupAppearance.IsVisible||(s.Visible=!1),this.TempData.InsertAt(s,l),this.TempData.InsertAt(o,l+1)):-1==l?(l=this.TempData.indexOf(o),this.TempData.RemoveAt(l),this.TempData.InsertAt(o,l),this.ViewModel.GrpReportTotal.GroupAppearance.IsVisible||(s.Visible=!1),l=this.TempData.indexOf(s),this.TempData.RemoveAt(l),this.TempData.InsertAt(s,l)):(this.TempData.InsertAt(o,l),this.ViewModel.GrpReportTotal.GroupAppearance.IsVisible||(s.Visible=!1),this.TempData.InsertAt(s,l+1)),e||this.Show==u.None||this.ShowMonthWiseProfitAndLoss(),s.Cells[this.CellStartPos+this.BalIndex].CellAppearance.Alignment=o.Cells[this.CellStartPos+this.BalIndex].CellAppearance.Alignment="Right",e||(this.IgnoreGrossRowsForBS?(l=this.TempData.indexOf(this.GrossRows[0]),-1!=l&&this.TempData.RemoveAt(l),l=this.TempData.indexOf(this.GrossRows[1]),-1!=l&&this.TempData.RemoveAt(l)):(l=this.TempData.indexOf(this.GrossRows[0]),this.TempData.RemoveAt(l),this.TempData.InsertAt(this.GrossRows[0],l),l=this.TempData.indexOf(this.GrossRows[1]),this.TempData.RemoveAt(l),this.TempData.InsertAt(this.GrossRows[1],l)))}ShowProfitAndLoss(t,e){let s,i,o=!1,l=0,h=0;l=this.TempData.indexOf(this.GrossRows[0])+1,h=this.TempData.indexOf(this.GrossRows[1])+1,this.dblTemp=this.ReportTotalYTD[0][t]+this.ReportTotalYTD[1][t],this.dblTemp>=0?(this.TempData[l].Cells[this.CellStartPos+e].Value=this.TempData[h].Cells[this.CellStartPos+e].Value,this.TempData[l].Cells[this.CellStartPos+e].Text=this.TempData[h].Cells[this.CellStartPos+e].Text,o=!0):(this.TempData[h].Cells[this.CellStartPos+e].Value=this.TempData[l].Cells[this.CellStartPos+e].Value,this.TempData[h].Cells[this.CellStartPos+e].Text=this.TempData[l].Cells[this.CellStartPos+e].Text,o=!1),this.dblTemp<0&&(this.dblTemp=-this.dblTemp);let a=null;o?(s=this.GrossRows[0].Cells[this.CellStartPos+e],i=this.GrossRows[0].Cells[this.GrossCellIndex+this.AccNameIndex],this.dblTemp>=0?(a=8!=this.ViewModel.StaticReportType?"Reports_LblNetLossForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossLossForPeriod":"Reports_LblNetLossForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+e].DataFormat,"FLOAT",s)):(a=8!=this.ViewModel.StaticReportType?"Reports_LblNetProfitForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossProfitForPeriod":"Reports_LblNetProfitForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+e].DataFormat,"FLOAT",s))):(s=this.GrossRows[1].Cells[this.CellStartPos+e],i=this.GrossRows[1].Cells[this.GrossCellIndex+this.AccNameIndex],this.dblTemp>=0?(a=8!=this.ViewModel.StaticReportType?"Reports_LblNetProfitForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossProfitForPeriod":"Reports_LblNetProfitForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+e].DataFormat,"FLOAT",s)):(a=8!=this.ViewModel.StaticReportType?"Reports_LblNetLossForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossLossForPeriod":"Reports_LblNetLossForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+e].DataFormat,"FLOAT",s))),null!=a&&(this.SetPLText(i,a),this.SetPLTextColor(s,a));let n=this.TempData[l],r=this.TempData[h];this.TempData.RemoveAt(l),this.TempData.Insert(l,n),this.TempData.RemoveAt(h),this.TempData.InsertAt(r,h)}ShowMonthWiseProfitAndLoss(){let t,e,s,i,o=!1;s=this.TempData.indexOf(this.GrossRows[0]),i=this.TempData.indexOf(this.GrossRows[1]);let l=this.GrossAtEnd&&-1==this.ReportRowStartIndex||this.NetAtEnd&&-1!=this.ReportRowStartIndex;for(let n=0;n<this.CountMonths;n++){if(this.oColumns[this.CellStartPos+this.ColumnSize+n].ID.startsWith("DIFF_")||this.oColumns[this.CellStartPos+this.ColumnSize+n].ID.startsWith("VARPER_"))continue;if(7==this.ViewModel.StaticReportType?(this.dblTemp=this.ReportTotalMonthWise[0][n]+this.ReportTotalMonthWise[1][n],this.dblTemp>=0?(this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text,o=!1):(this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text,o=!0),this.dblTemp<0&&(this.dblTemp=-this.dblTemp)):null!=this.OldReportTotalMonthWise?(this.dblTemp=this.OldReportTotalMonthWise[0][n]+this.OldReportTotalMonthWise[1][n]+this.ReportTotalMonthWise[0][n]+this.ReportTotalMonthWise[1][n],this.ShowNetProfitBeforeAndAfter?(l||(this.dblTemp>=0?(this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text):(this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text)),this.dblTemp=-this.dblTemp,o=!0):(this.dblTemp>=0?(l||(this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text),o=!0):(l||(this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text),o=!1),this.dblTemp<0&&(this.dblTemp=-this.dblTemp))):(this.dblTemp=this.ReportTotalMonthWise[0][n]+this.ReportTotalMonthWise[1][n],this.dblTemp>=0?(l||(this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text),o=!0):(l||(this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Value=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Value,this.TempData[i].Cells[this.CellStartPos+this.ColumnSize+n].Text=this.TempData[s].Cells[this.CellStartPos+this.ColumnSize+n].Text),o=!1),this.dblTemp<0&&(this.dblTemp=-this.dblTemp)),0==this.dblTemp)continue;if(l){t=s>i?this.TempData[s+1].Cells[this.CellStartPos+this.ColumnSize+n]:this.TempData[i+1].Cells[this.CellStartPos+this.ColumnSize+n],this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+n].DataFormat,"FLOAT",t);continue}let h=null;o?(t=this.GrossRows[0].Cells[this.CellStartPos+this.ColumnSize+n],e=this.GrossRows[0].Cells[this.GrossCellIndex+this.AccNameIndex],this.dblTemp>=0?(h=8!=this.ViewModel.StaticReportType?"Reports_LblNetLossForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossLossForPeriod":"Reports_LblNetLossForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+n].DataFormat,"FLOAT",t)):(h=8!=this.ViewModel.StaticReportType?"Reports_LblNetProfitForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossProfitForPeriod":"Reports_LblNetProfitForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+n].DataFormat,"FLOAT",t))):(t=this.GrossRows[1].Cells[this.CellStartPos+this.ColumnSize+n],e=this.GrossRows[1].Cells[this.GrossCellIndex+this.AccNameIndex],this.dblTemp>=0?(h=8!=this.ViewModel.StaticReportType?"Reports_LblNetProfitForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossProfitForPeriod":"Reports_LblNetProfitForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+n].DataFormat,"FLOAT",t)):(h=8!=this.ViewModel.StaticReportType?"Reports_LblNetLossForPeriod":-1==this.ReportRowStartIndex?"Reports_LblGrossLossForPeriod":"Reports_LblNetLossForPeriod",this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+n].DataFormat,"FLOAT",t))),null!=h&&(this.SetPLText(e,h),this.SetPLTextColor(t,h))}let h=this.TempData[s],a=this.TempData[i];this.TempData.RemoveAt(s),this.TempData.InsertAt(h,s),this.TempData.RemoveAt(i),this.TempData.InsertAt(a,i)}UpdateTreeTotals(t){if(t>this.lstTotal.length)for(let s=0;s<t-this.lstTotal.length;s++)this.lstParents.push(null),this.lstTotal.push(new Array(this.oColumns.length));for(let s=this.lstTotal.length-1;s>=t;s--){if(s>0)for(let t=0;t<this.lstTotal[s].length;t++)this.lstTotal[s-1][t]+=this.lstTotal[s][t];if(0!=this.lstParents.length)if(null!=this.lstParents[s]){if(!this.GroupTotalsAtEnd||this.DontShowSummaryGroupTotals&&!this.lstParents[s].IsExpanded){if(this.GroupTotalsSeperate)this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.BalIndex+1],this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex]);else{if(this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.BalIndex],this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex]),this.ShowBudget&&(this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex-1],this.oColumns[this.BalIndex-1].DataFormat,"FLOAT",this.lstParents[s].Cells[this.CellStartPos+this.BalIndex-1]),-1!=this.YTDIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTDIndex-1],this.lstTotal[s][this.YTDIndex-1],this.oColumns[this.YTDIndex-1]),-1!=this.BAL_LYIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.BAL_LYIndex-1],this.lstTotal[s][this.BAL_LYIndex-1],this.oColumns[this.BAL_LYIndex-1]),-1!=this.YTD_LYIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTD_LYIndex-1],this.lstTotal[s][this.YTD_LYIndex-1],this.oColumns[this.YTD_LYIndex-1])),this.ShowTotalBudget&&this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex-this.TotalBudgetIndex],this.oColumns[this.BalIndex-this.TotalBudgetIndex].DataFormat,"FLOAT",this.lstParents[s].Cells[this.CellStartPos+this.BalIndex-this.TotalBudgetIndex]),this.ShowBudgetVariance&&(this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex+1],this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",this.lstParents[s].Cells[this.CellStartPos+this.BalIndex+1]),-1!=this.YTDIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTDIndex+1],this.lstTotal[s][this.YTDIndex+1],this.oColumns[this.YTDIndex+1]),-1!=this.BAL_LYIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.BAL_LYIndex+1],this.lstTotal[s][this.BAL_LYIndex+1],this.oColumns[this.BAL_LYIndex+1]),-1!=this.YTD_LYIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTD_LYIndex+1],this.lstTotal[s][this.YTD_LYIndex+1],this.oColumns[this.YTD_LYIndex+1])),this.ShowBudgetVariancePercent){let t=0;this.lstTotal[s][this.BalIndex-1]>0&&(t=100*this.lstTotal[s][this.BalIndex+this.VariancePercentIndex]/this.lstTotal[s][this.BalIndex-1]),this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.BalIndex+this.VariancePercentIndex],t,this.oColumns[this.BalIndex+this.VariancePercentIndex]),-1!=this.YTDIndex&&(t=0,this.lstTotal[s][this.YTDIndex-1]>0&&(t=100*this.lstTotal[s][this.YTDIndex+this.VariancePercentIndex]/this.lstTotal[s][this.YTDIndex-1]),this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTDIndex+this.VariancePercentIndex],t,this.oColumns[this.YTDIndex+this.VariancePercentIndex])),-1!=this.BAL_LYIndex&&(t=0,this.lstTotal[s][this.BAL_LYIndex-1]>0&&(t=100*this.lstTotal[s][this.BAL_LYIndex+this.VariancePercentIndex]/this.lstTotal[s][this.BAL_LYIndex-1]),this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.BAL_LYIndex+this.VariancePercentIndex],t,this.oColumns[this.BAL_LYIndex+this.VariancePercentIndex])),-1!=this.YTD_LYIndex&&(t=0,this.lstTotal[s][this.YTD_LYIndex-1]>0&&(t=100*this.lstTotal[s][this.YTD_LYIndex+this.VariancePercentIndex]/this.lstTotal[s][this.YTD_LYIndex-1]),this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTD_LYIndex+this.VariancePercentIndex],t,this.oColumns[this.YTD_LYIndex+this.VariancePercentIndex]))}this.ShowSalesPercentage&&this.dblTotalSales>0&&this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex+this.SalesPercentIndex],this.oColumns[this.BalIndex+this.SalesPercentIndex].DataFormat,"FLOAT",this.lstParents[s].Cells[this.CellStartPos+this.BalIndex+this.SalesPercentIndex])}-1!=this.YTDIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTDIndex],this.lstTotal[s][this.YTDIndex],this.oColumns[this.YTDIndex]),-1!=this.BAL_LYIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.BAL_LYIndex],this.lstTotal[s][this.BAL_LYIndex],this.oColumns[this.BAL_LYIndex]),-1!=this.YTD_LYIndex&&this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.YTD_LYIndex],this.lstTotal[s][this.YTD_LYIndex],this.oColumns[this.YTD_LYIndex]);for(let t=0;t<this.CountMonths;t++)this.FormatData(this.lstParents[s].Cells[this.CellStartPos+this.ColumnSize+t],this.lstTotal[s][this.ColumnSize+t],this.oColumns[this.ColumnSize+t])}if(t<=this.LevelNo){let t=this.TempData.indexOf(this.lstParents[s]);if(t>=0){var e=this.TempData.find(e=>e.Parent==this.TempData[t]);if(this.TempData.RemoveAt(t),!this.IsValueExists(this.lstTotal[s])&&null==e)if(this.ReportFormat==p.Horizontal)if(0==this.CellStartPos)t=-1;else if(this.FirstTypeEndIndex<t)t=-1;else{for(let t=this.CellStartPos;t<this.oRow.Cells.length;t++)this.lstParents[s].Cells[t].Text="",this.lstParents[s].Cells[t].Value="";this.GrdRow--}else t=-1;if(-1!=t){if(this.TempData.InsertAt(this.lstParents[s],t),this.IsValueExists(this.lstTotal[s]))if(!this.GroupTotalsAtEnd||this.DontShowSummaryGroupTotals&&!this.lstParents[s].IsExpanded);else{if(this.GrdRow++,this.oSubTotal=this.TempData.length<=this.GrdRow?this.NewReportRow():this.TempData[this.GrdRow],this.oSubTotal.Type=a.f.BalanceBF,this.oSubTotal.Parent=this.lstParents[s].Parent,this.oSubTotal.LevelNo=this.lstParents[s].LevelNo,this.oSubTotal.IsGroup=!0,this.oSubTotal.Visible=this.lstParents[s].Visible,this.oSubTotal.Cells[this.CellStartPos].Text="",this.cell=this.oSubTotal.Cells[this.CellStartPos+this.AccNameIndex],this.cell.IsNormal=!1,this.cell.level=this.lstParents[s].LevelNo,this.cell.Text=this.lstParents[s].Cells[this.CellStartPos+this.AccNameIndex].Text+" - TOTAL",this.cell.CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.cell.CellAppearance.Alignment=this.oColumns[this.AccNameIndex].DataAppearance.Alignment,this.GroupTotalsSeperate?(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+1].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+1].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+1].CellAppearance.Alignment=this.oColumns[this.BalIndex].DataAppearance.Alignment,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+1],this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex])):(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].CellAppearance.Alignment=this.oColumns[this.BalIndex].DataAppearance.Alignment,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex],this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex])),this.ShowBudget&&(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex-1].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BalIndex-1].CellAppearance=this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].CellAppearance,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex-1],this.lstTotal[s][this.BalIndex-1],this.oColumns[this.BalIndex-1])),this.ShowTotalBudget&&(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex-this.TotalBudgetIndex].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BalIndex-this.TotalBudgetIndex].CellAppearance=this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].CellAppearance,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex-this.TotalBudgetIndex],this.lstTotal[s][this.BalIndex-this.TotalBudgetIndex],this.oColumns[this.BalIndex-this.TotalBudgetIndex])),this.ShowBudgetVariance&&(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+1].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+1].CellAppearance=this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].CellAppearance,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+1],this.lstTotal[s][this.BalIndex+1],this.oColumns[this.BalIndex+1])),this.ShowBudgetVariancePercent){let t=0;this.lstTotal[s][this.BalIndex-1]>0&&(t=100*this.lstTotal[s][this.BalIndex+this.VariancePercentIndex]/this.lstTotal[s][this.BalIndex-1]),this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+this.VariancePercentIndex].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+this.VariancePercentIndex].CellAppearance=this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].CellAppearance,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+this.VariancePercentIndex],t,this.oColumns[this.BalIndex+this.VariancePercentIndex])}this.ShowSalesPercentage&&this.dblTotalSales>0&&(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+this.SalesPercentIndex].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+this.SalesPercentIndex].CellAppearance=this.oSubTotal.Cells[this.CellStartPos+this.BalIndex].CellAppearance,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BalIndex+this.SalesPercentIndex],this.lstTotal[s][this.BalIndex+this.SalesPercentIndex],this.oColumns[this.BalIndex+this.SalesPercentIndex])),-1!=this.YTDIndex&&(this.oSubTotal.Cells[this.CellStartPos+this.YTDIndex].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.YTDIndex].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.CellStartPos+this.YTDIndex].CellAppearance.Alignment=this.oColumns[this.YTDIndex].DataAppearance.Alignment,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.YTDIndex],this.lstTotal[s][this.YTDIndex],this.oColumns[this.YTDIndex])),-1!=this.BAL_LYIndex&&(this.oSubTotal.Cells[this.CellStartPos+this.BAL_LYIndex].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.BAL_LYIndex].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.CellStartPos+this.BAL_LYIndex].CellAppearance.Alignment=this.oColumns[this.BAL_LYIndex].DataAppearance.Alignment,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.BAL_LYIndex],this.lstTotal[s][this.BAL_LYIndex],this.oColumns[this.BAL_LYIndex])),-1!=this.YTD_LYIndex&&(this.oSubTotal.Cells[this.CellStartPos+this.YTD_LYIndex].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.YTD_LYIndex].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.CellStartPos+this.YTD_LYIndex].CellAppearance.Alignment=this.oColumns[this.YTD_LYIndex].DataAppearance.Alignment,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.YTD_LYIndex],this.lstTotal[s][this.YTD_LYIndex],this.oColumns[this.YTD_LYIndex]));for(let t=0;t<this.CountMonths;t++)this.oSubTotal.Cells[this.CellStartPos+this.ColumnSize+t].IsNormal=!1,this.oSubTotal.Cells[this.CellStartPos+this.ColumnSize+t].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.CellStartPos+this.ColumnSize+t].CellAppearance.Alignment=this.oColumns[this.ColumnSize+t].DataAppearance.Alignment,this.FormatData(this.oSubTotal.Cells[this.CellStartPos+this.ColumnSize+t],this.lstTotal[s][this.ColumnSize+t],this.oColumns[this.ColumnSize+t]);this.TempData.length<=this.GrdRow?this.TempData.push(this.oSubTotal):(this.TempData.RemoveAt(this.GrdRow),this.TempData.InsertAt(this.oSubTotal,this.GrdRow))}}else this.GrdRow--}}this.lstParents.RemoveAt(s),this.lstTotal.RemoveAt(s)}else this.lstParents.RemoveAt(s),this.lstTotal.RemoveAt(s)}}GetBudgetAmount(t,e=null,s=null){let i=0;if(null!=e){let l,h=e;t.forEach(t=>{for(h=e;h<=s;)l=h.ToString("MMMyyyy"),i+=o.e.Double(t[l]),h=h.AddMonths(1)})}else t.forEach(t=>{i+=parseFloat(t.AnnualAmount)});return i}IsValueExists(t){return!!t.find(t=>0!=t)}LoadPlainReport(){this.STACKROWS.Clear(),this.lstTotal.Clear(),this.AddOpeningStock();for(let t=0;t<this.dv.length;t++)this.drAccount=this.dv[t],this.IsIncome=this.IncomeAccounts.Contains(parseInt(this.drAccount.AccountTypeID)),this.ReportTotalIndex=this.IsIncome?0:1,Object(l.j)(this.drAccount.IsGroup)?(this.dbl=0,this.AddRow_Plain()):(this.dbl=o.e.Double(this.drAccount.Balance),(Math.abs(this.dbl)>.01||this.ShowAllAccounts)&&this.AddRow_Plain());this.AddClosingStock(),this.UpdateTreeTotals_Plain(999999999999,0),this.AddOpenBalanceDifference(),this.AddOpenBalanceDifferenceForBS(),7==this.ViewModel.StaticReportType?(this.dbl=this.ReportTotal[0]+this.ReportTotal[1],this.ShowGrossInIncome=!(this.dbl>=0),Math.abs(this.ReportTotal[0])>Math.abs(this.ReportTotal[1])?this.ReportTotal[1]=this.ReportTotal[1]-this.dbl:this.ReportTotal[0]=this.ReportTotal[0]-this.dbl,this.dbl<0&&(this.dbl=-this.dbl)):(this.dbl=this.ReportTotal[0]+this.ReportTotal[1],this.ReportTotal[0]=-this.ReportTotal[0],this.ReportTotal[0]>this.ReportTotal[1]?this.ReportTotal[1]=this.ReportTotal[0]>0?this.ReportTotal[0]:this.ReportTotal[0]=0:this.ReportTotal[0]=this.ReportTotal[1]>0?this.ReportTotal[1]:this.ReportTotal[1]=0,this.ShowGrossInIncome=!(Math.abs(this.ReportTotal[0])>=Math.abs(this.ReportTotal[1])&&this.dbl<0),this.dbl<0&&(this.dbl=-this.dbl)),this.AddReportTotal_Plain()}AddRow_Plain(){if(this.IsAddRow=0,this.oRow=this.NewReportRow(),this.oRow.IsGroup=Object(l.j)(this.drAccount.IsGroup),this.oRow.NodeID=parseInt(this.drAccount.AccountID),this.oRow.LevelNo=parseInt(this.drAccount.Depth)-1,this.oRow.DataRow=this.drAccount,this.IsAccountWise||(this.oRow.Cells[this.CellStartPos+this.BalIndex-1].IsNormal=!1,this.oRow.Cells[this.CellStartPos+this.BalIndex-1].level=this.oRow.LevelNo,this.UpdateTreeTotals_Plain(parseInt(this.drAccount.lft),this.oRow.LevelNo)),Object(l.j)(this.drAccount.IsGroup)){this.oRow.Type=a.f.BalanceBF;for(let t=this.CellStartPos;t<this.oRow.Cells.length;t++)this.oRow.Cells[t].IsNormal=!1,this.oRow.Cells[t].CellAppearance=this.BalanceBFAppearance.Clone(),this.oRow.Cells[t].CellAppearance.Alignment=this.ViewModel.ReportColumns[t].DataAppearance.Alignment}if(this.oRow.LevelNo<=this.LevelNo&&(this.GrdRow++,this.IsAddRow=1),Object(l.j)(this.drAccount.IsGroup)){let t=new T;t.Row=this.oRow,t.Lft=parseInt(this.drAccount.lft),t.Rgt=parseInt(this.drAccount.rgt),this.STACKROWS.push(t),this.lstTotal.push(new Array(this.oColumns.length+1).fill(0))}else this.ReportTotal[this.ReportTotalIndex]+=this.dbl;this.TextFields.keys.forEach(t=>{let e=this.TextFields[t];this.oRow.Cells[this.CellStartPos+e].Text=this.drAccount[t].toString(),this.oRow.Cells[this.CellStartPos+e].Value=this.oRow.Cells[this.CellStartPos+e].Text}),this.oRow.IsGroup||(this.FormatData(this.ClubIncomeExpenseInPlainReport?this.oRow.Cells[this.CellStartPos+this.BalIndex]:this.IsIncome&&!this.ShowIncomeFirst||!this.IsIncome&&this.ShowIncomeFirst?this.oRow.Cells[this.CellStartPos+this.BalIndex+1]:this.oRow.Cells[this.CellStartPos+this.BalIndex],this.dbl,this.oColumns[this.BalIndex]),this.ViewModel.ApplyKPI(this.oRow)),this.lstTotal.length>0&&(this.IsIncome?this.lstTotal[this.lstTotal.length-1][this.BalIndex]+=this.dbl:this.lstTotal[this.lstTotal.length-1][this.BalIndex+1]+=this.dbl),1==this.IsAddRow&&(this.ShowdetailsofControlGroups||(this.oRow.IsExpanded=!Object(l.j)(this.drAccount.IsSummary),Object(l.j)(this.drAccount.IsSummary)&&(this.oRow.Type=a.f.Detail),this.oRow.IsGroup?this.STACKROWS.length>1&&(this.oRow.Parent=this.STACKROWS[this.STACKROWS.length-2].Row):this.STACKROWS.length>0&&(this.oRow.Parent=this.STACKROWS[this.STACKROWS.length-1].Row),null==this.oRow.Parent||this.oRow.Parent.IsExpanded&&this.oRow.Parent.Visible||(this.oRow.Visible=!1)),this.TempData.push(this.oRow))}UpdateTreeTotals_Plain(t,e){for(let s=this.lstTotal.length-1;s>=0&&t>this.STACKROWS[s].Rgt;s--){if(s>0)for(let t=0;t<this.lstTotal[s].length;t++)this.lstTotal[s-1][t]+=this.lstTotal[s][t];if(e<=this.LevelNo){let t=this.TempData.indexOf(this.STACKROWS[s].Row);if(t>=0)if(0==this.lstTotal[s][this.BalIndex]&&0==this.lstTotal[s][this.BalIndex+1])this.TempData.RemoveAt(t);else{if(!this.GroupTotalsAtEnd||this.DontShowSummaryGroupTotals&&!this.STACKROWS[s].Row.IsExpanded?this.oTempRow=this.STACKROWS[s].Row:(this.oSubTotal=this.NewReportRow(),this.oTempRow=this.oSubTotal,this.oSubTotal.Type=a.f.BalanceBF,this.oSubTotal.Parent=this.STACKROWS[s].Row.Parent,this.oSubTotal.LevelNo=this.STACKROWS[s].Row.LevelNo,this.oSubTotal.IsGroup=!0,this.oSubTotal.Visible=this.STACKROWS[s].Row.Visible,this.cell=this.oSubTotal.Cells[this.CellStartPos+this.BalIndex-1],this.cell.IsNormal=!1,this.cell.level=this.STACKROWS[s].Row.LevelNo,this.cell.Text=this.STACKROWS[s].Row.Cells[this.BalIndex-1].Text+" - TOTAL",this.cell.CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.cell.CellAppearance.Alignment=this.oColumns[this.BalIndex-1].DataAppearance.Alignment,this.GroupTotalsSeperate?(this.oSubTotal.Cells[this.GroupTotalIndex].IsNormal=!1,this.oSubTotal.Cells[this.GroupTotalIndex].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.GroupTotalIndex].CellAppearance.Alignment=this.oColumns[this.BalIndex].DataAppearance.Alignment):(this.oSubTotal.Cells[this.BalIndex].IsNormal=!1,this.oSubTotal.Cells[this.BalIndex].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.BalIndex].CellAppearance.Alignment=this.oColumns[this.BalIndex].DataAppearance.Alignment,this.ClubIncomeExpenseInPlainReport||(this.oSubTotal.Cells[this.BalIndex+1].IsNormal=!1,this.oSubTotal.Cells[this.BalIndex+1].CellAppearance=this.GrossTotalAppearance_Data.Clone(),this.oSubTotal.Cells[this.BalIndex+1].CellAppearance.Alignment=this.oColumns[this.BalIndex+1].DataAppearance.Alignment))),this.GroupTotalsSeperate)7!=this.ViewModel.StaticReportType?(this.dblTemp=-(this.lstTotal[s][this.BalIndex]+this.lstTotal[s][this.BalIndex+1]),this.dblTemp=Math.abs(this.dblTemp),this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oTempRow.Cells[this.GroupTotalIndex])):(this.dblTemp=this.lstTotal[s][this.BalIndex]+this.lstTotal[s][this.BalIndex+1],this.dblTemp=Math.abs(this.dblTemp),this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oTempRow.Cells[this.GroupTotalIndex]));else if(this.ClubIncomeExpenseInPlainReport)7!=this.ViewModel.StaticReportType?(this.dblTemp=-(this.lstTotal[s][this.BalIndex]+this.lstTotal[s][this.BalIndex+1]),this.dblTemp=Math.abs(this.dblTemp),this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oTempRow.Cells[this.CellStartPos+this.BalIndex])):(this.dblTemp=this.lstTotal[s][this.BalIndex]+this.lstTotal[s][this.BalIndex+1],this.dblTemp=Math.abs(this.dblTemp),this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oTempRow.Cells[this.CellStartPos+this.BalIndex]));else{let t,e;this.ShowIncomeFirst?(t=this.oTempRow.Cells[this.CellStartPos+this.BalIndex],e=this.oTempRow.Cells[this.CellStartPos+this.BalIndex+1]):(t=this.oTempRow.Cells[this.CellStartPos+this.BalIndex+1],e=this.oTempRow.Cells[this.CellStartPos+this.BalIndex]),7!=this.ViewModel.StaticReportType?(this.lstTotal[s][this.BalIndex]<=0?this.ViewModel.SetCellValue(-this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex].DataFormat,"FLOAT",t):(this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex].DataFormat,"FLOAT",t),t.Text+="Dr"),this.lstTotal[s][this.BalIndex+1]>=0?this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex+1],this.oColumns[this.BalIndex].DataFormat,"FLOAT",e):(this.ViewModel.SetCellValue(-this.lstTotal[s][this.BalIndex+1],this.oColumns[this.BalIndex].DataFormat,"FLOAT",e),e.Text+="Cr")):(this.lstTotal[s][this.BalIndex]>=0?this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex].DataFormat,"FLOAT",t):(this.ViewModel.SetCellValue(-this.lstTotal[s][this.BalIndex],this.oColumns[this.BalIndex].DataFormat,"FLOAT",t),t.Text+="Cr"),this.lstTotal[s][this.BalIndex+1]<=0?this.ViewModel.SetCellValue(-this.lstTotal[s][this.BalIndex+1],this.oColumns[this.BalIndex].DataFormat,"FLOAT",e):(this.ViewModel.SetCellValue(this.lstTotal[s][this.BalIndex+1],this.oColumns[this.BalIndex].DataFormat,"FLOAT",e),e.Text+="Dr"))}!this.GroupTotalsAtEnd||this.DontShowSummaryGroupTotals&&!this.STACKROWS[s].Row.IsExpanded?(this.TempData.RemoveAt(t),this.TempData.InsertAt(this.STACKROWS[s].Row,t)):(this.GrdRow++,this.TempData.push(this.oSubTotal))}}this.STACKROWS.RemoveAt(s),this.lstTotal.RemoveAt(s)}}AddReportTotal_Plain(){let t=null,e=null;if(this.GrdRow++,e=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),e.LevelNo=0,this.GrdRow++,t=this.NewReportRow_2(a.f.ReportTotal,this.ViewModel.GrpReportTotal.SubTotalAppearance),this.ViewModel.GrpReportTotal.Height>0&&(t.Height=this.ViewModel.GrpReportTotal.Height),t.Cells[this.CellStartPos].Text=i.a.GetResource("Reports_ReportTotal"),t.LevelNo=0,this.GrossCellIndex=this.CellStartPos+this.BalIndex,e.Cells[this.CellStartPos+this.BalIndex-1].CellAppearance=this.GrossTotalAppearance,1==this.ShowGrossInIncome?(this.ClubIncomeExpenseInPlainReport||this.ShowIncomeFirst||this.GrossCellIndex++,this.dbl>=0?this.ViewModel.SetCellValue(this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",e.Cells[this.GrossCellIndex]):(this.ViewModel.SetCellValue(-this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",e.Cells[this.GrossCellIndex]),e.Cells[this.GrossCellIndex].Text+="Dr"),this.SetPLText(e.Cells[this.CellStartPos+this.BalIndex-1],"Reports_LblNetLossForPeriod"),this.SetPLTextColor(e.Cells[this.GrossCellIndex],"Reports_LblNetLossForPeriod")):(!this.ClubIncomeExpenseInPlainReport&&this.ShowIncomeFirst&&this.GrossCellIndex++,this.dbl>=0?this.ViewModel.SetCellValue(this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",e.Cells[this.GrossCellIndex]):(this.ViewModel.SetCellValue(-this.dbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",e.Cells[this.GrossCellIndex]),e.Cells[this.GrossCellIndex].Text+="Cr"),this.SetPLText(e.Cells[this.CellStartPos+this.BalIndex-1],"Reports_LblNetProfitForPeriod"),this.SetPLTextColor(e.Cells[this.GrossCellIndex],"Reports_LblNetProfitForPeriod")),this.ClubIncomeExpenseInPlainReport)this.ViewModel.SetCellValue(Math.abs(this.ReportTotal[0])-Math.abs(this.ReportTotal[1]),this.oColumns[this.BalIndex].DataFormat,"FLOAT",t.Cells[this.CellStartPos+this.BalIndex]),t.Cells[this.CellStartPos+this.BalIndex].CellAppearance.Alignment="Right";else{let e=t.Cells[this.CellStartPos+this.BalIndex],s=t.Cells[this.CellStartPos+this.BalIndex+1];this.ShowIncomeFirst||(e=t.Cells[this.CellStartPos+this.BalIndex+1],s=t.Cells[this.CellStartPos+this.BalIndex]),this.ViewModel.SetCellValue(Math.abs(this.ReportTotal[0]),this.oColumns[this.BalIndex].DataFormat,"FLOAT",e),this.ViewModel.SetCellValue(Math.abs(this.ReportTotal[1]),this.oColumns[this.BalIndex].DataFormat,"FLOAT",s),e.CellAppearance.Alignment=s.CellAppearance.Alignment="Right"}t.Cells[this.CellStartPos].ColSpan=this.CellStartPos+this.BalIndex,this.IgnoreGrossRowsForBS||(0==this.RetainedEarningAccount||Math.abs(this.dbl)>.01)&&this.TempData.push(e),this.ViewModel.GrpReportTotal.GroupAppearance.IsVisible&&this.TempData.push(t)}AddNetProfitBeforeOtherIncome(){if(-1!=this.ReportRowStartIndex&&this.ShowNetProfitBeforeAndAfter&&(this.oRow=null,this.ReportFormat==p.Vertical?this.IsFirstCall&&(this.GrdRow++,this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.LevelNo=0,this.TempData.push(this.oRow)):this.ReportFormat==p.Horizontal&&(this.IsFirstCall&&(this.GrdRow++,this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.LevelNo=0,this.TempData.InsertAt(this.oRow,this.GrdRow)),this.IsIncome&&(this.oRow=null)),null!=this.oRow)){let t=this.Olddbl-this.ReportTotal[1];this.ShowGrossInIncome&&!this.IsIncome&&(t=-this.ReportTotal[1]),t>0?(this.oRow.Cells[this.CellStartPos+this.AccNameIndex].Text=i.a.GetResource("Reports_LblNetProfitBefore").toUpperCase(),this.ViewModel.Preferences.ContainsKey("Reports_LblNetProfitForPeriodClr")&&(this.oRow.Cells[this.CellStartPos+this.AccNameIndex].CellAppearance.ForeColor=this.ViewModel.Preferences.Reports_LblNetProfitForPeriodClr,this.oRow.Cells[this.CellStartPos+this.BalIndex].CellAppearance.ForeColor=this.ViewModel.Preferences.Reports_LblNetProfitForPeriodClr)):(t=-t,this.oRow.Cells[this.CellStartPos+this.AccNameIndex].Text=i.a.GetResource("Reports_LblNetLossBefore").toUpperCase(),this.ViewModel.Preferences.ContainsKey("Reports_LblNetLossForPeriodClr")&&(this.oRow.Cells[this.CellStartPos+this.AccNameIndex].CellAppearance.ForeColor=this.ViewModel.Preferences.Reports_LblNetLossForPeriodClr,this.oRow.Cells[this.CellStartPos+this.BalIndex].CellAppearance.ForeColor=this.ViewModel.Preferences.Reports_LblNetLossForPeriodClr)),this.oRow.Cells[this.CellStartPos+this.AccNameIndex].CellAppearance.Alignment="Left",this.ViewModel.SetCellValue(t,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.BalIndex]),this.ShowSalesPercentage&&this.dblTotalSales>0&&(this.dblTemp=100*t/this.dblTotalSales,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex+this.SalesPercentIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex+this.SalesPercentIndex]));for(let e=0;e<this.CountMonths;e++)this.dblTemp=this.OldReportTotalMonthWise[0][e]+this.OldReportTotalMonthWise[1][e]+(this.ReportTotalMonthWise[0][e]+this.ReportTotalMonthWise[1][e]),t>0&&(this.dblTemp=-this.dblTemp),this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+e].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.ColumnSize+e]);this.TempData.RemoveAt(this.GrdRow),this.TempData.InsertAt(this.oRow,this.GrdRow)}}AddRow_BF(){this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.LevelNo=0,this.ReportFormat==p.Vertical?this.ShowGrossInIncome&&!this.IsIncome?(this.ReportTotal[1]=this.Olddbl,this.AddGrossToVariance&&(this.ShowBudgetVariance&&(this.ReportTotalALL[1][this.BalIndex+1]=-this.Olddbl),this.ShowBudgetVariancePercent&&(this.ReportTotalALL[1][this.BalIndex+this.VariancePercentIndex]=-this.Olddbl)),this.ShowCarryForward&&(this.GrdRow++,this.oRow.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_BalanceBF"),this.ViewModel.SetCellValue(this.Olddbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex]),this.AddGrossToVariance&&this.ShowBudgetVariance&&this.ViewModel.SetCellValue(this.ReportTotalALL[1][this.BalIndex+1],this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex+1]),this.TempData.push(this.oRow))):!this.ShowGrossInIncome&&this.IsIncome&&(this.ReportTotal[0]=-this.Olddbl,this.AddGrossToVariance&&(this.ShowBudgetVariance&&(this.ReportTotalALL[0][this.BalIndex+1]=this.Olddbl),this.ShowBudgetVariancePercent&&(this.ReportTotalALL[0][this.BalIndex+this.VariancePercentIndex]=this.Olddbl)),this.ShowCarryForward&&(this.GrdRow++,this.oRow.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_BalanceBF"),this.ViewModel.SetCellValue(this.Olddbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex]),this.AddGrossToVariance&&this.ShowBudgetVariance&&this.ViewModel.SetCellValue(this.ReportTotalALL[0][this.BalIndex+1],this.oColumns[this.BalIndex+1].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex+1]),this.TempData.push(this.oRow))):(this.ShowCarryForward&&this.GrdRow++,this.IsFirstCall&&(this.ShowCarryForward&&(this.ShowIncomeFirst&&!this.ShowGrossInIncome||!this.ShowIncomeFirst&&this.ShowGrossInIncome?(this.oRow.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_BalanceBF"),this.ViewModel.SetCellValue(this.Olddbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.BalIndex]),this.TempData.push(this.oRow)):(this.oRow.Cells[this.ColumnSize+this.AccNameIndex].Text=i.a.GetResource("Reports_BalanceBF"),this.ViewModel.SetCellValue(this.Olddbl,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.ColumnSize+this.BalIndex]),this.TempData.push(this.oRow))),this.ShowGrossInIncome?this.ReportTotal[1]=this.Olddbl:this.ReportTotal[0]=-this.Olddbl))}AddOpeningStock(){if(!this.IncludeOpeningStock&&0==this.ClosingStockAccount)return;let t;if(0!=this.ClosingStockAccount?(this.dblOpeningStock=0,t=this.dsNew.Tables[0].filter(t=>t.AccountID==this.ClosingStockAccount),t.forEach(t=>{this.dblOpeningStock+=o.e.Double(t.Balance)})):t=[],this.ReportFormat==p.Plain)this.GrdRow++,this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_LblOpeningStock"),this.ViewModel.SetCellValue(this.dblOpeningStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.ShowIncomeFirst?this.oRow.Cells[this.CellStartPos+this.BalIndex+1]:this.oRow.Cells[this.CellStartPos+this.BalIndex]),this.TempData.push(this.oRow);else if(this.ReportFormat==p.Vertical){if(this.GrdRow++,this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_LblOpeningStock"),this.ViewModel.SetCellValue(this.dblOpeningStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.BalIndex]),null!=this.dsOpeningStock){let t;for(let e=0;e<this.CountMonths;e++)if(o.e.IsNum(this.oColumns[this.CellStartPos+this.ColumnSize+e].ID)){t=o.e.Int(this.oColumns[this.CellStartPos+this.ColumnSize+e].ID),this.dblTemp=0;let s=this.dsOpeningStock.Tables[0].filter(e=>e.TagID==t);s.length>0&&(this.dblTemp=parseFloat(s[0].BalValue)),this.ReportTotalMonthWise[1][e]=this.IsIncomeNegative?this.dblTemp:-this.dblTemp,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+e].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.ColumnSize+e])}}this.TempData.push(this.oRow)}else this.ReportFormat==p.Horizontal&&(this.GrdRow++,this.IsFirstCall||this.GrdRow>this.FirstTypeEndIndex?(this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.CellStartPos+this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.CellStartPos+this.AccNameIndex].Text=i.a.GetResource("Reports_LblOpeningStock"),this.ViewModel.SetCellValue(this.dblOpeningStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.BalIndex]),this.TempData.push(this.oRow)):(this.oRow=this.TempData[this.GrdRow],this.oRow.Cells[this.CellStartPos+this.AccNameIndex].IsNormal=!1,this.oRow.Cells[this.CellStartPos+this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.CellStartPos+this.AccNameIndex].Text=i.a.GetResource("Reports_LblOpeningStock"),this.oRow.Cells[this.CellStartPos+this.BalIndex].IsNormal=!1,this.oRow.Cells[this.CellStartPos+this.BalIndex].CellAppearance=this.GrossTotalAppearance_Data,this.ViewModel.SetCellValue(this.dblOpeningStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.BalIndex]),this.TempData.Remove(this.oRow),this.TempData.InsertAt(this.oRow,this.GrdRow)));this.ReportTotal[1]=this.IsIncomeNegative?this.dblOpeningStock:-this.dblOpeningStock}AddClosingStock(){if(this.IncludeClosingStock){if(this.ReportFormat==p.Plain)this.GrdRow++,this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_LblClosingStock"),this.ViewModel.SetCellValue(this.dblClosingStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.ShowIncomeFirst?this.oRow.Cells[this.CellStartPos+this.BalIndex]:this.oRow.Cells[this.CellStartPos+this.BalIndex+1]),this.TempData.push(this.oRow);else if(this.ReportFormat==p.Vertical){if(this.GrdRow++,this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_LblClosingStock"),this.ViewModel.SetCellValue(this.dblClosingStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.BalIndex]),null!=this.dsClosingStock){let t;for(let e=0;e<this.CountMonths;e++)if(o.e.IsNum(this.oColumns[this.CellStartPos+this.ColumnSize+e].ID)){t=o.e.Int(this.oColumns[this.CellStartPos+this.ColumnSize+e].ID),this.dblTemp=0;let s=this.dsClosingStock.Tables[0].filter(e=>e.TagID==t);s.length>0&&(this.dblTemp=parseFloat(s[0].BalValue)),this.ReportTotalMonthWise[0][e]=this.IsIncomeNegative?this.ReportTotalMonthWise[0][e]-this.dblTemp:this.ReportTotalMonthWise[0][e]+this.dblTemp,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+e].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.ColumnSize+e])}}this.TempData.push(this.oRow)}else this.ReportFormat==p.Horizontal&&(this.GrdRow++,this.IsFirstCall||this.GrdRow>this.FirstTypeEndIndex?(this.oRow=this.NewReportRow_2(a.f.GrossTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.CellStartPos+this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.CellStartPos+this.AccNameIndex].Text=i.a.GetResource("Reports_LblClosingStock"),this.ViewModel.SetCellValue(this.dblClosingStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.BalIndex]),this.TempData.push(this.oRow)):(this.oRow=this.TempData[this.GrdRow],this.oRow.Cells[this.CellStartPos+this.AccNameIndex].IsNormal=!1,this.oRow.Cells[this.CellStartPos+this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[this.CellStartPos+this.AccNameIndex].Text=i.a.GetResource("Reports_LblClosingStock"),this.oRow.Cells[this.CellStartPos+this.BalIndex].IsNormal=!1,this.oRow.Cells[this.CellStartPos+this.BalIndex].CellAppearance=this.GrossTotalAppearance_Data,this.ViewModel.SetCellValue(this.dblClosingStock,this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.oRow.Cells[this.CellStartPos+this.BalIndex]),this.TempData.Remove(this.oRow),this.TempData.InsertAt(this.oRow,this.GrdRow)));this.ReportTotal[0]=this.IsIncomeNegative?this.ReportTotal[0]-this.dblClosingStock:this.ReportTotal[0]+this.dblClosingStock}}AddGroup(t){this.ReportFormat==p.Vertical?(this.GrdRow++,this.row=this.NewReportRow_2(a.f.Header,this.IncomeExpenseHeader),this.row.Height=this.row.Height+3,this.row.LevelNo=0):this.ReportFormat==p.Horizontal&&(this.GrdRow++,this.IsFirstCall?(this.row=this.NewReportRow_2(a.f.Header,this.IncomeExpenseHeader),this.row.Height=this.row.Height+2,this.row.LevelNo=0):this.row=this.TempData[this.GrdRow]),this.row.Cells[this.CellStartPos].Text=t,null!=this.row.Cells[this.CellStartPos].CellAppearance&&(this.row.Cells[this.CellStartPos].CellAppearance.Alignment="Center"),this.row.Cells[this.CellStartPos].ColSpan=this.ColumnSize,o.e.IsEmpty(t)&&(this.row.Visible=!1),-1==this.TempData.indexOf(this.row)?this.TempData.push(this.row):(this.TempData.RemoveAt(this.GrdRow),this.TempData.InsertAt(this.row,this.GrdRow))}FormatData(t,e,s){if(4==this.NegNumber)this.IsIncomeNegative&&this.IsIncome||!this.IsIncomeNegative&&!this.IsIncome?e<=0?this.ViewModel.SetCellValue(-e,s.DataFormat,"FLOAT",t):(this.ViewModel.SetCellValue(e,s.DataFormat,"FLOAT",t),s.DataFormat.NumberFormat.length>0&&(t.Text+=" "),t.Text+="Dr"):e>=0?this.ViewModel.SetCellValue(e,s.DataFormat,"FLOAT",t):(this.ViewModel.SetCellValue(-e,s.DataFormat,"FLOAT",t),s.DataFormat.NumberFormat.length>0&&(t.Text+=" "),t.Text+="Cr");else{let i="",o="";this.IsIncomeNegative&&this.IsIncome||!this.IsIncomeNegative&&!this.IsIncome?e<=0?this.SetCellValue(-e,s.DataFormat,i,o,t):(0==s.DataFormat.NegativeNumber?i="-":o="Dr",this.SetCellValue(e,s.DataFormat,i,o,t),0==s.DataFormat.NegativeNumber&&(t.Value=-e)):e>=0?this.SetCellValue(e,s.DataFormat,i,o,t):(0==s.DataFormat.NegativeNumber?i="-":o="Cr",this.SetCellValue(-e,s.DataFormat,i,o,t),0==s.DataFormat.NegativeNumber&&(t.Value=e))}}SetCellValue(t,e,s,i,l){l.IsNegativeRed=!1;let h,a="";if(a=e.DecimalsPoints>0?"N"+e.DecimalsPoints.toString():"N0",e.RoundOff>0){let s=t%e.RoundOff;s<e.RoundOff/2?t-=s:t=t+e.RoundOff-s}l.Value=t,h=e.NumberFormat.length>0?d.ReportViewModel.NumbetFormatted(t,e):t.ToString(a),s.length>0&&(h=s+h),i.length>0&&(h+=i),o.e.IsEmpty(e.PercentageOn)||(h+="%"),l.Text=h}AddOpenBalanceDifference(){}AddOpenBalanceDifferenceForBS(){if(7==this.ViewModel.StaticReportType&&(this.dblTemp=this.dblOpeningBalanceDifference,parseFloat(Math.abs(this.dblTemp).ToString("N1"))>.1))if(this.row=this.NewReportRow_2(a.f.BalanceBF,this.GrossTotalAppearance_Data),this.row.LevelNo=0,this.ReportFormat==p.Plain)this.row.Cells[this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.row.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_OpeningBalanceDifference"),this.dblTemp>0?(this.ReportTotalIndex=this.ShowIncomeFirst?0:1,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex+this.ReportTotalIndex].DataFormat,"FLOAT",this.row.Cells[this.BalIndex+this.ReportTotalIndex]),this.ReportTotal[0]+=this.dblTemp):(this.ReportTotalIndex=this.ShowIncomeFirst?1:0,this.ViewModel.SetCellValue(-this.dblTemp,this.oColumns[this.BalIndex+this.ReportTotalIndex].DataFormat,"FLOAT",this.row.Cells[this.BalIndex+this.ReportTotalIndex]),this.ReportTotal[1]+=this.dblTemp),this.GrdRow++,this.TempData.push(this.row);else if(this.ReportFormat==p.Horizontal)this.dblTemp>0?(this.ReportTotalIndex=this.ShowIncomeFirst?0:this.ColumnSize,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.BalIndex+this.ReportTotalIndex].DataFormat,"FLOAT",this.row.Cells[this.BalIndex+this.ReportTotalIndex]),this.ReportTotal[0]+=this.dblTemp):(this.ReportTotalIndex=this.ShowIncomeFirst?this.ColumnSize:0,this.ViewModel.SetCellValue(-this.dblTemp,this.oColumns[this.BalIndex+this.ReportTotalIndex].DataFormat,"FLOAT",this.row.Cells[this.BalIndex+this.ReportTotalIndex]),this.ReportTotal[1]+=this.dblTemp),this.row.Cells[this.ReportTotalIndex+this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.row.Cells[this.ReportTotalIndex+this.AccNameIndex].Text=i.a.GetResource("Reports_OpeningBalanceDifference"),this.FirstTypeEndIndex<this.GrdRow?this.GrdRow++:this.FirstTypeEndIndex++,this.TempData.push(this.row);else if(this.ReportFormat==p.Vertical){this.GrdRow++,this.row.Cells[this.AccNameIndex].CellAppearance=this.GrossTotalAppearance,this.row.Cells[this.AccNameIndex].Text=i.a.GetResource("Reports_OpeningBalanceDifference");let t=0;if(this.dblTemp<0&&(t=1),this.ViewModel.SetCellValue(Math.abs(this.dblTemp),this.oColumns[this.BalIndex].DataFormat,"FLOAT",this.row.Cells[this.BalIndex]),this.ReportTotal[t]+=this.dblTemp,this.Show==u.TagWise)for(let e=0;e<this.CountMonths;e++)this.lstTagsOpeningBalance.Keys.Contains(this.oColumns[this.CellStartPos+this.ColumnSize+e].ID)&&(this.dblTemp=this.lstTagsOpeningBalance[this.oColumns[this.CellStartPos+this.ColumnSize+e].ID],t=0,this.dblTemp<0&&(t=1),this.ReportTotalMonthWise[t][e]+=this.dblTemp,this.ViewModel.SetCellValue(this.dblTemp,this.oColumns[this.CellStartPos+this.ColumnSize+e].DataFormat,"FLOAT",this.row.Cells[this.CellStartPos+this.ColumnSize+e]));else for(let e=0;e<this.CountMonths;e++)this.ReportTotalMonthWise[t][e]+=this.dblTemp,this.ViewModel.SetCellValue(Math.abs(this.dblTemp),this.oColumns[this.CellStartPos+this.ColumnSize+e].DataFormat,"FLOAT",this.row.Cells[this.CellStartPos+this.ColumnSize+e]);this.dblTemp>0?this.ShowIncomeFirst?(this.FirstTypeEndIndex++,this.TempData.InsertAt(this.row,this.FirstTypeEndIndex)):this.TempData.push(this.row):this.ShowIncomeFirst?this.TempData.push(this.row):(this.FirstTypeEndIndex++,this.TempData.InsertAt(this.row,this.FirstTypeEndIndex))}}UpdateDataTableWithGroups(){}SetStockBalance(t){let e,s="";this.lstTagColumns.forEach(t=>{s.length>0&&(s+=","),s+=t});let l=[];l.push(t?1:0),l.push(""),l.push(this.TagID),l.push(" inner join com_docccdata DCC with(nolock) on DCC.InvDocDetailsID=D.InvDocDetailsID");let h="";var a=this.ViewModel.oReportDialog.CostCenterFilters.find(t=>t.CostCenterID==this.TagID);if(null!=a){let t="";a.SelectedNodes.forEach(e=>{t+=e.Id+","}),t.length>0&&(t=t.Remove(t.length-1,1),h+=" AND DCC.DCCCNID"+(a.CostCenterID-5e4)+" IN ("+t+")")}let n=null;if(this.ViewModel.oReportDialog.Locations.Visible&&null!=this.ViewModel.oReportDialog.LocationWhere&&(n=o.e.IsEmpty(this.ViewModel.oReportDialog.LocationWhere)?"-1":this.ViewModel.oReportDialog.LocationWhere,h+=" AND DCC.DCCCNID"+(this.ViewModel.oReportDialog.Locations.DBColumnID-5e4)+" IN ("+n+")"),l.push(h),l.push(this.ViewModel.oReportDialog.FromDate.Date),l.push(this.ViewModel.oReportDialog.ToDate.Date),l.push(this.UnPostedDocsInclude),l.push(i.a.SessionManager.UserName),e=i.a.report.SetAvgRateTempTable(l,this.ViewModel.IsReportDB),0!=e.length)try{let h=o.e.Int(i.a.SessionManager.Preferences["Maintain Dimensionwise stock"]);if(l=[],l.push(e),l.push(this.TagID),l.push(s),l.push(h),this.ViewModel.oReportDialog.Locations.Visible&&null!=this.ViewModel.oReportDialog.LocationWhere?o.e.IsEmpty(this.ViewModel.oReportDialog.LocationWhere)?l.push(-1):l.push(this.ViewModel.oReportDialog.LocationWhere):l.push(null),l.push(this.ViewModel.oReportDialog.ToDate.Date),l.push(0),l.push(i.a.SessionManager.LanguageID),t){if(this.dsOpeningStock=i.a.report.GetStockBalancesTagWise(l,this.ViewModel.IsReportDB),this.dsOpeningStock.Tables[0].length>0){let t=this.dsOpeningStock.Tables[0].Compute("sum","BalValue");null!=t&&(this.dblOpeningStock=parseFloat(t))}}else if(this.dsClosingStock=i.a.report.GetStockBalancesTagWise(l,this.ViewModel.IsReportDB),this.dsClosingStock.Tables[0].length>0){let t=this.dsClosingStock.Tables[0].Compute("sum","BalValue");null!=t&&(this.dblClosingStock=parseFloat(t))}}catch(r){}finally{e.length>0&&i.a.report.ReportDataSet("RPT022",this.ViewModel.IsReportDB,"USE PACT2C\n                IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].["+e+"]') AND type in (N'U'))\nDROP TABLE "+e+"\nDELETE FROM RPT_TempTables WHERE TempTableName='"+e+"'")}else this.ViewModel.DisplayMessage="Setting Temporary Table Error."}SetPLText(t,e){this.SetPLTextColor(t,e),e=this.ViewModel.Preferences.ContainsKey(e)?this.ViewModel.Preferences[e]:i.a.GetResource(e).toUpperCase(),t.Text=e}SetPLTextColor(t,e){this.ViewModel.Preferences.ContainsKey(e+"Clr")?t.CellAppearance.ForeColor=this.ViewModel.Preferences[e+"Clr"]:"Reports_LblNetLossAfter"==e&&this.ViewModel.Preferences.ContainsKey("Reports_LblNetLossForPeriodClr")?t.CellAppearance.ForeColor=this.ViewModel.Preferences.Reports_LblNetLossForPeriodClr:"Reports_LblNetProfitAfter"==e&&this.ViewModel.Preferences.ContainsKey("Reports_LblNetProfitForPeriodClr")&&(t.CellAppearance.ForeColor=this.ViewModel.Preferences.Reports_LblNetProfitForPeriodClr)}}}}]);