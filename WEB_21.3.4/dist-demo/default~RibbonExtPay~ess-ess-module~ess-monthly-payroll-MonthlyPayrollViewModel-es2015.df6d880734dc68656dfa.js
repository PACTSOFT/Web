(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{"+0zN":function(t,e,s){"use strict";s.r(e),s.d(e,"MonthlyPayrollViewModel",(function(){return G}));var a=s("mrSG"),i=s("Do2H"),l=s("Lp6j"),o=s("eQJW"),r=s("ScVY"),n=s("4ADR"),d=s("EQd/"),h=s("Huqd"),c=s("8B8H"),g=s("sDFv"),D=s("JIg3"),u=s("jgdN"),P=s("n56n"),y=s("0/4Q"),C=s("ockk"),m=s("VxiT"),p=s("Jnyl"),M=s("FruK"),S=s("4HhE"),E=s("s7Y5"),F=s("/G+I"),T=s("BUEH"),f=s("PGQ+");class A extends r.b{constructor(t){super(),this.DialogResult=!1,this.dtAdjData=[],this.SelectedEmpID=0,this.dtProcessed=[],this.strSelectedMonths="",Logger.InfoLog("AdjustmentsViewModel::Entering AdjustmentsViewModel()"),this.DisplayMessage="",this.Parent=t[0],this.Parent.Opacity=.3,this.SelectedEmpID=parseInt(t[1]),this.dtDOJ=new Date(t[2]),this.dtAdjData=t[3],this.LoadGrid(),this.dgv.Clear(),this.dtProcessed=i.a.empService.GetQueryData(this.SelectedEmpID,"ADJ001","","","");let e,s=i.a.SessionManager.PayrollMonth.AddMonths(-1),a=new Date(this.dtDOJ.getFullYear(),this.dtDOJ.getMonth(),1),l=this.dtDOJ.DaysInMonth();for(this.drc=this.dtProcessed.filter(t=>t.PayrollMonth&&new Date(t.PayrollMonth).ToString("dd/MMM/yyyy")==a.ToString("dd/MMM/yyyy")),null!=this.drc&&0!=this.drc.length||(e={},e.EmpSeqNo=this.SelectedEmpID,e.PayrollMonth=a,e.TotalDays=l,e.DaysWorked=this.dtDOJ.getDate()-1,e.Leaves=0,e.AdjDays=0,this.dtProcessed.push(e));s>=a;)this.drc=this.dtProcessed.filter(t=>t.PayrollMonth&&new Date(t.PayrollMonth).ToString("dd/MMM/yyyy")==s.ToString("dd/MMM/yyyy")),null!=this.drc&&this.drc.length>0&&(e=this.dgv.NewRow(),e.Select=!1,e.PayrollMonth=s.ToString("dd/MMM/yyyy"),this.dgv.addRow(e)),s=s.AddMonths(-1);if(null!=this.dtAdjData&&this.dtAdjData.length>0)for(let i=0;i<this.dgv.Table.length;i++)this.drc=this.dtAdjData.filter(t=>t.AdjMonth==this.dgv.Table[i].PayrollMonth.toString()),null!=this.drc&&this.drc.length>0&&(this.dgv.Table[i].Select=!0,this.dgv.Table[i].Days=this.drc[0].Days.toString(),this.dgv.Table[i].Remarks=this.drc[0].Remarks.toString(),this.dgv.updateRow(this.dgv.Table[i]));Logger.InfoLog("AdjustmentsViewModel::Exiting AdjustmentsViewModel()")}LoadGrid(){Logger.InfoLog("AdjustmentsViewModel::Entering LoadGrid()"),this.dgv=new c.a,this.dgv.Columns=[],this.dgv.Width="";let t=new C.a;t.Header="Select",t.DisplayMember="Select",t.ID="Select",t.Width=60,t.DataType="CheckBox",t.ReadOnly=!1,this.dgv.Columns.push(t),t=new C.a,t.Header="Payroll Month",t.DisplayMember="PayrollMonth",t.ID="PayrollMonth",t.Width=120,t.ReadOnly=!0,t.TextAlign="Center",this.dgv.Columns.push(t),t=new C.a,t.Header="Days",t.DisplayMember="Days",t.ID="Days",t.Width=80,t.ReadOnly=!1,t.DataType="FLOAT",this.dgv.Columns.push(t),t=new C.a,t.Header="Remarks",t.DisplayMember="Remarks",t.ID="Remarks",t.Width=200,t.ReadOnly=!1,this.dgv.Columns.push(t),this.dgv.Clear(),this.dgv.TableColumns.push("Select"),this.dgv.TableColumns.push("PayrollMonth"),this.dgv.TableColumns.push("Days"),this.dgv.TableColumns.push("Remarks"),Logger.InfoLog("AdjustmentsViewModel::Exiting LoadGrid()")}Button_Click(t){if(Logger.InfoLog("AdjustmentsViewModel::Entering Button_Click"),"OK"==t.toString()){let t;this.dtAdjData.Clear();let e=0;for(let a=0;a<this.dgv.Table.length;a++)Object(o.j)(this.dgv.Table[a].Select)&&!l.e.IsEmpty(this.dgv.Table[a].Days)&&""!=this.dgv.Table[a].Days.toString().Trim()&&(t=this.dtAdjData.NewRow(),t.PayrollMonth=i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy"),t.AdjMonth=this.dgv.Table[a].PayrollMonth.toString(),t.Days=this.dgv.Table[a].Days.toString(),t.Remarks=l.e.IsEmpty(this.dgv.Table[a].Remarks)?"":this.dgv.Table[a].Remarks.toString(),this.dtAdjData.push(t),e++);if(0==e)return this.DisplayMessage="Select atleast one Month to adjust",void(this.MessageVisibility=!0);let s=0;if(null!=this.dtAdjData&&this.dtAdjData.length>0)for(let a=0;a<this.dtAdjData.length;a++)for(let t=0;t<this.dtProcessed.length;t++)if(new Date(this.dtAdjData[a].AdjMonth)==new Date(this.dtProcessed[t].PayrollMonth)&&new Date(this.dtAdjData[a].PayrollMonth)!=i.a.SessionManager.PayrollMonth){if(s=parseFloat(this.dtProcessed[t].AdjDays),s+parseFloat(this.dtProcessed[t].DaysWorked)+parseFloat(this.dtProcessed[t].Leaves)+parseFloat(this.dtAdjData[a].Days)>parseFloat(this.dtProcessed[t].TotalDays))return this.DisplayMessage="Days Exceeded for the Payroll Month - "+this.dtAdjData[a].AdjMonth+",\r\nCan not be more than "+(parseFloat(this.dtProcessed[t].TotalDays)-(parseFloat(this.dtProcessed[t].DaysWorked)+parseFloat(this.dtProcessed[t].Leaves)+s)),void(this.MessageVisibility=!0);break}null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!0),this.DialogResult=!0}else"Cancel"==t.toString()&&(null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!1),this.DialogResult=!1);i.a.page.HideDialog(),Logger.InfoLog("AdjustmentsViewModel::Exiting Button_Click")}}var L=s("FZke");class I extends r.b{constructor(t){super(),this.DialogResult=!1,this.dtDSData=[],this.TdtDSData=null,this.SelectedEmpID=0,this.strSelectedMonths="",Logger.InfoLog("DuesSelectionViewModel::Entering DuesSelectionViewModel()"),this.DisplayMessage="",this.Parent=t[0],this.Parent.Opacity=.3,this.SelectedEmpID=parseInt(t[1]),this.dtPayrollMonth=new Date(t[2]),this.dtDSData=t[3],this.LoadGrid(),this.dgv.Clear();let e=i.a.empService.GetQueryData(this.SelectedEmpID,"DUE001","","","");if(null!=e&&e.Tables[0].length>0){let t="",s=!1;for(let a=0,i=0;a<e.Tables[0].length;a++)s=!1,t="FieldType='"+e.Tables[0][a].FieldType.toString()+"' AND ComponentID='"+e.Tables[0][a].ComponentID.toString()+"' AND DuesPaidMonth='"+new Date(e.Tables[0][a].PayrollMonth).ToString("dd/MMM/yyyy")+"' ",this.drc=e.Tables[1].filter(t=>t.FieldType==e.Tables[0][a].FieldType.toString()&&t.ComponentID==e.Tables[0][a].ComponentID.toString()&&t.vDuesPaidMonth==new Date(e.Tables[0][a].PayrollMonth).ToString("dd/MMM/yyyy")),null!=this.drc&&this.drc.length>0?new Date(this.drc[0].PayrollMonth)==this.dtPayrollMonth&&(s=!0):s=!0,s&&(this.drw=this.dgv.NewRow(),this.drw.SlNo=(i+1).toString(),this.drw.FieldType=e.Tables[0][a].sFieldType.toString(),this.drw.ComponentName=e.Tables[0][a].ComponentName.toString(),this.drw.PayrollMonth=new Date(e.Tables[0][a].PayrollMonth).ToString("dd/MMM/yyyy"),this.drw.Amount=e.Tables[0][a].Amount.toString(),this.drw.Select=!1,this.drw.ComponentID=e.Tables[0][a].ComponentID.toString(),this.dgv.addRow(this.drw),i++)}if(null!=this.dtDSData&&this.dtDSData.length>0)for(let s=0;s<this.dgv.Table.length;s++)this.drc=this.dtDSData.filter(t=>t.FieldType==l.e.String(this.dgv.Table[s].FieldType)&&t.ComponentID==l.e.String(this.dgv.Table[s].ComponentID)&&t.PayrollMonth==l.e.String(this.dgv.Table[s].PayrollMonth)),null!=this.drc&&this.drc.length>0&&(this.dgv.Table[s].Select=!0);Logger.InfoLog("DuesSelectionViewModel::Exiting DuesSelectionViewModel()")}LoadGrid(){Logger.InfoLog("DuesSelectionViewModel::Entering LoadGrid()"),this.dgv=new c.a,this.dgv.Columns=[],this.dgv.Width="";let t=new C.a;t.Header="#",t.DisplayMember="SlNo",t.ID="SlNo",t.Width=40,t.ReadOnly=!0,t.TextAlign="Center",this.dgv.Columns.push(t),t=new C.a,t.Header="Field Type",t.DisplayMember="FieldType",t.ID="FieldType",t.Width=85,t.ReadOnly=!0,t.TextAlign="Left",this.dgv.Columns.push(t),t=new C.a,t.Header="Component Name",t.DisplayMember="ComponentName",t.ID="ComponentName",t.Width=150,t.ReadOnly=!0,t.TextAlign="Left",this.dgv.Columns.push(t),t=new C.a,t.Header="Payroll Month",t.DisplayMember="PayrollMonth",t.ID="PayrollMonth",t.Width=95,t.ReadOnly=!0,t.TextAlign="Center",this.dgv.Columns.push(t),t=new C.a,t.Header="Amount",t.DisplayMember="Amount",t.ID="Amount",t.Width=80,t.ReadOnly=!0,t.DataType="FLOAT",this.dgv.Columns.push(t),t=new C.a,t.Header="Select",t.DisplayMember="Select",t.ID="Select",t.Width=50,t.DataType="CheckBox",t.ReadOnly=!1,this.dgv.Columns.push(t),this.dgv.Clear(),this.dgv.TableColumns.push("SlNo"),this.dgv.TableColumns.push("FieldType"),this.dgv.TableColumns.push("ComponentName"),this.dgv.TableColumns.push("PayrollMonth"),this.dgv.TableColumns.push("Amount"),this.dgv.TableColumns.push("Select"),this.dgv.TableColumns.push("ComponentID"),this.dgv.Clear(),Logger.InfoLog("DuesSelectionViewModel::Exiting LoadGrid()")}Button_Click(t){if(Logger.InfoLog("DuesSelectionViewModel::Entering Button_Click"),"OK"==t.toString()){this.dtDSData.Clear();let t=0;for(let e=0;e<this.dgv.Table.length;e++)!l.e.IsEmpty(this.dgv.Table[e].Select)&&Object(o.j)(this.dgv.Table[e].Select)&&(this.drw={},this.drw.FieldType=this.dgv.Table[e].FieldType.toString(),this.drw.ComponentID=this.dgv.Table[e].ComponentID.toString(),this.drw.PayrollMonth=new Date(this.dgv.Table[e].PayrollMonth).ToString("dd/MMM/yyyy"),this.drw.Amount=this.dgv.Table[e].Amount.toString(),this.dtDSData.push(this.drw),t++);if(0==t)return this.DisplayMessage="Select atleast one allowance",void(this.MessageVisibility=!0);null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!0),this.DialogResult=!0}else"Cancel"==t.toString()&&(null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!1),this.DialogResult=!1);i.a.page.HideDialog(),Logger.InfoLog("DuesSelectionViewModel::Exiting Button_Click")}}class b extends r.b{constructor(t){super(),this.ChklstPayrollMonths=[],this.DialogResult=!1,this.dtArrData=[],this.SelectedEmpID=0,this.strSelectedMonths="",Logger.InfoLog("ArrearsViewModel::Entering ArrearsViewModel()"),this.DisplayMessage="",this.Parent=t[0],this.Parent.Opacity=.3,this.SelectedEmpID=parseInt(t[1]),this.dtArrData=t[2],this.ChklstPayrollMonths.Clear();let e=i.a.empService.GetQueryData(this.SelectedEmpID,"ARE001",i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy"),"","");if(null!=e&&e.Tables[0].length>0){let t=new Date(e.Tables[0][0].DtApplyFrom.toString()),s=new Date(e.Tables[0][0].DtEffectFrom.toString()),a=e.Tables[1][0].ArrCalcMonths.toString();if(s>t&&i.a.SessionManager.PayrollMonth>=s){this.ChklstPayrollMonths.Clear();let e=t;for(;e<s;)a.Contains(e.ToString("dd/MMM/yyyy"))||this.ChklstPayrollMonths.push(new y.c(e.ToString("dd/MMM/yyyy"))),e=e.AddMonths(1)}}else this.DisplayMessage="Appraisals are not found for this Employee",this.MessageVisibility=!0;if(null!=this.dtArrData&&this.dtArrData.length>0)for(let s=0;s<this.dtArrData.length;s++)for(let t=0;t<this.ChklstPayrollMonths.length;t++)if(new Date(this.dtArrData[s].PayrollMonth)==new Date(this.ChklstPayrollMonths[t].Name)){this.ChklstPayrollMonths[t].IsChecked=!0;break}Logger.InfoLog("ArrearsViewModel::Exiting ArrearsViewModel()")}Button_Click(t){if(Logger.InfoLog("ArrearsViewModel::Entering Button_Click"),"OK"==t.toString()){let t;this.dtArrData.Clear();for(let e=0;e<this.ChklstPayrollMonths.length;e++)this.ChklstPayrollMonths[e].IsChecked&&(this.strSelectedMonths+=this.ChklstPayrollMonths[e].Name+";",t={},t.PayrollMonth=this.ChklstPayrollMonths[e].Name,this.dtArrData.push(t));if(!(this.strSelectedMonths.length>0))return this.DisplayMessage="Select atleast one Payroll Month",void(this.MessageVisibility=!0);this.strSelectedMonths=this.strSelectedMonths.Remove(this.strSelectedMonths.length-1,1),null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!0),this.DialogResult=!0}else"Cancel"==t.toString()&&(null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!1),this.DialogResult=!1);i.a.page.HideDialog(),Logger.InfoLog("ArrearsViewModel::Exiting Button_Click")}}var N=s("dc+d"),v=s("4k0m"),O=s("++IR"),V=s("PDNK"),w=s("NkMH");class R extends r.b{constructor(t){super(),this.DialogResult=!1,this.txtPartialRExcessAmt=new d.d(0),this.rdbInstAmt=new V.a,this.rdbPartialRExcessAmt=new V.a,this.rdbPostpone=new V.a,this.rdbExempt=new V.a,this.btnExcessPay=new w.a,this.Amount=0,this.InstAmt=0,this.BalAmount=0,this.ApprovedAmt=0,this.LoanPayType=0,this.iLoanType=0,this.EmpSeqNo=0,this.sLoanType="",this.DocNo="",this.sDecimalsAmount="N"+i.a.SessionManager.Preferences.DecimalsinAmount,Logger.InfoLog("ChangeLoanViewModel::Entering ChangeLoanViewModel"),this.DisplayMessage="",this.Parent=t[0],this.Parent.Opacity=.3,this.LoanPayType=parseInt(t[1]),this.Amount=parseFloat(t[2]),this.InstAmt=parseFloat(t[3]),this.BalAmount=parseFloat(t[4]),this.EmpSeqNo=parseInt(t[5]),this.iLoanType=parseInt(t[6]),this.sLoanType=t[7].toString(),this.DocNo=t[8].toString(),this.rdbInstAmt.CheckedChangedCommand.Subscribe(this,"rdbPartialRExcessAmt_CheckedChanged"),this.rdbPartialRExcessAmt.CheckedChangedCommand.Subscribe(this,"rdbPartialRExcessAmt_CheckedChanged"),this.rdbPostpone.CheckedChangedCommand.Subscribe(this,"rdbPartialRExcessAmt_CheckedChanged"),this.rdbExempt.CheckedChangedCommand.Subscribe(this,"rdbPartialRExcessAmt_CheckedChanged"),this.rdbInstAmt.IsChecked=!0,this.txtPartialRExcessAmt.Visible=!1,this.txtPartialRExcessAmt.Text=this.Amount.ToString(this.sDecimalsAmount),this.btnExcessPay.Visible=!1,0==this.LoanPayType?this.rdbInstAmt.IsChecked=!0:1==this.LoanPayType?(this.txtPartialRExcessAmt.Visible=!0,this.rdbPartialRExcessAmt.IsChecked=!0):2==this.LoanPayType?this.rdbPostpone.IsChecked=!0:3==this.LoanPayType&&(this.rdbExempt.IsChecked=!0),Logger.InfoLog("ChangeLoanViewModel::Exiting ChangeLoanViewModel")}rdbPartialRExcessAmt_CheckedChanged(t){Logger.InfoLog("ChangeLoanViewModel::Entering rdbPartialRExcessAmt_CheckedChanged"),this.rdbPartialRExcessAmt.IsChecked?this.txtPartialRExcessAmt.Visible=!0:(this.txtPartialRExcessAmt.Visible=!1,this.btnExcessPay.Visible=!1),Logger.InfoLog("ChangeLoanViewModel::Exiting rdbPartialRExcessAmt_CheckedChanged")}Button_Click(t){if(Logger.InfoLog("ChangeLoanViewModel::Entering Button_Click"),"OK"==t.toString()){if(this.Amount=0,this.rdbInstAmt.IsChecked)this.LoanPayType=0;else if(this.rdbPartialRExcessAmt.IsChecked)try{if(this.LoanPayType=1,this.Amount=parseFloat(this.txtPartialRExcessAmt.Text),this.Amount>this.BalAmount)return this.DisplayMessage="Amount should be less than or equal to Balance Amount : "+this.BalAmount,this.MessageVisibility=!0,void(this.txtPartialRExcessAmt.SetFocus=!0)}catch(e){return this.DisplayMessage="Enter valid Amount",this.MessageVisibility=!0,void(this.txtPartialRExcessAmt.SetFocus=!0)}else this.rdbPostpone.IsChecked?this.LoanPayType=2:this.rdbExempt.IsChecked&&(this.LoanPayType=3);null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!0),this.DialogResult=!0}else"Cancel"==t.toString()&&(null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!1),this.DialogResult=!1);i.a.page.HideDialog(),Logger.InfoLog("ChangeLoanViewModel::Exiting Button_Click")}}var x=s("6sKv"),k=s("Saj9"),W=s("V+gx"),j=s("CUWK"),B=s("MCKn");class G extends r.b{constructor(t,e,s=""){super(),this.Opacity=1,this.DialogResult=!1,this.DisplayName="",this.DispMessage="",this.MsgVisibility=!1,this.Title="",this.StatusColor="#FF736F6F",this.DocStatus="",this.sPayrollMonth="",this.CustomTab=new n.a,this.NetSalary=new d.d(0),this.EmployeeList=new h.a(0),this.Remarks=new d.d(0),this.HeaderFields=[],this.SelectedTabIndex=0,this.SubmitVisiblility=!1,this.ApproveVisibility=!1,this.PostVisiblility=!0,this.UnPostVisiblility=!0,this.CustomizeVisiblility=!0,this.WorksheetVisible=!1,this.btnCloseVisible=!1,this.IsArrearsEnabled=!0,this.IsAdjustmentsEnabled=!0,this.WFDocLevelList=[],this.CostCenterID=0,this.SelectedEmpID=0,this.objMonPay={},this.dsDocDesig=[],this.dtWorkSheet=null,this.dtArrAdjDetails=null,this.sCrAccount="0",this.sDrAccount="0",this.DocID=0,this.CurrencyID=1,this.DocNo="",this.VoucherNo="",this.drc=[],this.iRow=0,this.iCol=-1,this.IsFrom="",this.sProcessType="",this.strCustomEmpFilter="",this.StatusID=0,this.objDSVM=null,this.dtDSData=null,this.dtAdjData=null,this.objAdjVM=null,this.dtPrevData=null,this.strWorkSheetXML="",this.dtArrData=null,this.sArrsCalcMonths="",this.sArrCalcMonthPaydays="0",this.sAdjsCalcMonths="",this.sAdjCalcMonthPaydays="",this.strArrearsDays="",this.dFS_NetSal=0,this.dFS_DaysAttended=0,this.dFS_LOPDays=0,this.savestatusvalue=-1,this.sBasicMonthly="0",this.DefProdID=0,this.iStaticTabCnt=4,this.iAccruCnt=0,this.iEarCnt=0,this.strWhere="",this.sbDimWhere="";try{Logger.InfoLog("MonthlyPayrollViewModel::Entering AddEditEmpMasterViewModel()"),this.ClassName="MonthlyPayrollViewModel",this.CostCenterID=40054,this.DisplayName=i.a.GetResource(t.Replace(" ","")),this.Title=i.a.GetResource(t.Replace(" ","")),this.DocStatus="[UnPosted]",this.sPayrollMonth=" / ["+i.a.SessionManager.PayrollMonth.ToString("MMM-yyyy")+"]",this.sProcessType=e,this.SelectedTabIndex=0,this.EmployeeList.Code.TypeID=4,this.EmployeeList.Name.TypeID=1,this.EmployeeList.Code.Visible=this.EmployeeList.Name.Visible=!1,this.EmployeeList.Code.Column=0,this.EmployeeList.Name.Column=1,this.EmployeeList.Code.Visible=!0,this.EmployeeList.Name.Visible=!0,this.EmployeeList.Code.CCID=this.EmployeeList.Name.CCID=50051,this.EmployeeList.Code.Visible&&(this.EmployeeList.Code.CCID=50051,this.EmployeeList.Code.TypeID=4),this.EmployeeList.Name.Visible&&(this.EmployeeList.Name.CCID=50051,this.EmployeeList.Name.TypeID=1),"UnProcessed"!=this.sProcessType&&"NoticePay"!=this.sProcessType&&""==s&&(this.strCustomEmpFilter=this.PopupEmployeesFilter()),this.costructor_sub1(s),Logger.InfoLog("MonthlyPayrollViewModel::Exiting MonthlyPayrollViewModel()")}catch(a){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION MonthlyPayrollViewModel()\r\n"+a.Message+"\r\n"+a.stack)}}costructor_sub1(t){this.NetSalary.IsReadOnly=!0,this.NetSalary.Label=i.a.GetResource("NetSalary"),this.NetSalary.Align="right",this.Remarks.Label=i.a.GetResource("Remarks"),this.EmployeeList.Name.Label=i.a.GetResource("EmployeeName"),this.EmployeeList.Code.Label=i.a.GetResource("EmployeeCode"),this.EmployeeList.SelectionCallBack.Subscribe(this,"EmployeeList_LostFocus"),this.WorksheetVisible=!0,this.PostVisiblility=i.a.SessionManager.IsActionAssigned(this.CostCenterID,"Create"),this.UnPostVisiblility=i.a.SessionManager.IsActionAssigned(this.CostCenterID,"Delete"),this.CustomizeVisiblility=i.a.SessionManager.IsActionAssigned(this.CostCenterID,"Customize"),this.AddGrids(),this.BuildControls(this.CostCenterID),this.ClearControls(),this.CheckViewForUser(0),""!=t&&this.LoadEditVoucher(t)}setStatusColor(){this.StatusColor=this.DocStatus.startsWith("["+i.a.GetResource("Doc_Draft")+"]")||this.DocStatus.startsWith("[UnPosted]")?i.a.SessionManager.Preferences.DraftColor:this.DocStatus.startsWith("[Partial]")?i.a.SessionManager.Preferences.partialColor:null!=this.oCMP?369==this.oCMP.arrLstOthMPFields[0].StatusID?i.a.SessionManager.Preferences.PostedColor:370==this.oCMP.arrLstOthMPFields[0].StatusID?i.a.SessionManager.Preferences.PDCColor:371==this.oCMP.arrLstOthMPFields[0].StatusID?i.a.SessionManager.Preferences.UnApprovedColor:372==this.oCMP.arrLstOthMPFields[0].StatusID?i.a.SessionManager.Preferences.RejectedColor:376==this.oCMP.arrLstOthMPFields[0].StatusID?i.a.SessionManager.Preferences.CancelledColor:429==this.oCMP.arrLstOthMPFields[0].StatusID?i.a.SessionManager.Preferences.BouncedColor:441==this.oCMP.arrLstOthMPFields[0].StatusID?i.a.SessionManager.Preferences.ApprovedColor:"#FF736F6F":"#FF736F6F"}LoadEditVoucher(t){let e=i.a.empService.GetQueryData("MPL001",t,"","","");if(null!=e&&e.length>0){l.e.SetPayrollMonth(new Date(e[0].PayrollMonth),i.a.SessionManager),this.sPayrollMonth=" / ["+i.a.SessionManager.PayrollMonth.ToString("MMM-yyyy")+"]",this.SelectedEmpID=0;let t=parseInt(e[0].EmpSeqNo);this.EmployeeList.Code.SelectedValue=this.EmployeeList.Name.SelectedValue=t,this.EmployeeList.Code.Text=e[0].EmpCode.toString(),this.EmployeeList.Name.Text=e[0].EmpName.toString(),this.EmployeeList_LostFocus(this.EmployeeList)}}InitSelectedEmployee(){"UnProcessed"!=this.sProcessType&&"NoticePay"!=this.sProcessType||(this.EmployeeList.Code.CustomWhere=this.EmployeeList.Name.CustomWhere="a.NodeID="+this.SelectedEmpID,this.EmployeeList_LostFocus(this.EmployeeList),this.EmployeeList.Enable=!1,this.btnCloseVisible=!0)}sPayrollMonth_MouseDoubleClick(t){t.stopImmediatePropagation();let e=new k.SetPayrollDateViewModel;i.a.page.ShowDialog(e,W.SetPayrollDateComponent,{ShowCenter:!0,Title:i.a.GetResource("Pay_SetPayrollDate")}).subscribe(()=>{if(e.DialogResult){this.btnClear_Click();let t=" 1=1 ";null!=this.sbDimWhere&&this.sbDimWhere.toString().length>0&&(t+=this.sbDimWhere.toString()),t+=" AND "+this.FilterEmployees(),this.EmployeeList.Code.CustomWhere=this.EmployeeList.Name.CustomWhere=t}})}CheckViewForUser(t){if(null!=this.dsDocDesig&&this.dsDocDesig.Tables.length>6&&this.dsDocDesig.Tables[6].length>0){if(this.HeaderFields.forEach(e=>{this.SetView(e,t,"")}),this.CustomTab.Pages.length>this.iStaticTabCnt)for(let e=this.iStaticTabCnt;e<this.CustomTab.Pages.length;e++)this.CustomTab.Pages[e].Fields.forEach(e=>{this.SetView(e,t,"")});for(let e=0;e<this.dgvDays.Table.length;e++)this.SetView(this.dgvDays.Table[e],t,"Days");if(0==this.dgvDays.Table.filter(t=>"False"!=t.IsVisible).length){let t=this.dgvDays.NewRow();this.dgvDays.addRow(t)}this.SetView("COLUMNSVISIBILITY",t,"");for(let e=0;e<this.dgvEarnings.Table.length;e++)l.e.IsEmpty(this.dgvEarnings.Table[e].EarSNo)||this.SetView(this.dgvEarnings.Table[e],t,"Earnings");for(let e=0;e<this.dgvEarOTs.Table.length;e++)l.e.IsEmpty(this.dgvEarOTs.Table[e].EarSNo)||this.SetView(this.dgvEarOTs.Table[e],t,"Earnings_OTs");for(let e=0;e<this.dgvDeductions.Table.length;e++)l.e.IsEmpty(this.dgvDeductions.Table[e].DedSNo)||this.SetView(this.dgvDeductions.Table[e],t,"Deductions");for(let e=0;e<this.dgvLoans.Table.length;e++)l.e.IsEmpty(this.dgvLoans.Table[e].LoanSNo)||this.SetView(this.dgvLoans.Table[e],t,"Loans");for(let e=0;e<this.dgvLeaves.Table.length;e++)l.e.IsEmpty(this.dgvLeaves.Table[e].LeaveSNo)||this.SetView(this.dgvLeaves.Table[e],t,"Leaves")}}SetView(t,e,s){let a=this.dsDocDesig.Tables[6],r=this.dsDocDesig.Tables[0],n=a;this.DocID>0?(a=a.filter(t=>2==t.Mode||3==t.Mode),369==e&&(a=a.filter(t=>2==t.Mode||3==t.Mode||4==t.Mode))):a=a.filter(t=>1==t.Mode||3==t.Mode),t instanceof S.c?a=a.filter(e=>e.SysColumnName=="'"+t.DBColumnName+"'"):t instanceof C.a?a="combobox"==t.DataType.toLowerCase()?a.filter(e=>e.SysColumnName=="'"+t.ValueBinding+"'"):a.filter(3==t.CostCenterID||2==t.CostCenterID?e=>e.CostcenterColid==t.ID:e=>e.SysColumnName=="'"+t.DisplayMember+"'"):"COLUMNSVISIBILITY"==t.toString()&&(a=n,a=a.filter(t=>2000001==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvEarnings.Columns[2].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000002==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvEarnings.Columns[3].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000003==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvEarnings.Columns[4].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000004==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvEarnings.Columns[5].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000005==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvEarnings.Visible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000006==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvEarOTs.Visible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000007==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvDays.Visible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000011==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvDeductions.Columns[2].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000012==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvDeductions.Columns[3].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000013==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvDeductions.Columns[4].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000014==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvDeductions.Columns[5].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000015==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvDeductions.Visible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000021==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLoans.Columns[2].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000022==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLoans.Columns[3].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000023==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLoans.Columns[4].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000024==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLoans.Columns[5].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000025==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLoans.Visible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000031==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLeaves.Columns[2].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000032==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLeaves.Columns[3].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000033==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLeaves.Columns[4].IsVisible=Object(o.j)(a[0].IsVisible.toString())),a=n,a=a.filter(t=>2000034==t.CostCenterColID),null!=a&&a.length>0&&(this.dgvLeaves.Visible=Object(o.j)(a[0].IsVisible.toString()))),a.length>0?(t instanceof S.c?t.Visible=Object(o.j)(a[0].IsVisible.toString()):t instanceof C.a&&(t.IsVisible=Object(o.j)(a[0].IsVisible.toString())),l.e.IsEmpty(a[0].IsMandatory)||(t instanceof S.c?(t.Mandatory=Object(o.j)(a[0].IsMandatory),t instanceof h.a&&(t.Name.Mandatory=t.Mandatory)):t instanceof C.a&&(t.Mandatory=Object(o.j)(a[0].IsMandatory))),t instanceof S.c?(t.IsReadOnly=!Object(o.j)(a[0].IsEditable.toString()),t instanceof h.a&&(t.Code.IsReadOnly=t.Name.IsReadOnly=t.IsReadOnly)):t instanceof C.a&&(t.ReadOnly=!Object(o.j)(a[0].IsEditable.toString())),(t instanceof S.c||t instanceof C.a)&&(t.Expression=a[0].Expression.toString()),(t instanceof S.c||t instanceof C.a)&&(t.Message=a[0].FailureMessage.toString()),l.e.IsEmpty(a[0].ActionOptionID)?(t instanceof S.c||t instanceof C.a)&&(t.Action=0):(t instanceof S.c||t instanceof C.a)&&(t.Action=parseInt(a[0].ActionOptionID.toString())),l.e.IsEmpty(a[0].NumFieldEditOptionID)?t instanceof C.a&&(t.EditOption=0):t instanceof C.a&&(t.EditOption=parseInt(a[0].NumFieldEditOptionID.toString()))):(t instanceof S.c?r=r.filter(e=>e.SysColumnName=="'"+t.DBColumnName+"'"):t instanceof C.a&&(r="combobox"==t.DataType.toLowerCase()?r.filter(e=>e.SysColumnName=="'"+t.ValueBinding+"'"):r.filter(3==t.CostCenterID||2==t.CostCenterID?e=>e.CostcenterColid==t.ID:e=>e.SysColumnName=="'"+t.DisplayMember+"'")),r.length>0&&(t instanceof S.c?(t.IsReadOnly=!Object(o.j)(r[0].IsEditable.toString()),t instanceof h.a&&(t.Code.IsReadOnly=t.Name.IsReadOnly=t.IsReadOnly)):t instanceof C.a&&(i.a.SessionManager.Preferences.ContainsKey("EnableDivisionWise")&&"True"==i.a.SessionManager.Preferences.EnableDivisionWise.toString()&&50001==t.CostCenterID||i.a.SessionManager.Preferences.ContainsKey("EnableLocationWise")&&"True"==i.a.SessionManager.Preferences.EnableLocationWise.toString()&&50002==t.CostCenterID||(t.ReadOnly=!Object(o.j)(r[0].IsEditable.toString()))),l.e.IsEmpty(r[0].IsMandatory)||(t instanceof S.c?(t.Mandatory=Object(o.j)(r[0].IsMandatory),t instanceof h.a&&(t.Name.Mandatory=t.Mandatory)):t instanceof C.a&&(t.Mandatory=Object(o.j)(r[0].IsMandatory))),t instanceof S.c&&!l.e.IsEmpty(r[0].IsVisible)?t.Visible=Object(o.j)(r[0].IsVisible.toString()):t instanceof C.a&&(t.IsVisible=Object(o.j)(r[0].IsVisible.toString()))),t instanceof C.a&&(t.EditOption=0),(t instanceof S.c||t instanceof C.a)&&(t.Expression=""),(t instanceof S.c||t instanceof C.a)&&(t.Message=""),(t instanceof S.c||t instanceof C.a)&&(t.Action=0))}Button_Click(t){try{Logger.InfoLog("MonthlyPayrollViewModel::Entering OnButtonClick()"),"Post"==t.toString()?this.btnPost_Click():"Clear"==t.toString()?this.btnClear_Click():"UnPost"==t.toString()?this.btnUnPost_Click():"Submit"==t.toString()?this.btnSubmit_Click():"Approve"==t.toString()?this.btnApprove_Click():"Arrears"==t.toString()?this.btnArrears_Click():"Adjustments"==t.toString()?this.btnAdjustments_Click():"Dues"==t.toString()?this.btnDues_Click():"Customize"==t.toString()||("Worksheet"==t.toString()?this.btnWorksheet_Click():"EmployeeFilter"==t.toString()?this.btnEmployeeFilter_Click():"Close"==t.toString()?"UnProcessed"!=this.sProcessType&&"NoticePay"!=this.sProcessType||(this.DialogResult=!1,i.a.page.HideDialog()):"DocHistory"==t.toString()?this.btnDocHistory_Click():"History"==t.toString()&&this.btnHistory_Click()),Logger.InfoLog("MonthlyPayrollViewModel::Exiting OnButtonClick()")}catch(e){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION OnButtonClick()\r\n"+e.Message+"\r\n"+e.stack)}}btnHistory_Click(){return Object(a.b)(this,void 0,void 0,(function*(){if(null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].IsAlreadyProcessed)try{Logger.InfoLog("MonthlyPayrollViewModel::Entering btnDocHistory_Click()");let t=[];t.push(this),t.push(101),t.push(this.CostCenterID),t.push(parseInt(this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].DocID));const{PayrollCommonPopUpComponent:e}=yield s.e(0).then(s.bind(null,"Wpdd")),{PayrollCommonPopUpViewModel:a}=yield s.e(166).then(s.bind(null,"oCNg"));let l=new a(t);i.a.page.ShowDialog(l,e,{ShowCenter:!0,Title:l.Title})}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION btnDocHistory_Click()\r\n"+t.Message+"\r\n"+t.stack)}}))}btnDocHistory_Click(){return Object(a.b)(this,void 0,void 0,(function*(){if(null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].IsAlreadyProcessed)try{Logger.InfoLog("MonthlyPayrollViewModel::Entering btnDocHistory_Click()");let t=[];t.push(this),t.push(100),t.push(this.CostCenterID),t.push(parseInt(this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].DocID));const{PayrollCommonPopUpComponent:e}=yield s.e(0).then(s.bind(null,"Wpdd")),{PayrollCommonPopUpViewModel:a}=yield s.e(166).then(s.bind(null,"oCNg"));let l=new a(t);i.a.page.ShowDialog(l,e,{ShowCenter:!0,Title:l.Title})}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION btnDocHistory_Click()\r\n"+t.Message+"\r\n"+t.stack)}}))}GetDuesViewModel(){let t=[];t.push(this),t.push(this.SelectedEmpID),t.push(i.a.SessionManager.PayrollMonth),t.push(this.dtDSData),this.objDSVM=new I(t)}Set_MP_Dues(){if(this.oCMP.arrLstOthMPFields[0].totEarArrears=0,this.oCMP.arrLstOthMPFields[0].totDedArrears=0,this.dtDSData=this.objDSVM.dtDSData,null!=this.dtDSData&&this.dtDSData.length>0){let t=this.dtDSData;if(t.length>0){for(let e=0;e<t.length;e++)t[e].Amount=this.dtDSData.filter(s=>s.FieldType==t[e].FieldType&&s.ComponentID==t[e].ComponentID).Compute("sum","Amount");for(let e=0;e<t.length;e++)if("Earning"==t[e].FieldType.toString()){for(let s=0;s<this.oCMP.arrLstCPFields[0][0].length;s++)if(this.oCMP.arrLstCPFields[0][0][s].ComponentID==parseInt(t[e].ComponentID)){this.oCMP.arrLstCPFields[0][0][s].dArrear=parseFloat(t[e].Amount).ToString(i.a.SessionManager.sPayrollDecimals),null==this.oCMP.arrLstCPFields[0][0][s].AddToNet||""==this.oCMP.arrLstCPFields[0][0][s].AddToNet||"Net"!=this.oCMP.arrLstCPFields[0][0][s].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][0][s].AddToNet||(this.oCMP.arrLstOthMPFields[0].totEarArrears+=parseFloat(this.oCMP.arrLstCPFields[0][0][s].dArrear));break}}else for(let s=0;s<this.oCMP.arrLstCPFields[0][2].length;s++)if(this.oCMP.arrLstCPFields[0][2][s].ComponentID==parseInt(t[e].ComponentID)){this.oCMP.arrLstCPFields[0][2][s].dArrear=parseFloat(t[e].Amount).ToString(i.a.SessionManager.sPayrollDecimals),null==this.oCMP.arrLstCPFields[0][2][s].AddToNet||""==this.oCMP.arrLstCPFields[0][2][s].AddToNet||"Net"!=this.oCMP.arrLstCPFields[0][2][s].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][2][s].AddToNet||(this.oCMP.arrLstOthMPFields[0].totDedArrears+=parseFloat(this.oCMP.arrLstCPFields[0][2][s].dArrear));break}this.oCMP.iEmpIndex=0,this.oCMP.ExecuteAllFormulas(),this.oCMP.CalculateNet(),this.FillProcessedData()}}}btnDues_Click(){if(0!=this.SelectedEmpID)try{Logger.InfoLog("MonthlyPayrollViewModel::Entering btnDues_Click()");let t=[];t.push(this),t.push(this.SelectedEmpID),t.push(i.a.SessionManager.PayrollMonth),t.push(this.dtDSData),this.objDSVM=new I(t),i.a.page.ShowDialog(this.objDSVM,L.a,{ShowCenter:!0,Title:"Dues Selection"}).subscribe(()=>{this.objDSVM.DialogResult&&this.Set_MP_Dues()})}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION btnDues_Click()\r\n"+t.Message+"\r\n"+t.stack)}else this.DisplayMessage=i.a.GetResource("SelectAnyEmployee"),this.MessageVisibility=!0,this.EmployeeList.SetFocus=!0}GetAdjustmentsViewModel(){let t=[];t.push(this),t.push(this.SelectedEmpID),t.push(this.oCMP.arrLstOthMPFields[0].DateOfJoining),t.push(this.dtAdjData),this.objAdjVM=new A(t)}SaveAdjustment(){this.dtAdjData=this.objAdjVM.dtAdjData.Copy();let t=i.a.SessionManager.PayrollMonth;this.CalculateAdjustments(),this.oCMP.CalculateNet(),this.FillProcessedData(),l.e.SetPayrollMonth(t,i.a.SessionManager)}btnAdjustments_Click(){if(0!=this.SelectedEmpID)try{Logger.InfoLog("MonthlyPayrollViewModel::Entering btnAdjustments_Click()"),this.GetAdjustmentsViewModel(),i.a.page.ShowDialog(this.objAdjVM,L.a,{ShowCenter:!0,Title:"Adjustments"}).subscribe(()=>{if(this.objAdjVM.DialogResult){if(this.SaveAdjustment(),this.sAdjCalcMonthPaydays="",this.sAdjsCalcMonths="",null!=this.dtAdjData&&this.dtAdjData.length>0){for(let t=0;t<this.dtAdjData.length;t++)this.sAdjCalcMonthPaydays=this.sAdjCalcMonthPaydays+l.e.String(this.dtAdjData[t].Days)+";",this.sAdjsCalcMonths=this.sAdjsCalcMonths+l.e.String(this.dtAdjData[t].AdjMonth)+";";this.sAdjCalcMonthPaydays.length>0&&(this.sAdjCalcMonthPaydays=this.sAdjCalcMonthPaydays.Remove(this.sAdjCalcMonthPaydays.length-1,1)),this.sAdjsCalcMonths.length>0&&(this.sAdjsCalcMonths=this.sAdjsCalcMonths.Remove(this.sAdjsCalcMonths.length-1,1))}i.a.SessionManager.ModsTemp.split("~").Contains("13")}}),Logger.InfoLog("MonthlyPayrollViewModel::Exiting btnAdjustments_Click()")}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION btnAdjustments_Click()\r\n"+t.Message+"\r\n"+t.stack)}else this.DisplayMessage=i.a.GetResource("SelectAnyEmployee"),this.MessageVisibility=!0,this.EmployeeList.SetFocus=!0}OldCalculateAdjustments(){if(this.dtAdjData.length>0){for(let s=0;s<this.oCMP.arrLstCPFields[0][0].length;s++)this.oCMP.arrLstCPFields[0][0][s].dAdjusted="0";for(let s=0;s<this.oCMP.arrLstCPFields[0][2].length;s++)this.oCMP.arrLstCPFields[0][2][s].dAdjusted="0";this.oCMP.arrLstOthMPFields[0].totEarAdjustments=0,this.oCMP.arrLstOthMPFields[0].totDedAdjustments=0;let t=i.a.empService.GetQueryData(this.SelectedEmpID,"MPL005","","",""),e="";for(let s=0;s<this.objAdjVM.dtAdjData.length;s++){let a=new Date(this.objAdjVM.dtAdjData[s].AdjMonth);e="'"+a.ToString("dd/MMM/yyyy")+"' >= ApplyFrom AND '"+a.ToString("dd/MMM/yyyy")+"' <=EffectFrom",this.drc=t.Select(e),null!=this.drc&&this.drc.length>0?(a=new Date(this.drc[0].EffectFrom),l.e.SetPayrollMonth(a,i.a.SessionManager)):l.e.SetPayrollMonth(a,i.a.SessionManager);let o=parseFloat(this.objAdjVM.dtAdjData[s].Days),r=0;r="Actual Days"!=i.a.SessionManager.Preferences.PayDays?parseInt(i.a.SessionManager.Preferences.PayDays):a.DaysInMonth();let n=new f.a;if(n.oParent=this,n.sSelectedEmpSeqNos=this.SelectedEmpID.toString(),n.PayrollMonth=i.a.SessionManager.PayrollMonth,n.PayrollMonthStart=i.a.SessionManager.PayrollMonthStart,n.PayrollMonthEnd=i.a.SessionManager.PayrollMonthEnd,n.IsAdjustments=!0,n.dAdjDays=o,n.ProcessPayroll(),n.IsCompleted){n.arrLstOthMPFields[0].TotalDays=r,n.arrLstOthMPFields[0].TotalLeaves=0,n.SetDaysAttended(0,"Days Attended",Math.abs(o));let t=0,e=-1;for(let s=0;s<this.oCMP.arrLstCPFields[0][0].length;s++)if(l.e.IsEmpty(this.oCMP.arrLstCPFields[0][0][s].CalculateAdjustments)||"No"!=this.oCMP.arrLstCPFields[0][0][s].CalculateAdjustments)for(let a=0;a<n.arrLstCPFields[0][0].length;a++)if(this.oCMP.arrLstCPFields[0][0][s].SNo==n.arrLstCPFields[0][0][a].SNo){e=this.oCMP.arrLstCPFields[0][0][s].SNo,t=o<0?-1*parseFloat(n.arrLstCPFields[0][0][a].dEarned):parseFloat(n.arrLstCPFields[0][0][a].dEarned),this.oCMP.arrLstCPFields[0][0][s].dAdjusted=(parseFloat(this.oCMP.arrLstCPFields[0][0][s].dAdjusted)+t).ToString(i.a.SessionManager.sPayrollDecimals),null==this.oCMP.arrLstCPFields[0][0][s].AddToNet||""==this.oCMP.arrLstCPFields[0][0][s].AddToNet||"Net"!=this.oCMP.arrLstCPFields[0][0][s].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][0][s].AddToNet||(this.oCMP.arrLstOthMPFields[0].totEarAdjustments+=t);break}for(let s=0;s<this.oCMP.arrLstCPFields[0][2].length;s++)if(l.e.IsEmpty(this.oCMP.arrLstCPFields[0][2][s].CalculateAdjustments)||"No"!=this.oCMP.arrLstCPFields[0][2][s].CalculateAdjustments)for(let a=0;a<n.arrLstCPFields[0][2].length;a++)if(this.oCMP.arrLstCPFields[0][2][s].SNo==n.arrLstCPFields[0][2][a].SNo){e=this.oCMP.arrLstCPFields[0][2][s].SNo,t=o<0?-1*parseFloat(n.arrLstCPFields[0][2][a].dEarned):parseFloat(n.arrLstCPFields[0][2][a].dEarned),this.oCMP.arrLstCPFields[0][2][s].dAdjusted=(parseFloat(this.oCMP.arrLstCPFields[0][2][s].dAdjusted)+t).ToString(i.a.SessionManager.sPayrollDecimals),null==this.oCMP.arrLstCPFields[0][2][s].AddToNet||""==this.oCMP.arrLstCPFields[0][2][s].AddToNet||"Net"!=this.oCMP.arrLstCPFields[0][2][s].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][2][s].AddToNet||(this.oCMP.arrLstOthMPFields[0].totDedAdjustments+=t);break}this.oCMP.iEmpIndex=0,this.oCMP.ExecuteAllFormulas(),this.oCMP.CalculateNet(),this.FillProcessedData()}}}}CalculateAdjustments(){if(this.dtAdjData.length>0){let t,e,s,a="";for(let i=0;i<this.objAdjVM.dtAdjData.length;i++)a.length>0&&(a+=","),a+="'"+new Date(this.objAdjVM.dtAdjData[i].AdjMonth).ToString("dd MMM yyyy")+"'";let r=i.a.empService.GetQueryData(this.SelectedEmpID,"MPL010",a,"","");for(let i=0;i<this.oCMP.arrLstCPFields[0][0].length;i++)this.oCMP.arrLstCPFields[0][0][i].dAdjusted="0";for(let i=0;i<this.oCMP.arrLstCPFields[0][2].length;i++)this.oCMP.arrLstCPFields[0][2][i].dAdjusted="0";this.oCMP.arrLstOthMPFields[0].totEarAdjustments=0,this.oCMP.arrLstOthMPFields[0].totDedAdjustments=0;let n=i.a.empService.GetQueryData(0,"MPL014","","",""),d=i.a.empService.GetQueryData(this.SelectedEmpID,"MPL005","","",""),h=i.a.empService.GetQueryData(this.SelectedEmpID,"MPL011",i.a.SessionManager.PayrollMonth.ToString("dd MMM yyyy"),"",""),c="";for(let g=0;g<this.objAdjVM.dtAdjData.length;g++){let a=new Date(this.objAdjVM.dtAdjData[g].AdjMonth),D=a;t=r.filter(t=>t.PayrollMonth==a.ToString("dd MMM yyyy")&&11==t.VoucherType);let u=null;if(null!=t&&t.length>0){let e=n.filter(e=>e.GradeID==t[0].dcCCNID53&&e.CPayrollDate<=D.ToString("dd MMM yyyy")).Compute("max","CPayrollDate");u=n.filter(s=>s.GradeID==t[0].dcCCNID53&&s.CPayrollDate==l.e.String(e))}if(c="'"+a.ToString("dd/MMM/yyyy")+"' >= ApplyFrom AND '"+a.ToString("dd/MMM/yyyy")+"' <=EffectFrom",this.drc=d.filter(t=>t.dPayMonth.ToString("dd/MMM/yyyy")>=t.ApplyFrom&&a.ToString("dd/MMM/yyyy")<=t.EffectFrom),this.drc=this.drc.sort((t,e)=>t.EffectFrom-e.EffectFrom),e=h.Tables[0].filter(t=>t.ArrearsCalcMonths==new Date(a)),s=h.Tables[1].filter(t=>1==t.DType&&t.ArrAdjMonth==new Date(a)),null!=this.drc&&this.drc.length>0){let t=!1;if(this.sArrsCalcMonths.length>0){let e=this.sArrsCalcMonths.split(";");if(e.length>0)for(let s=0;s<e.length;s++)new Date(e[s]).ToString("dd MMM yyyy")==D.ToString("dd MMM yyyy")&&(t=!0)}null!=e&&e.length>0||t?(a=new Date(this.drc[0].EffectFrom),l.e.SetPayrollMonth(a)):l.e.SetPayrollMonth(a)}else l.e.SetPayrollMonth(a);let P=parseFloat(this.objAdjVM.dtAdjData[g].Days),y=0;y="Actual Days"!=i.a.SessionManager.Preferences.PayDays?parseInt(i.a.SessionManager.Preferences.PayDays):a.DaysInMonth();let C=new f.a;if(C.oParent=this,C.sSelectedEmpSeqNos=this.SelectedEmpID.toString(),C.PayrollMonth=i.a.SessionManager.PayrollMonth,C.PayrollMonthStart=i.a.SessionManager.PayrollMonthStart,C.PayrollMonthEnd=i.a.SessionManager.PayrollMonthEnd,C.IsAdjustments=!0,C.dAdjDays=P,C.drcArrStructure=u,C.ArrGradeID=parseInt(t[0].dcCCNID53),C.ProcessPayroll(),C.IsCompleted){C.arrLstOthMPFields[0].TotalDays=parseFloat(t[0].TotalDays),C.arrLstOthMPFields[0].MonthDays=parseFloat(t[0].TotalDays),C.arrLstOthMPFields[0].PaidLeaves=parseFloat(t[0].dcAlpha24),C.arrLstOthMPFields[0].TotalLeaves=parseFloat(t[0].LeavesTaken),C.arrLstOthMPFields[0].WeeklyOffs=parseFloat(t[0].WOffs),C.arrLstOthMPFields[0].Holidays=parseFloat(t[0].Holidays);let e=parseFloat(t[0].DaysWorked.toString())+P;C.SetDaysAttended(0,"Days Attended",e);let n,d=0,h=-1,c=0,g=0,u=0;t=r.filter(t=>t.PayrollMonth==a.ToString("dd MMM yyyy")&&11==t.VoucherType);for(let a=0;a<this.oCMP.arrLstCPFields[0][0].length;a++)if(l.e.IsEmpty(this.oCMP.arrLstCPFields[0][0][a].CalculateAdjustments)||"No"!=this.oCMP.arrLstCPFields[0][0][a].CalculateAdjustments)for(let e=0;e<C.arrLstCPFields[0][0].length;e++)if(this.oCMP.arrLstCPFields[0][0][a].SNo==C.arrLstCPFields[0][0][e].SNo){if(c=0,g=0,u=0,h=this.oCMP.arrLstCPFields[0][0][a].SNo,l.e.IsEmpty(t[0]["dcCalcNum"+h])||(c=parseFloat(t[0]["dcCalcNum"+h])),null!=this.oCMP.arrLstCPFields[0][0][a].ArrData&&this.oCMP.arrLstCPFields[0][0][a].ArrData.length>0&&(n=[],this.oCMP.arrLstCPFields[0][0][a].ArrData=this.oCMP.arrLstCPFields[0][0][a].ArrData.TrimEnd(","),n=this.oCMP.arrLstCPFields[0][0][a].ArrData.split(";"),null!=n&&n.length>0))for(let t=0;t<n.length;t+=2)new Date(n[t]).ToString("dd MMM yyyy")==D.ToString("dd MMM yyyy")&&(g=parseFloat(n[t+1]));null!=s&&s.length>0&&null!=s[0]["Earning"+h]&&null!=s[0]["Earning"+h]&&""!=s[0]["Earning"+h]&&(u=parseFloat(s[0]["Earning"+h])),d=i.a.SessionManager.Preferences.ContainsKey("DonotconsiderArrearwhilecalculatingAdjustmentofPF")&&Object(o.j)("True"==i.a.SessionManager.Preferences.DonotconsiderArrearwhilecalculatingAdjustmentofPF)&&"PFE"==C.arrLstCPFields[0][0][e].ComponentName?parseFloat(C.arrLstCPFields[0][0][e].dEarned)-c:parseFloat(C.arrLstCPFields[0][0][e].dEarned)-c-g-u,this.oCMP.arrLstCPFields[0][0][a].AdjData+=D.ToString("dd MMM yyyy")+","+d+",",this.oCMP.arrLstCPFields[0][0][a].dAdjusted=(parseFloat(this.oCMP.arrLstCPFields[0][0][a].dAdjusted)+d).ToString(i.a.SessionManager.sPayrollDecimals),l.e.IsEmpty(this.oCMP.arrLstCPFields[0][0][a].AddToNet)||"Net"!=this.oCMP.arrLstCPFields[0][0][a].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][0][a].AddToNet||(this.oCMP.arrLstOthMPFields[0].totEarAdjustments+=d);break}t=r.filter(t=>t.PayrollMonth==D.ToString("dd MMM yyyy")&&12==t.VoucherType);for(let a=0;a<this.oCMP.arrLstCPFields[0][2].length;a++)if(l.e.IsEmpty(this.oCMP.arrLstCPFields[0][2][a].CalculateAdjustments)||"No"!=this.oCMP.arrLstCPFields[0][2][a].CalculateAdjustments)for(let e=0;e<C.arrLstCPFields[0][2].length;e++)if(this.oCMP.arrLstCPFields[0][2][a].SNo==C.arrLstCPFields[0][2][e].SNo){if(c=0,g=0,u=0,h=this.oCMP.arrLstCPFields[0][2][a].SNo,l.e.IsEmpty(t[0]["dcCalcNum"+h])||(c=parseFloat(t[0]["dcCalcNum"+h])),null!=this.oCMP.arrLstCPFields[0][2][a].ArrData&&this.oCMP.arrLstCPFields[0][2][a].ArrData.length>0&&(n=[],this.oCMP.arrLstCPFields[0][2][a].ArrData=this.oCMP.arrLstCPFields[0][2][a].ArrData.TrimEnd(","),n=this.oCMP.arrLstCPFields[0][2][a].ArrData.split(";"),null!=n&&n.length>0))for(let t=0;t<n.length;t+=2)new Date(n[t]).ToString("dd MMM yyyy")==D.ToString("dd MMM yyyy")&&(g=parseFloat(n[t+1]));null!=s&&s.length>0&&null!=s[0]["Deduction"+h]&&null!=s[0]["Deduction"+h]&&""!=s[0]["Deduction"+h]&&(u=parseFloat(s[0]["Deduction"+h])),d=i.a.SessionManager.Preferences.ContainsKey("DonotconsiderArrearwhilecalculatingAdjustmentofPF")&&Object(o.j)("True"==i.a.SessionManager.Preferences.DonotconsiderArrearwhilecalculatingAdjustmentofPF)&&"PF"==C.arrLstCPFields[0][2][e].ComponentName?parseFloat(C.arrLstCPFields[0][2][e].dEarned)-c:parseFloat(C.arrLstCPFields[0][2][e].dEarned)-c-g-u,this.oCMP.arrLstCPFields[0][2][a].AdjData+=D.ToString("dd MMM yyyy")+","+d+",",this.oCMP.arrLstCPFields[0][2][a].dAdjusted=(parseFloat(this.oCMP.arrLstCPFields[0][2][a].dAdjusted)+d).ToString(i.a.SessionManager.sPayrollDecimals),l.e.IsEmpty(this.oCMP.arrLstCPFields[0][2][a].AddToNet)||"Net"!=this.oCMP.arrLstCPFields[0][2][a].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][2][a].AddToNet||(this.oCMP.arrLstOthMPFields[0].totDedAdjustments+=d);break}this.oCMP.iEmpIndex=0,this.oCMP.ExecuteAllFormulas(),this.oCMP.CalculateNet(),this.FillProcessedData()}}}}btnWorksheet_Click(){return Object(a.b)(this,void 0,void 0,(function*(){if(Logger.InfoLog("MonthlyPayrollViewModel::Entering btnWorksheet_Click()"),0==this.SelectedEmpID)return this.DisplayMessage=i.a.GetResource("SelectAnyEmployee"),this.MessageVisibility=!0,void(this.EmployeeList.SetFocus=!0);if(this.oCMP.arrLstOthMPFields[0].sErrorMessage.length>0)return this.DisplayMessage=this.oCMP.arrLstOthMPFields[0].sErrorMessage,void(this.MessageVisibility=!0);let t=null,e=[],a=new Date;e.push(0),e.push(this.SelectedEmpID),e.push(i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")),e.push(i.a.SessionManager.UserID),e.push(i.a.SessionManager.LanguageID);let r=i.a.empService.ExecuteQuery_SP(e,"spPAY_PayrollWorksheetData");const{AddEditDocumentViewModel:n}=yield Promise.resolve().then(s.bind(null,"1Cra")),{AddEditDocumentComponent:d}=yield Promise.resolve().then(s.bind(null,"MCKn"));if(null!=r&&r.Tables.length>0&&r.Tables[0].length>0){t=new n(40079,"Attendance Dimension Wise",!0);let e={value:a};t.ScreenObject.OnDocPrefixChanged("lostFocus",0,parseInt(r.Tables[0][0].DocID),e,!1),a=e.value}else t=new n(40079,"Attendance Dimension Wise",!1),t.ScreenObject._CCFields.find(t=>"dcccnid51"==t.DBColumnName.toLowerCase()).SelectedValue=this.SelectedEmpID,t.ScreenObject._CCFields.find(t=>"dcccnid51"==t.DBColumnName.toLowerCase()).Code.CodeText=this.EmployeeList.Code.Text,t.ScreenObject._CCFields.find(t=>"dcccnid51"==t.DBColumnName.toLowerCase()).Name.CodeText=this.EmployeeList.Name.Text,t.ScreenObject._TextFields.find(t=>"dcalpha1"==t.DBColumnName.toLowerCase()).Date=i.a.SessionManager.PayrollMonth;if(t.ScreenObject._CCFields.find(t=>"dcccnid51"==t.DBColumnName.toLowerCase()).IsReadOnly=!0,t.ScreenObject._TextFields.find(t=>"dcalpha1"==t.DBColumnName.toLowerCase()).IsReadOnly=!0,t.IsMPVParent=!0,t.ButtonCloseVisibility=!0,t.OKCancelVisibility=!0,t.ScreenObject.HeaderFields.forEach(t=>{t.IsReadOnly=!0,t.Enable=!1}),t.ScreenObject._CCFields.forEach(t=>{t.IsReadOnly=!0,t.Enable=!1}),t.ScreenObject._TextFields.forEach(t=>{t.IsReadOnly=!0,t.Enable=!1}),i.a.SessionManager.Preferences.ContainsKey("ShowAbsentColumn")&&Object(o.j)("False"==i.a.SessionManager.Preferences.ShowAbsentColumn)){var h=t.ScreenObject.ColumnSource.find(t=>"dcAlpha3"==t.DisplayMember);null!=h&&(h.IsVisible=!1)}t.strADWxml="ADWxml",t.FillGridData(this.dtWorkSheet),i.a.page.ShowDialog(t,d,{ShowCenter:!0,Title:t.Title}).subscribe(()=>{if(t.DialogResult&&(this.strWorkSheetXML=t.strADWxml,i.a.SessionManager.Preferences.ContainsKey("OverwriteDaysOT")&&Object(o.j)("True"==i.a.SessionManager.Preferences.OverwriteDaysOT))){this.dtWorkSheet=t.ScreenObject.GridData,i.a.SessionManager.Preferences.ContainsKey("AddWeeklyoffs")&&Object(o.j)("True"==i.a.SessionManager.Preferences.AddWeeklyoffs)?(this.dgvDays.Table[1].Days=this.dtComputeSUM(this.dtWorkSheet,"dcAlpha2").toString(),this.oCMP.arrLstOthMPFields[0].DaysAttended=this.dtComputeSUM(this.dtWorkSheet,"dcAlpha2")):(this.dgvDays.Table[1].Days=this.dtComputeSUM(this.dtWorkSheet,"dcAlpha2")+parseFloat(this.dgvDays.Table[4].Days.toString())+parseFloat(this.dgvDays.Table[5].Days.toString()),this.oCMP.arrLstOthMPFields[0].DaysAttended=this.dtComputeSUM(this.dtWorkSheet,"dcAlpha2")+parseFloat(this.dgvDays.Table[4].Days)+parseFloat(this.dgvDays.Table[5].Days.toString()));let e=i.a.empService.GetQueryData(0,"MPL006","","","");if(null!=e&&e.length>0)for(let t=0;t<this.dgvEarOTs.Table.length;t++)if(!l.e.IsEmpty(this.dgvEarOTs.Table[t].EarSNo))for(let s=0;s<e.length;s++)if(parseInt(this.dgvEarOTs.Table[t].EarSNo)==parseInt(e[s].OTSNo)){this.dgvEarOTs.Table[t].Hours=this.dtComputeSUM(this.dtWorkSheet,e[s].SysColumnName.toString()).ToString("0.00"),this.oCMP.ReEvaluateData(0,1,parseInt(this.dgvEarOTs.Table[t].EarSNo),this.dgvEarOTs.Table[t].Hours.toString());break}this.dgvDays_EndEdit(this.dgvDays.Table[1],"Days",1)}}),Logger.InfoLog("MonthlyPayrollViewModel::Exiting btnWorksheet_Click()")}))}btnEmployeeFilter_Click(){this.EmployeeList.Code.CustomWhere=this.EmployeeList.Name.CustomWhere=this.PopupEmployeesFilter()}dtComputeSUM(t,e){let s=0;for(let a=0;a<t.length;a++)l.e.IsEmpty(t[a][e])||(s+=parseFloat(t[a][e].toString()));return s}btnCustomize_Click(){}btnArrears_Click(){if(0!=this.SelectedEmpID)try{Logger.InfoLog("MonthlyPayrollViewModel::Entering btnArrears_Click()");let t=[];t.push(this),t.push(this.SelectedEmpID),t.push(this.dtArrData),this.objArrVM=new b(t),i.a.page.ShowDialog(this.objArrVM,N.a,{ShowCenter:!0,Title:"Arrears"}).subscribe(()=>{if(this.objArrVM.DialogResult&&(this.dtArrData=this.objArrVM.dtArrData,this.objArrVM.strSelectedMonths.length>0)){this.sArrCalcMonthPaydays="";let t="'"+this.objArrVM.strSelectedMonths.Replace(";","','")+"'",e=i.a.empService.GetQueryData(this.SelectedEmpID,"ARE002",JSON.stringify(t),"","");if(null!=e&&e.length>0){this.drc=e.filter(t=>11==t.VoucherType);for(let t=0;t<this.drc.length;t++)this.sArrCalcMonthPaydays=this.sArrCalcMonthPaydays+this.drc[t].PaidDays.toString()+";";this.sArrCalcMonthPaydays.length>0&&(this.sArrCalcMonthPaydays=this.sArrCalcMonthPaydays.substr(0,this.sArrCalcMonthPaydays.length-1))}this.sArrsCalcMonths=this.objArrVM.strSelectedMonths;let s=this.objArrVM.strSelectedMonths.split(";");if(s.length>0){for(let e=0;e<this.oCMP.arrLstCPFields[0][0].length;e++)this.oCMP.arrLstCPFields[0][0][e].dArrear="0";for(let e=0;e<this.oCMP.arrLstCPFields[0][2].length;e++)this.oCMP.arrLstCPFields[0][2][e].dArrear="0";this.oCMP.arrLstOthMPFields[0].totEarArrears=0,this.oCMP.arrLstOthMPFields[0].totDedArrears=0;let t,a,o,r=i.a.empService.GetQueryData(0,"ARE003","","",""),n=i.a.empService.GetQueryData(this.SelectedEmpID,"ARE004",i.a.SessionManager.PayrollMonth.ToString("dd MMM yyyy"),"",""),d=0,h=0;for(let c=0;c<s.length;c++)if(null!=s[c]&&""!=s[c]&&(this.drc=e.filter(t=>t.PayrollMonth==s[c]),this.drc.length>0)){let g=r.filter(t=>t.GradeID==this.drc[0].dcCCNID53&&t.CPayrollDate<=s[c]).Compute("max","CPayrollDate"),D=r.filter(t=>t.GradeID==this.drc[0].dcCCNID53&&t.CPayrollDate==g.toString()),u=new f.a;if(u.oParent=this,u.sSelectedEmpSeqNos=this.SelectedEmpID.toString(),u.PayrollMonth=i.a.SessionManager.PayrollMonth,u.PayrollMonthStart=i.a.SessionManager.PayrollMonthStart,u.PayrollMonthEnd=i.a.SessionManager.PayrollMonthEnd,u.drcArrStructure=D,u.IsArrearclick=!0,u.ArrGradeID=parseInt(this.drc[0].dcCCNID53),u.ProcessPayroll(),u.IsCompleted){u.arrLstOthMPFields[0].TotalDays=parseFloat(this.drc[0].TotalDays),u.arrLstOthMPFields[0].MonthDays=parseFloat(this.drc[0].TotalDays),u.arrLstOthMPFields[0].PaidLeaves=parseFloat(this.drc[0].dcAlpha24),u.arrLstOthMPFields[0].TotalLeaves=parseFloat(this.drc[0].LeavesTaken),u.arrLstOthMPFields[0].WeeklyOffs=parseFloat(this.drc[0].WOffs),u.arrLstOthMPFields[0].Holidays=parseFloat(this.drc[0].Holidays);let r=parseFloat(this.drc[0].TotalDays.toString())-parseFloat(this.drc[0].LOPDays.toString())-parseFloat(this.drc[0].LeavesTaken.toString())-parseFloat(this.drc[0].UnpaidDays.toString());if(t=n.Tables[0].filter(t=>t.AdjMonth==new Date(s[c])),null!=t&&t.length>0&&(r+=parseFloat(t[0].Days)),a=n.Tables[1].filter(t=>2==t.DType&&t.ArrAdjMonth==new Date(s[c])),this.dtAdjData.length>0)for(let t=0;t<this.dtAdjData.length;t++)new Date(this.dtAdjData[t].AdjMonth).ToString("dd MMM yyyy")==new Date(s[c]).ToString("dd MMM yyyy")&&parseFloat(this.dtAdjData[t].Days)>0&&(r+=parseFloat(this.dtAdjData[t].Days));u.SetDaysAttended(0,"Days Attended",r);let g=0,D=-1,P=0;this.drc=e.filter(t=>t.PayrollMonth==s[c]&&11==t.VoucherType);for(let t=0;t<this.oCMP.arrLstCPFields[0][0].length;t++)if(l.e.IsEmpty(this.oCMP.arrLstCPFields[0][0][t].CalculateArrears)||"No"!=this.oCMP.arrLstCPFields[0][0][t].CalculateArrears)for(let e=0;e<u.arrLstCPFields[0][0].length;e++)if(this.oCMP.arrLstCPFields[0][0][t].SNo==u.arrLstCPFields[0][0][e].SNo){if(P=0,d=0,h=0,D=this.oCMP.arrLstCPFields[0][0][t].SNo,l.e.IsEmpty(this.drc[0]["dcCalcNum"+D])||(P=parseFloat(this.drc[0]["dcCalcNum"+D])),null!=this.oCMP.arrLstCPFields[0][0][t].AdjData&&this.oCMP.arrLstCPFields[0][0][t].AdjData.length>0&&(o=[],this.oCMP.arrLstCPFields[0][0][t].AdjData=this.oCMP.arrLstCPFields[0][0][t].AdjData.TrimEnd(","),o=this.oCMP.arrLstCPFields[0][0][t].AdjData.split(";"),null!=o&&o.length>0))for(let t=0;t<o.length;t+=2)new Date(o[t]).ToString("dd MMM yyyy")==new Date(s[c]).ToString("dd MMM yyyy")&&(d=parseFloat(o[t+1]));null!=a&&a.length>0&&null!=a[0]["Earning"+D]&&null!=a[0]["Earning"+D]&&""!=a[0]["Earning"+D].toString()&&(h=parseFloat(a[0]["Earning"+D])),g=parseFloat(u.arrLstCPFields[0][0][e].dEarned)-P-d-h,this.oCMP.arrLstCPFields[0][0][t].ArrData+=s[c]+","+g+",",this.oCMP.arrLstCPFields[0][0][t].dArrear=(parseFloat(this.oCMP.arrLstCPFields[0][0][t].dArrear)+g).ToString(i.a.SessionManager.sPayrollDecimals),this.oCMP.arrLstCPFields[0][0][t].isArrCalculated=!0,null==this.oCMP.arrLstCPFields[0][0][t].AddToNet||""==this.oCMP.arrLstCPFields[0][0][t].AddToNet||"Net"!=this.oCMP.arrLstCPFields[0][0][t].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][0][t].AddToNet||(this.oCMP.arrLstOthMPFields[0].totEarArrears+=g);break}this.drc=e.filter(t=>t.PayrollMonth==s[c]&&12==t.VoucherType);for(let t=0;t<this.oCMP.arrLstCPFields[0][2].length;t++)if(l.e.IsEmpty(this.oCMP.arrLstCPFields[0][2][t].CalculateArrears)||"No"!=this.oCMP.arrLstCPFields[0][2][t].CalculateArrears)for(let e=0;e<u.arrLstCPFields[0][2].length;e++)if(this.oCMP.arrLstCPFields[0][2][t].SNo==u.arrLstCPFields[0][2][e].SNo){if(P=0,d=0,h=0,D=this.oCMP.arrLstCPFields[0][2][t].SNo,l.e.IsEmpty(this.drc[0]["dcCalcNum"+D])||(P=parseFloat(this.drc[0]["dcCalcNum"+D])),null!=this.oCMP.arrLstCPFields[0][2][t].AdjData&&this.oCMP.arrLstCPFields[0][2][t].AdjData.length>0&&(o=[],this.oCMP.arrLstCPFields[0][2][t].AdjData=this.oCMP.arrLstCPFields[0][2][t].AdjData.TrimEnd(","),o=this.oCMP.arrLstCPFields[0][2][t].AdjData.split(";"),null!=o&&o.length>0))for(let t=0;t<o.length;t+=2)new Date(o[t]).ToString("dd MMM yyyy")==new Date(s[c]).ToString("dd MMM yyyy")&&(d=parseFloat(o[t+1]));null!=a&&a.length>0&&null!=a[0]["Deduction"+D]&&null!=a[0]["Deduction"+D]&&""!=a[0]["Deduction"+D].toString()&&(h=parseFloat(a[0]["Deduction"+D])),g=parseFloat(u.arrLstCPFields[0][2][e].dEarned)-P-d-h,this.oCMP.arrLstCPFields[0][2][t].dArrear=(parseFloat(this.oCMP.arrLstCPFields[0][2][t].dArrear)+g).ToString(i.a.SessionManager.sPayrollDecimals),this.oCMP.arrLstCPFields[0][2][t].isArrCalculated=!0,null==this.oCMP.arrLstCPFields[0][2][t].AddToNet||""==this.oCMP.arrLstCPFields[0][2][t].AddToNet||"Net"!=this.oCMP.arrLstCPFields[0][2][t].AddToNet&&"NetAndTax"!=this.oCMP.arrLstCPFields[0][2][t].AddToNet||(this.oCMP.arrLstOthMPFields[0].totDedArrears+=g);break}}u.IsArrearclick=!1}this.oCMP.iEmpIndex=0,this.oCMP.ExecuteAllFormulas(),this.oCMP.CalculateNet(),this.FillProcessedData()}}}),Logger.InfoLog("MonthlyPayrollViewModel::Exiting btnArrears_Click()")}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION btnArrears_Click()\r\n"+t.Message+"\r\n"+t.stack)}else this.DisplayMessage=i.a.GetResource("SelectAnyEmployee"),this.MessageVisibility=!0,this.EmployeeList.SetFocus=!0}btnSubmit_Click(){}btnApprove_Click(){let t=new v.a(40054,this.DocID,null,this);i.a.page.ShowDialog(t,O.a,{ShowCenter:!0,Title:i.a.GetResource("ApproveReject")})}btnUnPost_Click(){if(this.SelectedEmpID>0&&this.DocID>0){let t=0,e=[];e.push(this.CostCenterID),e.push(this.DocID),e.push(1);let s=i.a.document.DeleteSelectedRows(e,t);this.DisplayMessage=s.Message,this.savestatusvalue=s.RetValue,this.MessageVisibility=!0}this.btnClear_Click()}btnClear_Click(){this.ClearControls(),this.EmployeeList.SelectedValue=0,this.SelectedEmpID=0,this.WFDocLevelList.Clear(),this.ApproveVisibility=!1}btnPost_Click(){try{if(Logger.InfoLog("MonthlyPayrollViewModel::Entering btnPost_Click()"),this.ValidatePosting()){let t=0,e=[];e.push(this.CostCenterID),e.push(this.DocID),e.push(i.a.SessionManager.PayrollMonth.ToString("MMM'/'yyyy")+"-"),e.push(this.DocNo),e.push((new Date).ToString("dd/MMM/yyyy")),e.push(i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")),e.push(""),e.push(this.GetDocumentXML()),e.push(""),e.push(""),e.push(""),e.push(this.GetActivityXML()),e.push("false"),i.a.SessionManager.Preferences.ContainsKey("EnableLocationWise")&&"True"==i.a.SessionManager.Preferences.EnableLocationWise.toString()?e.push(i.a.SessionManager.LocationID>0?i.a.SessionManager.LocationID:1):e.push(0),i.a.SessionManager.Preferences.ContainsKey("EnableDivisionWise")&&"True"==i.a.SessionManager.Preferences.EnableDivisionWise.toString()?e.push(i.a.SessionManager.DivisionID>0?i.a.SessionManager.DivisionID:1):e.push(0),e.push(this.oCMP.arrLstOthMPFields[0].WID),e.push(i.a.SessionManager.RoleID),e.push(""),e.push(0),e.push(0),e.push(i.a.SessionManager.CompanyGUID),e.push(i.a.SessionManager.UserName),e.push(i.a.SessionManager.UserID),e.push(i.a.SessionManager.LanguageID),e.push(i.a.SessionManager.IsOffline);let s="";i.a.document.SetTempInvDocument(e).subscribe(e=>{t=e.obj;let a=e;this.savestatusvalue=t,s=null!=a&&a.Tables.length>0&&a.Tables[a.Tables.length-1].length>0&&a.Columns[a.Tables.length-1].Contains("ErrorMessage")?a.Tables[a.Tables.length-1][0].ErrorMessage.toString():"Problem in processing your request,Please contact administrator.",t>0?(null!=a&&a.Tables.length>0&&a.Tables[a.Tables.length-1].length>0&&a.Columns[a.Tables.length-1].Contains("VoucherNo")&&(this.VoucherNo=a.Tables[a.Tables.length-1][0].VoucherNo.toString()),"UnProcessed"!=this.sProcessType&&"NoticePay"!=this.sProcessType||(this.dFS_NetSal=parseFloat(this.NetSalary.Text),this.dFS_DaysAttended=parseFloat(this.dgvDays.Table[1][2].toString()),this.dFS_LOPDays=parseFloat(this.dgvDays.Table[6][2].toString()),this.DialogResult=!0,i.a.page.HideDialog()),this.btnClear_Click()):null!=a&&a.Tables.length>0&&a.Tables[a.Tables.length-1].length>0&&a.Columns[a.Tables.length-1].Contains("ServerMessage")&&(t="-407"==a.Tables[a.Tables.length-1][0].ServerMessage.toString()?-407:-12345),this.DisplayMessage=s,this.MessageVisibility=!0})}Logger.InfoLog("MonthlyPayrollViewModel::Exiting btnPost_Click()")}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION btnPost_Click()\r\n"+t.Message+"\r\n"+t.stack)}}SetDocStatus(t,e,s,a,l,o,r){Logger.InfoLog("MonthyPayrolViewModel:: Inside SetDocStatus");let n=[];n.push(t),n.push(null!=l?l:""),n.push(a.ToString("dd/MMM/yyyy")),n.push(!0),n.push(this.DocID),n.push(this.CostCenterID),n.push(e),n.push(s),n.push(o),n.push(r),n.push(i.a.SessionManager.CompanyGUID),n.push(i.a.SessionManager.UserName),n.push(i.a.SessionManager.UserID),n.push(i.a.SessionManager.RoleID),n.push(i.a.SessionManager.LanguageID);let d=i.a.document.SetDocStatus(n);return Logger.InfoLog("MonthyPayrolViewModel:: Exiting SetDocStatus"),d}GetActivityXML(){let t,e="",s="",a="";if(null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].drcPayProcessed.length>0)for(let i=0;i<this.oCMP.arrLstOthMPFields[0].drcPayProcessed.length;i++)e+="~"+this.oCMP.arrLstOthMPFields[0].drcPayProcessed[i].InvDocDetailsID.toString();let o="";if(o+=this.oCMP.arrLstOthMPFields[0].IsAlreadyProcessed?e.length>0?'<XML DetailIds="'+e+'" AppRejDate="'+(new Date).ToString("dd/MMM/yyyy")+'" >':'<XML AppRejDate="'+(new Date).ToString("dd/MMM/yyyy")+'" >':e.length>0?'<XML DetailIds="'+e+'" >':"<XML >",this.dgvLoans.Table.length>0&&null!=this.dgvLoans.Tag&&parseInt(this.dgvLoans.Tag)>0){let e,r,n,d,h,c,g="0";if(s=a="",null!=this.oCMP.arrLstOthMPFields[0].drcLoanRepay&&this.oCMP.arrLstOthMPFields[0].drcLoanRepay.length>0&&(g=this.oCMP.arrLstOthMPFields[0].drcLoanRepay[0].DocID.toString()),o+='<LoanRepaymentXML DocID="'+g+'" DocDetIDs="" WorkFlowID="0" >',o+="<DOCXML>",this.dgvLoans.Table.length>0){let g=0;null!=i.a.SessionManager.dtDocDefAccs&&(t=i.a.SessionManager.dtDocDefAccs.filter(t=>40057==t.CostCenterID&&"CreditAccount"==t.SysColumnName),null!=t&&t.length>0&&null!=t[0].UserDefaultValue&&""!=t[0].UserDefaultValue.toString().Trim()&&(s=t[0].UserDefaultValue.toString()),t=i.a.SessionManager.dtDocDefAccs.filter(t=>40057==t.CostCenterID&&"DebitAccount"==t.SysColumnName),null!=t&&t.length>0&&null!=t[0].UserDefaultValue&&""!=t[0].UserDefaultValue.toString().Trim()&&(a=t[0].UserDefaultValue.toString()));for(let t=0;t<this.dgvLoans.Table.length;t++)if(!l.e.IsEmpty(this.dgvLoans.Table[t].LoanSNo)&&"1"==this.dgvLoans.Table[t].IsVisible.toString()&&!l.e.IsEmpty(this.dgvLoans.Table[t].InstAmt)){e=this.dgvLoans.Table[t].LoanDocNo.toString(),n=this.dgvLoans.Table[t].ActInstNo.toString(),h=3==parseInt(this.dgvLoans.Table[t].PayStatus)?this.dgvLoans.Table[t].ActInstAmt.toString().Replace(",",""):this.dgvLoans.Table[t].InstAmt.toString().Replace(",","");let l=parseInt(n);this.oCMP.arrLstOthMPFields[0].IsAlreadyProcessed?(this.drc=this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[11].filter(t=>t.EmpSeqNo==this.SelectedEmpID&&t.RefNo==e&&t.dcAlpha5==i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")),null!=this.drc&&this.drc.length>0&&(l=parseInt(this.drc[0].dcNum1))):(this.drc=i.a.SessionManager.Preferences.ContainsKey("ShowLoanBalRespDedMonthWhilePayProc")&&"True"==i.a.SessionManager.Preferences.ShowLoanBalRespDedMonthWhilePayProc?this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.SelectedEmpID&&t.DocNo==e&&t.InstallmentNo==l&&t.InstallmentNo==l):this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.SelectedEmpID&&t.DocNo==e&&t.InstBalance>0&&t.InstallmentNo<l&&t.InstallmentNo<l),null!=this.drc&&this.drc.length>0&&(l=parseInt(this.drc[0].InstallmentNo)));let D=parseFloat(h),u=0,P=0;do{if(g++,c=this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.SelectedEmpID&&t.DocNo==e&&t.InstallmentNo==l),null==c||0==c.length)break;r=c[0].InvDocDetailsID.toString(),d=c[0].InstallmentAmt.toString().Replace(",",""),u=D>parseFloat(parseFloat(c[0].InstBalance).ToString(i.a.SessionManager.sPayrollDecimals))?parseFloat(parseFloat(c[0].InstBalance).ToString(i.a.SessionManager.sPayrollDecimals)):D,o+="<RowHead/>",o+="<Row>",o+="<AccountsXML></AccountsXML>",o+='<Transactions DocSeqNo="'+g+'"  DocDetailsID="0" LinkedInvDocDetailsID="'+r+'" LinkedFieldName="dcNum3" LineNarration="',o+='" ProductID="'+this.DefProdID+'" IsScheme="" Quantity="1" Unit="1" UOMConversion="1" UOMConvertedQty="1',o+='" Rate="0" Gross="0" RefNO="'+e+'" LinkedFieldValue="'+u+'" IsQtyIgnored="1" AverageRate="0',o+='" StockValue="0" StockValueFC="0" CurrencyID="1" ExchangeRate="1"  DebitAccount="'+a+'"  CreditAccount="'+s+'"  ></Transaction>',o+='<Numeric Query="dcNum1='+l+", dcCalcNum1="+l+", dcNum2="+d.Replace(",","")+", dcCalcNum2="+d.Replace(",","")+", dcNum3="+u.toString().Replace(",","")+", dcCalcNum3="+u.toString().Replace(",","")+', " ></Numeric>',o+="<Alpha Query=\"dcAlpha1=N'"+this.dgvLoans.Table[t].ApprovedAmt.toString()+"',dcAlpha2=N'"+(parseFloat(this.dgvLoans.Table[t].BalAmt)-P)+"', dcAlpha3=N'"+h+"', dcAlpha4=N'"+new Date(c[0].DeductionMonth).ToString("dd/MMM/yyyy")+"', dcAlpha5=N'"+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")+"',dcAlpha6=N'1',dcAlpha7=N'"+this.dgvLoans.Table[t].PayStatus.toString()+"', \" ></Alpha>",o+='<CostCenters Query="dcCCNID51='+this.SelectedEmpID+", dcCCNID52="+this.dgvLoans.Table[t].ComponentID.toString()+', " ></CostCenters>',o+="<EXTRAXML></EXTRAXML>",o+="</Row>",P+=u,D-=u,l++,c[0].Flag=1}while(D>0);l=1;do{if(g++,c=this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.SelectedEmpID&&t.DocNo==e&&t.InstallmentNo==l&&0==t.Flag&&t.InstBalance>0),null==c||0==c.length)break;r=c[0].InvDocDetailsID.toString(),d=c[0].InstallmentAmt.toString().Replace(",",""),u=D>parseFloat(parseFloat(c[0].InstBalance).ToString(i.a.SessionManager.sPayrollDecimals))?parseFloat(parseFloat(c[0].InstBalance).ToString(i.a.SessionManager.sPayrollDecimals)):D,o+="<RowHead/>",o+="<Row>",o+="<AccountsXML></AccountsXML>",o+='<Transactions DocSeqNo="'+g+'"  DocDetailsID="0" LinkedInvDocDetailsID="'+r+'" LinkedFieldName="dcNum3" LineNarration="',o+='" ProductID="'+this.DefProdID+'" IsScheme="" Quantity="1" Unit="1" UOMConversion="1" UOMConvertedQty="1',o+='" Rate="0" Gross="0" RefNO="'+e+'" LinkedFieldValue="'+u+'" IsQtyIgnored="1" AverageRate="0',o+='" StockValue="0" StockValueFC="0" CurrencyID="1" ExchangeRate="1"  DebitAccount="'+a+'"  CreditAccount="'+s+'"  ></Transaction>',o+='<Numeric Query="dcNum1='+l+", dcCalcNum1="+l+", dcNum2="+d.Replace(",","")+", dcCalcNum2="+d.Replace(",","")+", dcNum3="+u.toString().Replace(",","")+", dcCalcNum3="+u.toString().Replace(",","")+', " ></Numeric>',o+="<Alpha Query=\"dcAlpha1=N'"+this.dgvLoans.Table[t].ApprovedAmt.toString()+"',dcAlpha2=N'"+(parseFloat(this.dgvLoans.Table[t].BalAmt)-P)+"', dcAlpha3=N'"+h+"', dcAlpha4=N'"+new Date(c[0].DeductionMonth).ToString("dd/MMM/yyyy")+"', dcAlpha5=N'"+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")+"',dcAlpha6=N'1',dcAlpha7=N'"+this.dgvLoans.Table[t].PayStatus.toString()+"', \" ></Alpha>",o+='<CostCenters Query="dcCCNID51='+this.SelectedEmpID+", dcCCNID52="+this.dgvLoans.Table[t].ComponentID.toString()+', " ></CostCenters>',o+="<EXTRAXML></EXTRAXML>",o+="</Row>",P+=u,D-=u,l++,c[0].Flag=1}while(D>0)}}o+="</DOCXML>",o+="<BillXML></BillXML></LoanRepaymentXML>"}if(this.sArrsCalcMonths.length>0){let t=this.sArrsCalcMonths.split(";"),e=this.sArrCalcMonthPaydays.split(";");if(t.length>0){o+="<ArrearsXML>",o+="<Rows>";for(let s=0;s<t.length;s++)o+='<Row PayrollMonth="'+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy"),o+='" EmpSeqNo="'+this.SelectedEmpID,o+='" ArrearsCalcMonths="'+new Date(t[s]).ToString("dd/MMM/yyyy"),o+='" ArrCalcMonthPayDays="'+e[s].toString(),o+='" ArrearsCalcDays="',o+='" />';o+="</Rows>",o+="</ArrearsXML>"}}if(this.dtAdjData.length>0){o+="<AdjustmentsXML>",o+="<Rows>";for(let t=0;t<this.dtAdjData.length;t++)o+='<Row PayrollMonth="'+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy"),o+='" EmpSeqNo="'+this.SelectedEmpID,o+='" AdjMonth="'+this.dtAdjData[t].AdjMonth.toString(),o+='" Days="'+this.dtAdjData[t].Days.toString(),o+='" Remarks="'+this.dtAdjData[t].Remarks.toStri,o+='" />';o+="</Rows>",o+="</AdjustmentsXML >"}if(null!=this.dtDSData&&this.dtDSData.length>0){let t=-1;o+="<DuesXML>",o+="<Rows>";for(let e=0;e<this.dtDSData.length;e++)t="Earning"==this.dtDSData[e].FieldType.toString()?2:3,o+='<Row FieldType="'+t,o+='" EmpSeqNo="'+this.SelectedEmpID,o+='" PayrollMonth="'+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy"),o+='" ComponentID="'+this.dtDSData[e].ComponentID.toString(),o+='" DuesPaidMonth="'+this.dtDSData[e].PayrollMonth.toString(),o+='" Amount="'+this.dtDSData[e].Amount.toString(),o+='" />';o+="</Rows>",o+="</DuesXML>"}if(this.oCMP.arrLstOthMPFields[0].drcLoanCrNetSalLessZero.length>0&&(o+='<DelLoanXML DocID="'+this.oCMP.arrLstOthMPFields[0].drcLoanCrNetSalLessZero[0].DocID.toString()+'" > </DelLoanXML>'),s=a="",parseFloat(this.NetSalary.Text)<0&&"True"==i.a.SessionManager.Preferences.CreateLoanIfNetSalLessThanZero&&parseInt(i.a.SessionManager.Preferences.CreateLoanType)>0&&(null!=i.a.SessionManager.dtDocDefAccs&&(t=i.a.SessionManager.dtDocDefAccs.filter(t=>40056==t.CostCenterID&&"CreditAccount"==t.SysColumnName),null!=t&&t.length>0&&null!=t[0].UserDefaultValue&&""!=t[0].UserDefaultValue.toString().Trim()&&(s=t[0].UserDefaultValue.toString()),t=i.a.SessionManager.dtDocDefAccs.filter(t=>40056==t.CostCenterID&&"DebitAccount"==t.SysColumnName),null!=t&&t.length>0&&null!=t[0].UserDefaultValue&&""!=t[0].UserDefaultValue.toString().Trim()&&(a=t[0].UserDefaultValue.toString())),o+='<CreateLoanXML DocID="" DocDetIDs="" WorkFlowID="0" >',o+="<DOCXML>",o+="<RowHead/>",o+="<Row>",o+="<AccountsXML></AccountsXML>",o+='<Transactions DocSeqNo="1"  DocDetailsID="0" LinkedInvDocDetailsID="0" LinkedFieldName="" LineNarration="" CommonNarration="LOAN CREATED FROM MONTHLY PAYROLL WHEN NET SALARY LESS THAN 0',o+='" ProductID="'+this.DefProdID+'" IsScheme="" Quantity="1" Unit="1" UOMConversion="1" UOMConvertedQty="1',o+='" Rate="0" Gross="0" RefNO="0" IsQtyIgnored="1" AverageRate="0',o+='" StockValue="0" StockValueFC="0" CurrencyID="1" ExchangeRate="1"  DebitAccount="'+a+'"  CreditAccount="'+s+'"  ></Transaction>',o+='<Numeric Query="dcNum1=1, dcCalcNum1=1, dcNum2='+Math.abs(parseFloat(this.NetSalary.Text))+", dcCalcNum2="+Math.abs(parseFloat(this.NetSalary.Text))+', " ></Numeric>',o+="<Alpha Query=\"dcAlpha6=N'"+i.a.SessionManager.PayrollMonth.AddMonths(1).ToString("dd/MMM/yyyy")+"',dcAlpha1=N'"+Math.abs(parseFloat(this.NetSalary.Text))+"', dcAlpha2=N'"+Math.abs(parseFloat(this.NetSalary.Text))+"', dcAlpha4=N'1', dcAlpha3=N'"+Math.abs(parseFloat(this.NetSalary.Text))+"',dcAlpha5=N'"+i.a.SessionManager.PayrollMonth.AddMonths(1).ToString("dd/MMM/yyyy")+"',dcAlpha7=N'"+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")+"', \" ></Alpha>",o+='<CostCenters Query="dcCCNID51='+this.SelectedEmpID+", dcCCNID52="+i.a.SessionManager.Preferences.CreateLoanType+', " ></CostCenters>',o+="<EXTRAXML></EXTRAXML>",o+="</Row>",o+="</DOCXML>",o+="<BillXML></BillXML></CreateLoanXML>"),null!=this.strWorkSheetXML&&this.strWorkSheetXML.length>0&&(o+=this.strWorkSheetXML),this.oCMP.arrLstCPFields[0][0].length>0&&this.dtArrData.length>0){let t="";t+="    DELETE FROM PAY_EmpMonthlyArrAdjDetails WHERE EmpSeqNo="+this.SelectedEmpID+" AND DType=1 AND PayrollMonth='"+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")+"'";for(let e=0;e<this.dtArrData.length;e++){let s="",a="";t+="  INSERT INTO PAY_EmpMonthlyArrAdjDetails(EmpSeqNo,PayrollMonth,ArrAdjMonth,DType",s+="VALUES("+this.SelectedEmpID+",'"+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")+"','"+this.dtArrData[e].PayrollMonth.toString()+"',1";for(let t=0;t<this.oCMP.arrLstCPFields[0][0].length;t++){let i="";if(null!=this.oCMP.arrLstCPFields[0][0][t].ArrData&&this.oCMP.arrLstCPFields[0][0][t].ArrData.length>0){let s=[];if(this.oCMP.arrLstCPFields[0][0][t].ArrData=this.oCMP.arrLstCPFields[0][0][t].ArrData.TrimEnd(","),s=this.oCMP.arrLstCPFields[0][0][t].ArrData.split(";"),null!=s&&s.length>0)for(let t=0;t<s.length;t+=2)new Date(s[t]).ToString("dd MMM yyyy")==new Date(this.dtArrData[e].PayrollMonth).ToString("dd MMM yyyy")&&(i=s[t+1])}a+=",Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo,s+=null!=i&&""!=i?","+i:",0"}for(let t=0;t<this.oCMP.arrLstCPFields[0][2].length;t++){let i="";if(null!=this.oCMP.arrLstCPFields[0][2][t].ArrData&&this.oCMP.arrLstCPFields[0][2][t].ArrData.length>0){let s=[];if(this.oCMP.arrLstCPFields[0][2][t].ArrData=this.oCMP.arrLstCPFields[0][2][t].ArrData.TrimEnd(","),s=this.oCMP.arrLstCPFields[0][2][t].ArrData.split(";"),null!=s&&s.length>0)for(let t=0;t<s.length;t+=2)new Date(s[t]).ToString("dd MMM yyyy")==new Date(this.dtArrData[e].PayrollMonth).ToString("dd MMM yyyy")&&(i=s[t+1])}a+=",Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo,s+=null!=i&&""!=i?","+i:",0"}t+=a+")",t+=s+")"}o+='<ArrearsDetailXML Query="'+t+'"></ArrearsDetailXML>'}if(this.dtAdjData.length>0){let t="";t+="    DELETE FROM PAY_EmpMonthlyArrAdjDetails WHERE EmpSeqNo="+this.SelectedEmpID+" AND DType=2 AND PayrollMonth='"+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")+"'";for(let e=0;e<this.dtAdjData.length;e++){let s="",a="";t+="  INSERT INTO PAY_EmpMonthlyArrAdjDetails(EmpSeqNo,PayrollMonth,ArrAdjMonth,DType",s+="VALUES("+this.SelectedEmpID+",'"+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy")+"','"+this.dtAdjData[e].AdjMonth.toString()+"',2";for(let t=0;t<this.oCMP.arrLstCPFields[0][0].length;t++){let i="";if(null!=this.oCMP.arrLstCPFields[0][0][t].AdjData&&this.oCMP.arrLstCPFields[0][0][t].AdjData.length>0){let s=[];if(this.oCMP.arrLstCPFields[0][0][t].AdjData=this.oCMP.arrLstCPFields[0][0][t].AdjData.TrimEnd(","),s=this.oCMP.arrLstCPFields[0][0][t].AdjData.split(";"),null!=s&&s.length>0)for(let t=0;t<s.length;t+=2)new Date(s[t]).ToString("dd MMM yyyy")==new Date(this.dtAdjData[e].AdjMonth).ToString("dd MMM yyyy")&&(i=s[t+1])}a+=",Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo,s+=null!=i&&""!=i?","+i:",0"}for(let t=0;t<this.oCMP.arrLstCPFields[0][2].length;t++){let i="";if(null!=this.oCMP.arrLstCPFields[0][2][t].AdjData&&this.oCMP.arrLstCPFields[0][2][t].AdjData.length>0){let s=[];if(this.oCMP.arrLstCPFields[0][2][t].AdjData=this.oCMP.arrLstCPFields[0][2][t].AdjData.TrimEnd(","),s=this.oCMP.arrLstCPFields[0][2][t].AdjData.split(";"),null!=s&&s.length>0)for(let t=0;t<s.length;t+=2)new Date(s[t]).ToString("dd MMM yyyy")==new Date(this.dtAdjData[e].AdjMonth).ToString("dd MMM yyyy")&&(i=s[t+1])}a+=",Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo,s+=null!=i&&""!=i?","+i:",0"}t+=a+")",t+=s+")"}o+='<AdjustmentsDetailXML Query="'+t+'"></AdjustmentsDetailXML>'}return o+="</XML>",o.toString()}GetDocumentXML(){let t,e,s="",a="",o="",r="",n="",d="",h="",c=new Array,g=" dcAlpha1='"+parseFloat(this.sBasicMonthly)+"',dcAlpha3='"+parseFloat(this.NetSalary.Text)+"',dcAlpha4='"+this.dgvDays.Table[0].Days.toString()+"',dcAlpha5='"+this.dgvDays.Table[1].Days.toString()+"',dcAlpha6='"+this.dgvDays.Table[3].Days.toString()+"',dcAlpha7='"+this.dgvDays.Table[4].Days.toString()+"',dcAlpha8='"+this.dgvDays.Table[5].Days.toString()+"',dcAlpha9='"+this.dgvDays.Table[6].Days.toString()+"',dcAlpha10='"+this.dgvDays.Table[7].Days.toString()+"', dcAlpha11='"+(parseFloat(this.dgvEarnings.Columns[3].footer)+parseFloat(this.dgvEarOTs.Columns[2].footer))+"',dcAlpha12='"+parseFloat(this.dgvDeductions.Columns[3].footer+parseFloat(this.dgvLoans.Columns[4].footer))+"',dcAlpha13='0' ";if(null!=this.HeaderFields&&this.HeaderFields.length>0)for(let i=0;i<this.HeaderFields.length;i++)"dcAlpha14"==this.HeaderFields[i].DBColumnName.toString()&&(h=this.GetControlValue(this.HeaderFields[i]));if(i.a.SessionManager.Preferences.ContainsKey("ShowPaymentModeselectionWhilePayrollProcessing")&&"True"==i.a.SessionManager.Preferences.ShowPaymentModeselectionWhilePayrollProcessing&&"Default"!=h?(g+=",dcAlpha14='"+h+"'",g+="Bank Transfer"==h?",dcAlpha15='"+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].iBank.toString()+"',dcAlpha16='"+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].BankAccNo.toString()+"'":",dcAlpha15='',dcAlpha16=''"):(g+=",dcAlpha14='"+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].PaymentMode.toString()+"'","Bank Transfer"==this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].PaymentMode.toString()?g+=",dcAlpha15='"+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].iBank.toString()+"',dcAlpha16='"+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].BankAccNo.toString()+"'":g+=",dcAlpha15='',dcAlpha16=''"),g+=",dcAlpha17='"+i.a.SessionManager.PayrollMonthStart.ToString("dd/MMM/yyyy")+"',dcAlpha18='"+i.a.SessionManager.PayrollMonthEnd.ToString("dd/MMM/yyyy")+"',  dcAlpha19='"+parseFloat(this.dgvEarOTs.Columns[1].footer)+"',dcAlpha20='"+parseFloat(this.dgvEarOTs.Columns[2].footer)+"',    dcAlpha21='"+this.sArrsCalcMonths+"',dcAlpha22='"+this.sArrCalcMonthPaydays+"' ",g+=",dcAlpha23='"+this.sProcessType+"' ",g+=",dcAlpha24='"+this.dgvDays.Table[2].Days.toString()+"' ",g+=",dcAlpha25='"+parseFloat(this.dgvEarnings.Columns[2].footer)+"' ",g+=",dcAlpha26='"+parseFloat(this.dgvEarnings.Columns[4].footer)+"' ",g+=",dcAlpha27='"+parseFloat(this.dgvEarnings.Columns[5].footer)+"' ",g+=",dcAlpha28='"+parseFloat(this.dgvDeductions.Columns[2].footer)+"' ",g+=",dcAlpha29='"+parseFloat(this.dgvDeductions.Columns[4].footer)+"' ",g+=",dcAlpha30='"+parseFloat(this.dgvDeductions.Columns[5].footer)+"' ",g+=",dcAlpha31='"+parseFloat(this.dgvLoans.Columns[4].footer)+"' ",g+=",dcAlpha32='"+this.sAdjsCalcMonths+"',dcAlpha33='"+this.sAdjCalcMonthPaydays+"' ",i.a.SessionManager.Preferences.ContainsKey("ShowPaymentModeselectionWhilePayrollProcessing")&&"True"==i.a.SessionManager.Preferences.ShowPaymentModeselectionWhilePayrollProcessing&&"Default"!=h?g+="Bank Transfer"==h?",dcAlpha34='"+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].IBANNo.toString()+"'":",dcAlpha34=''":"Bank Transfer"==this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].PaymentMode.toString()?g+=",dcAlpha34='"+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].IBANNo.toString()+"'":g+=",dcAlpha34=''",o+='<Alpha Query="',o+=g,null!=this.HeaderFields&&this.HeaderFields.length>0)for(let i=0;i<this.HeaderFields.length;i++)if(this.HeaderFields[i].DBColumnName.startsWith("dcAlpha")){if("dcAlpha14"==this.HeaderFields[i].DBColumnName.toString())continue;n+=" "+this.HeaderFields[i].DBColumnName+"='"+l.e.EncodeXML(this.GetControlValue(this.HeaderFields[i]))+"',"}if(this.CustomTab.Pages.length>this.iStaticTabCnt)for(let i=this.iStaticTabCnt;i<this.CustomTab.Pages.length;i++)for(let t=0;t<this.CustomTab.Pages[i].Fields.length;t++)this.CustomTab.Pages[i].Fields[t].DBColumnName.startsWith("dcAlpha")&&(n+=" "+this.CustomTab.Pages[i].Fields[t].DBColumnName+"='"+l.e.EncodeXML(this.GetControlValue(this.CustomTab.Pages[i].Fields[t]))+"',");o+=",",n.length>0&&(o+=n),o+='" ></Alpha>',n="",r+='<CostCenters Query="',n+=" dcCCNID51="+this.SelectedEmpID+",",n+=" dcCCNID53="+this.oCMP.arrLstOthMPFields[0].GradeID+",",""==l.e.String(this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].iBank)||"0"==l.e.String(this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].iBank)||"Cash"==l.e.String(this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].PaymentMode)?n+=" dcCCNID68=1,":n+=" dcCCNID68="+this.oCMP.arrLstOthMPFields[0].drcAllEmpsData[0].iBank.toString()+",",c.push("dcCCNID51"),c.push("dcCCNID53"),c.push("dcCCNID68");let D="",u="";if(null!=this.oCMP.arrLstOthMPFields[0].drcAsOnDim&&this.oCMP.arrLstOthMPFields[0].drcAsOnDim.length>0)for(let i=0;i<Object.keys(this.oCMP.arrLstOthMPFields[0].dvAsOnDim[0]).length;i++)D=Object.keys(this.oCMP.arrLstOthMPFields[0].dvAsOnDim[0])[i].toString(),u=this.oCMP.arrLstOthMPFields[0].dvAsOnDim[0][D].toString(),D.Contains("CCNID")&&"CCNID51"!=D&&"CCNID53"!=D&&"CCNID68"!=D&&(n+=" dc"+D+"="+u+",",c.Contains("dc"+D)||c.push("dc"+D));if(null!=this.HeaderFields&&this.HeaderFields.length>0)for(let i=0;i<this.HeaderFields.length;i++)this.HeaderFields[i].DBColumnName.startsWith("dcCCNID")&&(c.Contains(this.HeaderFields[i].DBColumnName)||(n+=" "+this.HeaderFields[i].DBColumnName+"="+this.HeaderFields[i].SelectedValue+","));if(this.CustomTab.Pages.length>this.iStaticTabCnt)for(let i=this.iStaticTabCnt;i<this.CustomTab.Pages.length;i++)for(let t=0;t<this.CustomTab.Pages[i].Fields.length;t++)this.CustomTab.Pages[i].Fields[t].DBColumnName.startsWith("dcCCNID")&&(c.Contains(this.CustomTab.Pages[i].Fields[t].DBColumnName)||(n+=" "+this.CustomTab.Pages[i].Fields[t].DBColumnName+"="+this.CustomTab.Pages[i].Fields[t].SelectedValue+","));if(n.length>0&&(r+=n),r+='" ></CostCenters>',a+='" ProductID="'+this.DefProdID+'" Quantity="0',a+='" Unit="1" UOMConversion="1" UOMConvertedQty="0',a+='" Rate="0" Gross="0" IsQtyIgnored="1" AverageRate="0',a+='" StockValue="0" StockValueFC="0" RefNO="',a+='" BillDate="'+i.a.SessionManager.PayrollMonth.ToString("dd/MMM/yyyy"),a+='" CurrencyID="'+this.CurrencyID+'" ExchangeRate="1',a+='" DebitAccount="'+this.sDrAccount+'" CreditAccount="'+this.sCrAccount,a+='" CommonNarration="'+l.e.EncodeXML(this.Remarks.Text),this.dgvEarnings.Table.length>0&&!l.e.IsEmpty(this.dgvEarnings.Table[0].EarSNo)){if(s+="\x11",s+="<Row>",s+="<AccountsXML></AccountsXML>",s+='<Transactions DocSeqNo="1" VoucherType="11',s+='" LinkedInvDocDetailsID="0" LinkedFieldName="',s+='" LineNarration="Earnings',d="",null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].drcPayProcessed.length>0&&(t=this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.oCMP.arrLstOthMPFields[0].EmpSeqNo&&11==t.VoucherType),null!=t&&t.length>0&&(d=t[0].InvDocDetailsID.toString())),s+=d.length>0?'" DocDetailsID="'+d:'" DocDetailsID="',s+=a.toString()+'" ></Transactions>',e="",n="",s+='<Numeric Query="',this.dgvEarnings.Table.length>0){for(let e=0;e<this.dgvEarnings.Table.length;e++)l.e.IsEmpty(this.dgvEarnings.Table[e].EarSNo)||(n+=" dcNum"+this.dgvEarnings.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvEarnings.Table[e].Actual).toString().Replace(",","")+",",n+=" dcCalcNum"+this.dgvEarnings.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvEarnings.Table[e].Earned).toString().Replace(",","")+",",n+=" dcExchRT"+this.dgvEarnings.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvEarnings.Table[e].Arrears).toString().Replace(",","")+",",n+=" dcCalcNumFC"+this.dgvEarnings.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvEarnings.Table[e].Adjustments).toString().Replace(",","")+",");if(this.iAccruCnt>0)for(let e=0;e<this.dgvAccruals.Table.length;e++)l.e.IsEmpty(this.dgvAccruals.Table[e].EarSNo)||(n+=" dcNum"+this.dgvAccruals.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvAccruals.Table[e].Actual).toString().Replace(",","")+",",n+=" dcCalcNum"+this.dgvAccruals.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvAccruals.Table[e].Earned).toString().Replace(",","")+",",n+=" dcExchRT"+this.dgvAccruals.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvAccruals.Table[e].Arrears).toString().Replace(",","")+",",n+=" dcCalcNumFC"+this.dgvAccruals.Table[e].EarSNo.toString()+"="+parseFloat(this.dgvAccruals.Table[e].Adjustments).toString().Replace(",","")+",");let t="",s="";if(i.a.SessionManager.Preferences.ContainsKey("ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll")&&"True"==i.a.SessionManager.Preferences.ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll){for(let e=0;e<this.dgvEarnings.Table.length;e++)t="",i.a.SessionManager.Preferences.ContainsKey("ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll")&&"True"==i.a.SessionManager.Preferences.ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll&&!l.e.IsEmpty(this.dgvEarnings.Table[e].EarDedTypeID)&&"0"!=this.dgvEarnings.Table[e].EarDedTypeID.toString()&&(t+="<EarDedType>"+this.dgvEarnings.Table[e].EarDedTypeID.toString()+"</EarDedType>"),t.length>0&&(s+='<Component ComponentID="'+this.dgvEarnings.Table[e].ComponentID.toString()+'" >'+t+"</Component>");s.length>0&&(e+="<XML>"+s+"</XML>")}}if(this.dgvEarOTs.Table.length>0)for(let t=0;t<this.dgvEarOTs.Table.length;t++)l.e.IsEmpty(this.dgvEarOTs.Table[t].EarSNo)||(n+=" dcNum"+this.dgvEarOTs.Table[t].EarSNo.toString()+"="+parseFloat(this.dgvEarOTs.Table[t].Hours).toString().Replace(",","")+",",n+=" dcCalcNum"+this.dgvEarOTs.Table[t].EarSNo.toString()+"="+parseFloat(this.dgvEarOTs.Table[t].Amount).toString().Replace(",","")+",");n.length>0&&(s+=n),s+='" >',e.length>0&&(s+=e.toString()),s+="</Numeric>",s+=o.toString(),s+=r.toString(),s+="<EXTRAXML></EXTRAXML>",s+="</Row>"}if(this.dgvDeductions.Table.length>0&&!l.e.IsEmpty(this.dgvDeductions.Table[0].DedSNo)){if(s+="\x11",s+="<Row>",s+="<AccountsXML></AccountsXML>",s+='<Transactions DocSeqNo="2" VoucherType="12',s+='" LinkedInvDocDetailsID="0" LinkedFieldName="',s+='" LineNarration="Deductions',d="",null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].drcPayProcessed.length>0&&(t=this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.oCMP.arrLstOthMPFields[0].EmpSeqNo&&12==t.VoucherType),null!=t&&t.length>0&&(d=t[0].InvDocDetailsID.toString())),s+=d.length>0?'" DocDetailsID="'+d:'" DocDetailsID="',s+=a.toString()+'" ></Transactions>',e="",n="",s+='<Numeric Query="',this.dgvDeductions.Table.length>0){for(let e=0;e<this.dgvDeductions.Table.length;e++)l.e.IsEmpty(this.dgvDeductions.Table[e].DedSNo)||(n+=" dcNum"+this.dgvDeductions.Table[e].DedSNo.toString()+"="+parseFloat(this.dgvDeductions.Table[e].Actual).toString().Replace(",","")+",",n+=" dcCalcNum"+this.dgvDeductions.Table[e].DedSNo.toString()+"="+parseFloat(this.dgvDeductions.Table[e].Deducted).toString().Replace(",","")+",",n+=" dcExchRT"+this.dgvDeductions.Table[e].DedSNo.toString()+"="+parseFloat(this.dgvDeductions.Table[e].Arrears).toString().Replace(",","")+",",n+=" dcCalcNumFC"+this.dgvDeductions.Table[e].DedSNo.toString()+"="+parseFloat(this.dgvDeductions.Table[e].Adjustments).toString().Replace(",","")+",");let t="",s="";if(i.a.SessionManager.Preferences.ContainsKey("ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll")&&"True"==i.a.SessionManager.Preferences.ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll){for(let e=0;e<this.dgvDeductions.Table.length;e++)t="",i.a.SessionManager.Preferences.ContainsKey("ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll")&&"True"==i.a.SessionManager.Preferences.ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll&&!l.e.IsEmpty(this.dgvDeductions.Table[e].EarDedTypeID)&&"0"!=this.dgvDeductions.Table[e].EarDedTypeID.toString()&&(t+="<EarDedType>"+this.dgvDeductions.Table[e].EarDedTypeID.toString()+"</EarDedType>"),t.length>0&&(s+='<Component ComponentID="'+this.dgvDeductions.Table[e].ComponentID.toString()+'" >'+t+"</Component>");s.length>0&&(e+="<XML>"+s+"</XML>")}}n.length>0&&(s+=n),s+='" >',e.length>0&&(s+=e.toString()),s+="</Numeric>",s+=o.toString(),s+=r.toString(),s+="<EXTRAXML></EXTRAXML>",s+="</Row>"}if(this.dgvLoans.Table.length>0&&null!=this.dgvLoans.Tag&&parseInt(this.dgvLoans.Tag)>0){if(s+="\x11",s+="<Row>",s+="<AccountsXML></AccountsXML>",s+='<Transactions DocSeqNo="3" VoucherType="13',s+='" LinkedInvDocDetailsID="0" LinkedFieldName="',s+='" LineNarration="Loans',d="",null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].drcPayProcessed.length>0&&(t=this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.oCMP.arrLstOthMPFields[0].EmpSeqNo&&13==t.VoucherType),null!=t&&t.length>0&&(d=t[0].InvDocDetailsID.toString())),s+=d.length>0?'" DocDetailsID="'+d:'" DocDetailsID="',s+=a.toString()+'" ></Transactions>',n="",s+='<Numeric Query="',this.dgvLoans.Table.length>0)for(let t=0;t<this.dgvLoans.Table.length;t++)l.e.IsEmpty(this.dgvLoans.Table[t].LoanSNo)||"1"!=this.dgvLoans.Table[t].IsVisible.toString()||(n+=" dcNum"+this.dgvLoans.Table[t].LoanSNo.toString()+"="+parseFloat(this.dgvLoans.Table[t].ActInstAmt).toString().Replace(",","")+",",n+=" dcCalcNum"+this.dgvLoans.Table[t].LoanSNo.toString()+"="+parseFloat(this.dgvLoans.Table[t].InstAmt).toString().Replace(",","")+",",n+=" dcExchRT"+this.dgvLoans.Table[t].LoanSNo.toString()+"="+parseFloat(this.dgvLoans.Table[t].BalAmt).toString().Replace(",","")+",",n+=" dcCalcNumFC"+this.dgvLoans.Table[t].LoanSNo.toString()+"="+parseFloat(this.dgvLoans.Table[t].PayStatus)+",");n.length>0&&(s+=n),s+='" ></Numeric>',s+=o.toString(),s+=r.toString(),s+="<EXTRAXML></EXTRAXML>",s+="</Row>"}if(this.dgvLeaves.Table.length>0&&!l.e.IsEmpty(this.dgvLeaves.Table[0].LeaveSNo)){if(s+="\x11",s+="<Row>",s+="<AccountsXML></AccountsXML>",s+='<Transactions DocSeqNo="4" VoucherType="14',s+='" LinkedInvDocDetailsID="0" LinkedFieldName="',s+='" LineNarration="Leaves',d="",null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].drcPayProcessed.length>0&&(t=this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.oCMP.arrLstOthMPFields[0].EmpSeqNo&&14==t.VoucherType),null!=t&&t.length>0&&(d=t[0].InvDocDetailsID.toString())),s+=d.length>0?'" DocDetailsID="'+d:'" DocDetailsID="',s+=a.toString()+'" ></Transactions>',n="",s+='<Numeric Query="',this.dgvLeaves.Table.length>0)for(let t=0;t<this.dgvLeaves.Table.length;t++)l.e.IsEmpty(this.dgvLeaves.Table[t].LeaveSNo)||(n+=" dcNum"+this.dgvLeaves.Table[t].LeaveSNo.toString()+"="+parseFloat(this.dgvLeaves.Table[t].TotOPBal).toString().Replace(",","")+",",n+=" dcCalcNum"+this.dgvLeaves.Table[t].LeaveSNo.toString()+"="+parseFloat(this.dgvLeaves.Table[t].LeavesTaken).toString().Replace(",","")+",",n+=" dcExchRT"+this.dgvLeaves.Table[t].LeaveSNo.toString()+"="+parseFloat(this.dgvLeaves.Table[t].MonOPBal).toString().Replace(",","")+",",n+=" dcCalcNumFC"+this.dgvLeaves.Table[t].LeaveSNo.toString()+"="+parseFloat(this.dgvLeaves.Table[t].NetBal).toString().Replace(",","")+",");n.length>0&&(s+=n),s+='" ></Numeric>',s+=o.toString(),s+=r.toString(),s+="<EXTRAXML></EXTRAXML>",s+="</Row>"}return s.toString()}FillControlValue(t,e){t instanceof d.d||t instanceof d.c||t instanceof u.a?t.Text=e:t instanceof y.e?t.SelectedValue=e:t instanceof D.c||t instanceof D.b||t instanceof D.a?""!=e&&l.e.isValidDate(e)&&(t.Date=new Date(e)):t instanceof P.b?""!=e&&l.e.Int(e)>0&&(t.PreviousSelectedValue=parseInt(e),t.SelectedValue=parseInt(e)):t instanceof h.a&&""!=e&&l.e.Int(e)>0&&(t.PrevSelValu=parseInt(e),t.SelectedValue=parseInt(e))}GetControlValue(t){if(t instanceof d.d)return t.Text;if(t instanceof d.c)return t.Text;if(t instanceof u.a)return t.Text;if(t instanceof y.e)return t.SelectedValue;if(t instanceof D.c){if(t.Date)return t.Date.ToString("dd/MMM/yyyy")}else if(t instanceof D.b){if(t.Date)return t.Date.ToString("dd/MMM/yyyy hh:mm a")}else{if(t instanceof D.a)return t.Date.ToString("dd/MMM/yyyy");if(t instanceof P.b){if(t.SelectedValue>0)return t.SelectedValue.toString()}else if(t instanceof h.a&&t.SelectedValue>0)return t.SelectedValue.toString()}return""}ValidatePosting(){try{if(Logger.InfoLog("MonthlyPayrollViewModel::Entering IsValidated()"),null!=i.a.SessionManager.Preferences.PayrollProduct&&""!=i.a.SessionManager.Preferences.PayrollProduct&&(this.DefProdID=parseInt(i.a.SessionManager.Preferences.PayrollProduct)),0==this.DefProdID)return this.DisplayMessage="Select any Default Payroll Product at Global Preferences",this.MessageVisibility=!0,!1;if(0==this.SelectedEmpID)return this.DisplayMessage=i.a.GetResource("SelectAnyEmployee"),this.MessageVisibility=!0,this.EmployeeList.SetFocus=!0,!1;if(this.oCMP.arrLstOthMPFields[0].sErrorMessage.length>0)return this.DisplayMessage=this.oCMP.arrLstOthMPFields[0].sErrorMessage,this.MessageVisibility=!0,this.dgvDays.SelectedIndex=1,!1;if(this.oCMP.arrLstOthMPFields[0].LOPDays<0)return this.DisplayMessage="Days mismatch : Month days and Total days.",this.MessageVisibility=!0,this.dgvDays.SelectedIndex=1,!1;if(this.oCMP.arrLstOthMPFields[0].dblLeavesLOP>0&&this.oCMP.arrLstOthMPFields[0].LOPDays<this.oCMP.arrLstOthMPFields[0].dblLeavesLOP)return this.DisplayMessage="Employee Should have atleast "+this.oCMP.arrLstOthMPFields[0].dblLeavesLOP+" LOP Days",this.MessageVisibility=!0,this.dgvDays.SelectedIndex=1,!1;if(this.oCMP.arrLstOthMPFields[0].NetSalary<0&&("False"==i.a.SessionManager.Preferences.CreateLoanIfNetSalLessThanZero||0==parseInt(i.a.SessionManager.Preferences.CreateLoanType)))return this.DisplayMessage="Net Amount should be greater than or equal to zero.",this.MessageVisibility=!0,this.dgvDays.SelectedIndex=1,!1;let t="";if(null!=this.HeaderFields&&this.HeaderFields.length>0)for(let e=0;e<this.HeaderFields.length;e++){let s={Message:t};if(this.ValidateControl(this.HeaderFields[e],s),t=s.Message,!l.e.IsEmpty(t))return this.DisplayMessage=t,this.MessageVisibility=!0,!1}if(this.CustomTab.Pages.length>this.iStaticTabCnt)for(let e=this.iStaticTabCnt;e<this.CustomTab.Pages.length;e++)for(let s=0;s<this.CustomTab.Pages[e].Fields.length;s++){let a={Message:t};if(this.ValidateControl(this.CustomTab.Pages[e].Fields[s],a),t=a.Message,!l.e.IsEmpty(t))return this.DisplayMessage=t,this.MessageVisibility=!0,!1}if(null!=this.dtWorkSheet)if(i.a.SessionManager.Preferences.ContainsKey("AddWeeklyoffs")&&Object(o.j)("True"==i.a.SessionManager.Preferences.AddWeeklyoffs)){if(parseFloat(this.dgvDays.Table[1][2].toString())!=this.dtComputeSUM(this.dtWorkSheet,"dcAlpha2")&&i.a.SessionManager.Preferences.ContainsKey("SaveDaysAttendedExceed")&&Object(o.j)("False"==i.a.SessionManager.Preferences.SaveDaysAttendedExceed))return this.DisplayMessage="' Days Attended ' does not match in work sheet entry",this.MessageVisibility=!0,!1}else if(parseFloat(this.dgvDays.Table[1][2].toString())!=this.dtComputeSUM(this.dtWorkSheet,"dcAlpha2")+parseFloat(this.dgvDays.Table[4][2].toString())+parseFloat(this.dgvDays.Table[5][2].toString())&&i.a.SessionManager.Preferences.ContainsKey("SaveDaysAttendedExceed")&&Object(o.j)("False"==i.a.SessionManager.Preferences.SaveDaysAttendedExceed))return this.DisplayMessage="' Days Attended ' does not match in work sheet entry",this.MessageVisibility=!0,!1;return this.DisplayMessage="",Logger.InfoLog("MonthlyPayrollViewModel::Exiting IsValidated()"),!0}catch(t){return Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION IsValidated()\r\n"+t.Message+"\r\n"+t.stack),!1}}BuildControls(t){try{Logger.InfoLog("MonthlyPayrollViewModel::Entering BuildControls()"),this.dsDocDesig=(new m.a).GetScreenInfo(this.CostCenterID),i.a.SessionManager.Preferences.ContainsKey("ShowPaymentModeselectionWhilePayrollProcessing")&&"True"==i.a.SessionManager.Preferences.ShowPaymentModeselectionWhilePayrollProcessing&&this.dsDocDesig.Tables[0].forEach(t=>{"dcAlpha14"==l.e.String(t.SysColumnName)&&(t.SectionName="H")}),this.GenerateCustomFields("true~2~H","SectionSeqNumber",this.HeaderFields,t);let e=this.dsDocDesig.Tables[0];e=e.filter(t=>1==t.IsColumnUserDefined&&3==t.SectionID);for(let t=0;t<e.length;t++)if(null==this.CustomTab.Pages.find(s=>s.Name==l.e.String(e[t].SectionName))){let s=new n.b;s.Name=e[t].SectionName.toString(),s.Header=e[t].SectionName.toString(),this.CustomTab.Pages.push(s)}if(this.CustomTab.Pages.length>this.iStaticTabCnt)for(let s=this.iStaticTabCnt;s<this.CustomTab.Pages.length;s++)this.GenerateCustomFields("true~3~"+this.CustomTab.Pages[s].Name,"SectionSeqNumber",this.CustomTab.Pages[s].Fields,t,s);this.CustomTab.SelectedTab=this.CustomTab.Pages[0],Logger.InfoLog("MonthlyPayrollViewModel::Exiting BuildControls()")}catch(e){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION BuildControls()\r\n"+e.Message+"\r\n"+e.stack)}}GenerateCustomFields(t,e,s,a,l=0){let r;Logger.InfoLog("MonthlyPayrollViewModel:: Inside GenerateCustomFields");let n=this.dsDocDesig.Tables[0];n=n.filter(e=>e.IsColumnUserDefined==Object(o.j)(t.split("~")[0])&&e.SectionID==parseInt(t.split("~")[1])&&e.SectionName==t.split("~")[2]),n.sort((t,e)=>t.SectionSeqNumber-e.SectionSeqNumber),this.iRow=0,this.iCol=-1,n.forEach(t=>{switch(r=t.UserColumnType.toString().toUpperCase(),r){case"FLOAT":case"NUMERIC":case"TEXT":this.oText=new d.d(parseInt(t.CostCenterColID)),this.SetProperties_Custom(t,this.oText),s.push(this.oText);break;case"TEXTAREA":this.oTextArea=new d.c(parseInt(t.CostCenterColID)),this.SetProperties_Custom(t,this.oTextArea),s.push(this.oTextArea);break;case"DATE":this.oDate=new D.c(parseInt(t.CostCenterColID)),this.SetProperties_Custom(t,this.oDate),s.push(this.oDate);break;case"TIME":this.oTime=new D.b(parseInt(t.CostCenterColID)),this.oTime.ShowTimePicker=!0,this.oTime.CustomFormat="hh:mm:ss tt",this.SetProperties_Custom(t,this.oTime),s.push(this.oTime);break;case"COMBOBOX":this.oCombo=new y.e(parseInt(t.CostCenterColID));let e=t.UserProbableValues.toString().Trim();if(e.length>0){let t=e.split(";");for(let e=0;e<t.length;e++)this.oCombo.Items.push(y.d.ComboBoxItems_2(t[e].Replace("''","'"),t[e].Replace("''","'")));this.oCombo.SelectedValue=this.oCombo.Items[0].Value}this.SetProperties_Custom(t,this.oCombo),s.push(this.oCombo);break;case"SELECTIONBOX":this.oPactSelectionCombo=new u.a(parseInt(t.CostCenterColID)),this.oPactSelectionCombo.CostCenterID=a,this.SetProperties_Custom(t,this.oPactSelectionCombo),s.push(this.oPactSelectionCombo);break;case"LISTBOX":this.oPactCombo=new P.b(parseInt(t.CostCenterColID)),this.oPactCombo.CCID=parseInt(t.ColumnCostCenterID),this.oPactCombo.TypeID=0==t.ColumnCCListViewTypeID.toString().Trim().length?1:parseInt(t.ColumnCCListViewTypeID),this.oPactCombo.OnPactListBoxValueChanged.Subscribe(this,"OnGetReference"),this.SetProperties_Custom(t,this.oPactCombo),s.push(this.oPactCombo);break;case"COMBOTEXT":let l=new p.a(parseInt(t.CostCenterColID));this.SetProperties_Custom(t,l),s.push(l);break;case"COMBOTEXTVALUE":let o=new p.b;"30416"==t.CostCenterColID.toString()?(o.Currency.Items.push(y.d.ComboBoxItems_2(i.a.GetResource("Pay_Yearly"),"Yearly")),o.Currency.Items.push(y.d.ComboBoxItems_2(i.a.GetResource("Pay_Monthly"),"Monthly")),o.Currency.SelectedValue="Yearly",o.ExchangeRate.Text="0"):(o.Currency.Items.push(y.d.ComboBoxItems_2(i.a.GetResource("AssetManagement_Value"),"1")),o.Currency.Items.push(y.d.ComboBoxItems_2(i.a.GetResource("AssetManagement_Percentage"),"2")),o.Currency.SelectedValue="1"),this.SetProperties_Custom(t,o),s.push(o);break;case"LINK":let r=new M.a(parseInt(t.CostCenterColID));r.LinkCombo.Items.push(y.d.ComboBoxItems_2("A","1")),this.SetProperties_Custom(t,r),s.push(r);break;case"TEXTCOMBOBOX":let n=new d.f(parseInt(t.CostCenterColID)),h=t.UserProbableValues.toString().Trim();if(h.length>0){let t=h.split(";");for(let e=0;e<t.length;e++)this.oCombo.Items.push(y.d.ComboBoxItems_2(t[e],t[e]));this.oCombo.SelectedValue=this.oCombo.Items[0].Value}this.SetProperties_Custom(t,n),s.push(n)}}),"H"==t.split("~")[2]?this.HeaderFields=s:this.CustomTab.Pages[l].Fields=s}OnGetReference(t){t instanceof P.b&&this.GetLinkReferenceData(t.DBColumnID,this.CostCenterID,t.SelectedValue)}SetProperties_Custom(t,e){try{Logger.InfoLog("MonthlyPayrollViewModel::Entering SetProperties_Custom()"),e.Label=t.ResourceData.toString();let s=l.e.IsEmpty(t.IsMandatory)?0:parseInt(t.IsMandatory);if(e.Mandatory=!1,1==s&&(e.Mandatory=!0),e.Visible=Object(o.j)(t.IsVisible),e.DataType=t.ColumnDataType.toString().toUpperCase(),e.DefaultValue=t.UserDefaultValue.toString(),e.DBColumnName=t.SysColumnName.toString(),e.SectionID=t.SectionID.toString(),l.e.IsEmpty(t.SysTableName)||(e.SysTableName=t.SysTableName.toString()),"2"==l.e.String(t.SectionID)?(1==this.iCol?(this.iRow++,this.iCol=0):this.iCol++,l.e.IsEmpty(t.RowNo)||(e.Row=this.iRow),l.e.IsEmpty(t.ColumnNo)||(e.Column=this.iCol)):(3==this.iCol?(this.iRow++,this.iCol=0):this.iCol++,l.e.IsEmpty(t.RowNo)||(e.Row=this.iRow),l.e.IsEmpty(t.ColumnNo)||(e.Column=this.iCol)),l.e.IsEmpty(t.ISEDITABLE)||(e.Enable=Object(o.j)(t.ISEDITABLE)),!l.e.IsEmpty(t.TextFormat)&&e instanceof d.d){let s=0;s=l.e.Int(t.TextFormat),2==s?e.IsAllCaps=!0:3==s&&(e.IsFirstLetterCaps=!0)}if((e instanceof d.d||e instanceof d.f)&&("INT"!=e.DataType&&"FLOAT"!=e.DataType||(e.Align="Right")),e instanceof P.b&&null!=this.dsDocDesig&&this.dsDocDesig.Tables.length>0&&this.dsDocDesig.Columns[0].Contains("dependanton")&&!l.e.IsEmpty(t.dependanton)&&"0"!=t.dependanton.toString()){let s=null;parseInt(t.dependanton.toString())>5e4&&parseInt(t.dependanton.toString())<50050?(s=this.dsDocDesig.Tables[0].filter(e=>e.ColumnCostCenterID==t.dependanton.toString()),null!=s&&s.length>0&&(e.DependantOn=s[0].SysColumnName.toString())):2==parseInt(t.dependanton.toString())?e.DependantOn="AccountID":3==parseInt(t.dependanton.toString())?e.DependantOn="ProductID":83==parseInt(t.dependanton.toString())&&(e.DependantOn="CustomerID"),this.dsDocDesig.Columns[0].Contains("dependancy")&&!l.e.IsEmpty(t.dependancy)&&(e.Dependancy=parseInt(t.dependancy.toString())),this.dsDocDesig.Columns[0].Contains("filterinuse")&&!l.e.IsEmpty(t.filterinuse)&&(e.Dependantinuse=Object(o.j)(t.filterinuse.toString()))}this.SetProperty_DefaultValue(e),Logger.InfoLog("MonthlyPayrollViewModel::Exiting SetProperties_Custom()")}catch(s){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION SetProperties_Custom()\r\n"+s.Message+"\r\n"+s.stack)}}SetProperty_DefaultValue(t){try{if(Logger.InfoLog("MonthlyPayrollViewModel::Entering SetProperty_DefaultValue()"),t instanceof d.d)t.Text=t.DefaultValue;else if(t instanceof d.a)t.Text=t.DefaultValue;else if(t instanceof d.b)t.Password=t.DefaultValue;else if(t instanceof d.c)t.Text=t.DefaultValue;else if(t instanceof d.f)t.Text=t.DefaultValue;else if(t instanceof y.e)this.oCombo=t,this.oCombo.SelectedValue=l.e.IsEmpty(t.DefaultValue)?this.oCombo.Items.length>0?this.oCombo.Items[0].Value:"":t.DefaultValue;else if(t instanceof P.b)this.oPactCombo=t,50001==this.oPactCombo.CCID&&i.a.SessionManager.DivisionID>0?(t.DefaultValue=i.a.SessionManager.DivisionID.toString(),this.oPactCombo.SelectedValue=i.a.SessionManager.DivisionID):50002==this.oPactCombo.CCID&&i.a.SessionManager.LocationID>0?(t.DefaultValue=i.a.SessionManager.LocationID.toString(),this.oPactCombo.SelectedValue=i.a.SessionManager.LocationID):l.e.IsEmpty(t.DefaultValue)?this.oPactCombo.SelectedValue=0:""!=t.DefaultValue.Trim()&&(this.oPactCombo.SelectedValue=parseInt(t.DefaultValue));else if(t instanceof P.a)this.oHistory=t,this.oHistory.Clear(),50001==this.oHistory.CCID&&i.a.SessionManager.DivisionID>0?(t.DefaultValue=i.a.SessionManager.DivisionID.toString(),this.oHistory.SetValue_2(i.a.SessionManager.DivisionID,i.a.SessionManager.DivisionName)):50002==this.oHistory.CCID&&i.a.SessionManager.LocationID>0?(t.DefaultValue=i.a.SessionManager.LocationID.toString(),this.oHistory.SetValue_2(i.a.SessionManager.LocationID,i.a.SessionManager.LocationName)):l.e.IsEmpty(t.DefaultValue)?this.oHistory.SetValue(0):""!=t.DefaultValue.Trim()&&this.oHistory.SetValue(parseInt(t.DefaultValue));else if(t instanceof D.c)t.Date=l.e.IsEmpty(t.DefaultValue)||"today"!=t.DefaultValue.toLowerCase()?!l.e.IsEmpty(t.DefaultValue)&&l.e.isValidDate(t.DefaultValue)?new Date(t.DefaultValue):null:new Date;else if(t instanceof D.b){let e=new Date;!l.e.IsEmpty(t.DefaultValue)&&l.e.isValidDate(t.DefaultValue)?(e=new Date(t.DefaultValue),t.Date=new Date(1900,1,1,e.getHours(),e.getMonth(),e.getSeconds(),e.getMilliseconds())):t.Date=new Date(1900,1,1,e.getHours(),e.getMonth(),e.getSeconds(),e.getMilliseconds())}else t instanceof D.a?t.Date=!l.e.IsEmpty(t.DefaultValue)&&l.e.isValidDate(t.DefaultValue)?new Date(t.DefaultValue):new Date:t instanceof u.a?t.Text=t.DefaultValue:t instanceof p.b?"VacDaysPerMonth"!=t.DBColumnName&&(t.ExchangeRate.Text=t.DefaultValue,t.Currency.SelectedValue="1"):t instanceof d.f&&(t.Text=t.DefaultValue,t.Items.length>0&&(t.SelectedValue=t.Items[0].Value));Logger.InfoLog("MonthlyPayrollViewModel::Exiting SetProperty_DefaultValue()")}catch(e){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION SetProperty_DefaultValue()\r\n"+e.Message+"\r\n"+e.stack)}}FilterEmployees(){let t="";try{Logger.InfoLog("MonthlyPayrollViewModel::Entering FilterEmployees()"),t=" ( a.StatusID=250 AND ISNULL(CONVERT(DATETIME,a.DORelieve),'01-Jan-9000')>='"+i.a.SessionManager.PayrollMonthStart.ToString("dd MMM yyyy")+"' AND CONVERT(DATETIME,a.DOJ)<='"+i.a.SessionManager.PayrollMonthEnd.ToString("dd MMM yyyy")+"' ) ","True"==i.a.SessionManager.Preferences.NPDontAllowPayrollProcessing&&(t+=" AND a.NodeID NOT IN ( Select NodeID From COM_CC50051 WITH(NOLOCK) ",t+="     Where ResignStatus='Posted' AND DateDiff(day,ISNULL(CONVERT(DATETIME,DORelieve),'01-Jan-9000'),'"+i.a.SessionManager.PayrollMonthStart.ToString("dd MMM yyyy")+"')<=0",t+="     AND DateDiff(day,CONVERT(DATETIME,CONVERT(DATETIME,('01-'+CONVERT(NVARCHAR(3),DATENAME(MONTH,ISNULL(CONVERT(DATETIME,DOResign),'01-Jan-9000')))+'-'+CONVERT(NVARCHAR,YEAR(ISNULL(CONVERT(DATETIME,DOResign),'01-Jan-9000'))))) ),'"+i.a.SessionManager.PayrollMonthStart.ToString("dd MMM yyyy")+"')>=0 )"),"True"==i.a.SessionManager.Preferences.DontConsiderEmpsForPayroll&&parseInt(i.a.SessionManager.Preferences.DontConsiderEmpsForPayrollDays)>0&&(t+=" AND NOT ( MONTH(CONVERT(DATETIME,a.DOJ))="+i.a.SessionManager.PayrollMonth.getMonth()+" AND YEAR(CONVERT(DATETIME,a.DOJ))="+i.a.SessionManager.PayrollMonth.getFullYear()+" AND DAY(CONVERT(DATETIME,a.DOJ))>="+parseInt(i.a.SessionManager.Preferences.DontConsiderEmpsForPayrollDays)+" ) "),i.a.SessionManager.LocationID>0&&i.a.SessionManager.Preferences.ContainsKey("LocationWiseDimension")&&i.a.SessionManager.Preferences.LocationWiseDimension.split(",").Contains("50051")&&(t=t+" AND a.NodeID IN ( Select NodeID From Com_CCCCData with(nolock) where CostCenterID=50051 and CCNID2="+i.a.SessionManager.LocationID+")"),l.e.IsEmpty(i.a.SessionManager.sWHEmpFilteredEmpSeqNos)||(t+="  AND a.NodeID IN ("+i.a.SessionManager.sWHEmpFilteredEmpSeqNos+")"),Logger.InfoLog("MonthlyPayrollViewModel::Exiting FilterEmployees()")}catch(e){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION FilterEmployees()\r\n"+e.Message+"\r\n"+e.stack)}return t}OnPreviewKeyDown(t,e){return!1}AddGrids(){try{Logger.InfoLog("MonthlyPayrollViewModel::Entering LoadGrids()");let t,e=new C.a;this.dgvDays=new c.a,this.dgvDays.BeginEdit.Subscribe(this,"dgvDays_BeginEdit"),this.dgvDays.CellEditEnding.Subscribe(this,"dgvDays_EndEdit"),this.dgvDays.Columns=[],this.dgvDays.Width="",this.dgvDays.Height=220,this.dgvDays.AllowReorderColumns=!1,this.dgvDays.CanUserResizeColumns=!1,this.dgvDays.CanUserSortColumns=!1,e=new C.a,e.Header=i.a.GetResource("Particulars"),e.DisplayMember="Particulars",e.ID="Particulars",e.Width=110,e.ReadOnly=!0,this.dgvDays.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Days"),e.DisplayMember="Days",e.ID="Days",e.Width=50,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="1",this.dgvDays.Columns.push(e),this.dgvDays.Clear(),this.dgvDays.TableColumns.push("ColumnName"),this.dgvDays.TableColumns.push("Particulars"),this.dgvDays.TableColumns.push("Days"),this.dgvDays.TableColumns.push("IsEditable"),this.dgvDays.TableColumns.push("IsVisible"),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha4",t.Particulars="Month Days",t.Days="0.0",t.IsEditable="0",this.dgvDays.addRow(t),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha5",t.Particulars="Days Attended",t.Days="0.0",t.IsEditable="1",this.dgvDays.addRow(t),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha24",t.Particulars="Paid Leaves",t.Days="0.0",t.IsEditable="0",this.dgvDays.addRow(t),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha6",t.Particulars="Total Leaves",t.Days="0.0",t.IsEditable="0",this.dgvDays.addRow(t),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha7",t.Particulars="Weekly Offs",t.Days="0.0",t.IsEditable="0",this.dgvDays.addRow(t),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha8",t.Particulars="Holidays",t.Days="0.0",t.IsEditable="0",this.dgvDays.addRow(t),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha9",t.Particulars="Absent(LOP)",t.Days="0.0",t.IsEditable="1",this.dgvDays.addRow(t),t=this.dgvDays.NewRow(),t.ColumnName="dcAlpha10",t.Particulars="Unpaid Days",t.Days="0.0",t.IsEditable="0",this.dgvDays.addRow(t),this.dgvDays.Columns[1].footer="0.0",this.dgvDays.UpdateFooter(),this.dgvEarOTs=new c.a,this.dgvEarOTs.BeginEdit.Subscribe(this,"dgvEarOTs_BeginEdit"),this.dgvEarOTs.CellEditEnding.Subscribe(this,"dgvEarOTs_EndEdit"),this.dgvEarOTs.Columns=[],this.dgvEarOTs.Width="",this.dgvEarOTs.Height=220,this.dgvEarOTs.AllowReorderColumns=!1,this.dgvEarOTs.CanUserResizeColumns=!1,this.dgvEarOTs.CanUserSortColumns=!1,e=new C.a,e.Header=i.a.GetResource("OT"),e.DisplayMember="OT",e.ID="OT",e.Width=60,e.ReadOnly=!0,this.dgvEarOTs.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Hours"),e.DisplayMember="Hours",e.ID="Hours",e.Width=50,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="2",this.dgvEarOTs.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("PayAmount"),e.DisplayMember="Amount",e.ID="Amount",e.Width=70,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvEarOTs.Columns.push(e),this.dgvEarOTs.Clear(),this.dgvEarOTs.TableColumns.push("OT"),this.dgvEarOTs.TableColumns.push("Hours"),this.dgvEarOTs.TableColumns.push("Amount"),this.dgvEarOTs.TableColumns.push("EarAddToNet"),this.dgvEarOTs.TableColumns.push("EarFType"),this.dgvEarOTs.TableColumns.push("EarSNo"),this.dgvEarOTs.TableColumns.push("EarFormula"),this.dgvEarOTs.TableColumns.push("IsEditable"),this.dgvEarOTs.TableColumns.push("ComponentID"),this.dgvEarOTs.TableColumns.push("IsVisible");for(let i=0;i<5;i++)t=this.dgvEarOTs.NewRow(),this.dgvEarOTs.addRow(t);this.dgvEarOTs.Columns[1].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals2),this.dgvEarOTs.Columns[2].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarOTs.UpdateFooter(),this.dgvDedNetSal=new c.a,this.dgvDedNetSal.Visible=!1,this.dgvDedNetSal.Columns=[],this.dgvDedNetSal.Width="",this.dgvDedNetSal.Height=220,this.dgvDedNetSal.AllowReorderColumns=!1,this.dgvDedNetSal.CanUserResizeColumns=!1,this.dgvDedNetSal.CanUserSortColumns=!1,e=new C.a,e.Header=i.a.GetResource("Particulars"),e.DisplayMember="Particulars",e.ID="Particulars",e.Width=120,e.ReadOnly=!0,this.dgvDedNetSal.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("PayAmount"),e.DisplayMember="Amount",e.ID="Amount",e.Width=50,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="2",this.dgvDedNetSal.Columns.push(e),this.dgvDedNetSal.Clear(),this.dgvDedNetSal.TableColumns.push("Particulars"),this.dgvDedNetSal.TableColumns.push("Amount");let s,a=this.dgvDedNetSal.NewRow();this.dgvDedNetSal.addRow(a),this.dgvEarnings=new c.a,this.dgvEarnings.BeginEdit.Subscribe(this,"dgvEarnings_BeginEdit"),this.dgvEarnings.CellEditEnding.Subscribe(this,"dgvEarnings_EndEdit"),this.dgvEarnings.Columns=[],this.dgvEarnings.Width="",this.dgvEarnings.Height=300,this.dgvEarnings.AllowReorderColumns=!1,this.dgvEarnings.CanUserResizeColumns=!1,this.dgvEarnings.CanUserSortColumns=!1,e=new C.a,e.Header="#",e.DisplayMember="SlNo",e.ID="SlNo",e.Width=45,e.ReadOnly=!0,this.dgvEarnings.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Earnings"),e.DisplayMember="Earnings",e.ID="Earnings",e.Width=150,e.ReadOnly=!0,this.dgvEarnings.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Actual"),e.DisplayMember="Actual",e.ID="Actual",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvEarnings.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Earned"),e.DisplayMember="Earned",e.ID="Earned",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvEarnings.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Arrears"),e.DisplayMember="Arrears",e.ID="Arrears",e.Width=100,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvEarnings.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Adjustments"),e.DisplayMember="Adjustments",e.ID="Adjustments",e.Width=100,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvEarnings.Columns.push(e),e=new C.a,e.CostCenterID=44,e.TypeID=120,e.DataType="LISTBOX",e.DisplayMember="EarDedType",e.ValueMember="EarDedTypeID",e.Header="Earning Type",e.Width=100,e.IsVisible=!(!i.a.SessionManager.Preferences.ContainsKey("ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll")||"True"!=i.a.SessionManager.Preferences.ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll),this.dgvEarnings.Columns.push(e),this.dgvEarnings.Clear(),this.dgvEarnings.TableColumns.push("SlNo"),this.dgvEarnings.TableColumns.push("Earnings"),this.dgvEarnings.TableColumns.push("Actual"),this.dgvEarnings.TableColumns.push("Earned"),this.dgvEarnings.TableColumns.push("Arrears"),this.dgvEarnings.TableColumns.push("Adjustments"),this.dgvEarnings.TableColumns.push("EarAddToNet"),this.dgvEarnings.TableColumns.push("EarFType"),this.dgvEarnings.TableColumns.push("EarSNo"),this.dgvEarnings.TableColumns.push("EarFormula"),this.dgvEarnings.TableColumns.push("IsEditable"),this.dgvEarnings.TableColumns.push("Actual_GRAY"),this.dgvEarnings.TableColumns.push("Earned_GRAY"),this.dgvEarnings.TableColumns.push("Arrears_GRAY"),this.dgvEarnings.TableColumns.push("Adjustments_GRAY"),this.dgvEarnings.TableColumns.push("ComponentID"),this.dgvEarnings.TableColumns.push("IsVisible"),this.dgvEarnings.TableColumns.push("EarDedType"),this.dgvEarnings.TableColumns.push("EarDedTypeID"),this.dgvEarnings.TableColumns.push("IndexValue");for(let i=0;i<20;i++)t=this.dgvEarnings.NewRow(),t.SlNo=(i+1).toString(),this.dgvEarnings.addRow(t);this.dgvEarnings.Columns[2].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[3].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[4].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[5].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.UpdateFooter(),this.dgvDeductions=new c.a,this.dgvDeductions.BeginEdit.Subscribe(this,"dgvDeductions_BeginEdit"),this.dgvDeductions.CellEditEnding.Subscribe(this,"dgvDeductions_EndEdit"),this.dgvDeductions.Columns=[],this.dgvDeductions.Width="",this.dgvDeductions.Height=300,this.dgvDeductions.AllowReorderColumns=!1,this.dgvDeductions.CanUserResizeColumns=!1,this.dgvDeductions.CanUserSortColumns=!1,e=new C.a,e.Header="#",e.DisplayMember="SlNo",e.ID="SlNo",e.Width=45,e.ReadOnly=!0,this.dgvDeductions.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Deductions"),e.DisplayMember="Deductions",e.ID="Deductions",e.Width=150,e.ReadOnly=!0,this.dgvDeductions.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Actual"),e.DisplayMember="Actual",e.ID="Actual",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvDeductions.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Deducted"),e.DisplayMember="Deducted",e.ID="Deducted",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvDeductions.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Arrears"),e.DisplayMember="Arrears",e.ID="Arrears",e.Width=100,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvDeductions.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Adjustments"),e.DisplayMember="Adjustments",e.ID="Adjustments",e.Width=100,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvDeductions.Columns.push(e),e=new C.a,e.CostCenterID=44,e.TypeID=121,e.DataType="LISTBOX",e.DisplayMember="EarDedType",e.ValueMember="EarDedTypeID",e.Header="Deduction Type",e.Width=100,e.IsVisible=!(!i.a.SessionManager.Preferences.ContainsKey("ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll")||"True"!=i.a.SessionManager.Preferences.ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll),this.dgvDeductions.Columns.push(e),this.dgvDeductions.Clear(),this.dgvDeductions.TableColumns.push("SlNo"),this.dgvDeductions.TableColumns.push("Deductions"),this.dgvDeductions.TableColumns.push("Actual"),this.dgvDeductions.TableColumns.push("Deducted"),this.dgvDeductions.TableColumns.push("Arrears"),this.dgvDeductions.TableColumns.push("Adjustments"),this.dgvDeductions.TableColumns.push("DedAddToNet"),this.dgvDeductions.TableColumns.push("DedFType"),this.dgvDeductions.TableColumns.push("DedSNo"),this.dgvDeductions.TableColumns.push("DedFormula"),this.dgvDeductions.TableColumns.push("IsEditable"),this.dgvDeductions.TableColumns.push("Actual_GRAY"),this.dgvDeductions.TableColumns.push("Deducted_GRAY"),this.dgvDeductions.TableColumns.push("Arrears_GRAY"),this.dgvDeductions.TableColumns.push("Adjustments_GRAY"),this.dgvDeductions.TableColumns.push("ComponentID"),this.dgvDeductions.TableColumns.push("IsVisible"),this.dgvDeductions.TableColumns.push("EarDedType"),this.dgvDeductions.TableColumns.push("EarDedTypeID"),this.dgvDeductions.TableColumns.push("IndexValue");for(let i=0;i<20;i++)t=this.dgvDeductions.NewRow(),t.SlNo=(i+1).toString(),this.dgvDeductions.addRow(t);this.dgvDeductions.Columns[2].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[3].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[4].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[5].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.UpdateFooter(),this.dgvLoans=new c.a,this.dgvLoans.DoubleClick.Subscribe(this,"dgvLoans_CellDoubleClick"),this.dgvLoans.Columns=[],this.dgvLoans.Width="700px",this.dgvLoans.Height=300,this.dgvLoans.AllowReorderColumns=!1,this.dgvLoans.CanUserResizeColumns=!1,this.dgvLoans.CanUserSortColumns=!1,e=new C.a,e.Header="#",e.DisplayMember="SlNo",e.ID="SlNo",e.Width=45,e.ReadOnly=!0,this.dgvLoans.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Loans"),e.DisplayMember="Loans",e.ID="Loans",e.Width=150,e.ReadOnly=!0,this.dgvLoans.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("LoanDocNo"),e.DisplayMember="LoanDocNo",e.ID="LoanDocNo",e.Width=100,e.DataType="LINK",e.Click.Subscribe(this,"onLoanClick"),e.ReadOnly=!0,this.dgvLoans.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("BalanceAmount"),e.DisplayMember="BalAmt",e.ID="BalAmt",e.Width=120,e.ReadOnly=!0,e.DataType="FLOAT",e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvLoans.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("InstallmentAmount"),e.DisplayMember="InstAmt",e.ID="InstAmt",e.Width=150,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvLoans.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("InstallmentNo"),e.DisplayMember="InstNo",e.ID="InstNo",e.Width=100,e.ReadOnly=!0,this.dgvLoans.Columns.push(e),this.dgvLoans.Clear(),this.dgvLoans.TableColumns.push("SlNo"),this.dgvLoans.TableColumns.push("Loans"),this.dgvLoans.TableColumns.push("LoanDocNo"),this.dgvLoans.TableColumns.push("BalAmt"),this.dgvLoans.TableColumns.push("InstAmt"),this.dgvLoans.TableColumns.push("InstNo"),this.dgvLoans.TableColumns.push("LoanSNo"),this.dgvLoans.TableColumns.push("ApprovedAmt"),this.dgvLoans.TableColumns.push("ActInstNo"),this.dgvLoans.TableColumns.push("PayStatus"),this.dgvLoans.TableColumns.push("ActInstAmt"),this.dgvLoans.TableColumns.push("InvDocDetailsID"),this.dgvLoans.TableColumns.push("IsEditable"),this.dgvLoans.TableColumns.push("ComponentID"),this.dgvLoans.TableColumns.push("IsVisible"),this.dgvLoans.TableColumns.push("NodeNo"),this.dgvLoans.TableColumns.push("IndexValue"),this.dgvLoans.Columns[4].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvLoans.UpdateFooter(),this.dgvLeaves=new c.a,this.dgvLeaves.Columns=[],this.dgvLeaves.Width="",this.dgvLeaves.Height=300,this.dgvLeaves.AllowReorderColumns=!1,this.dgvLeaves.CanUserResizeColumns=!1,this.dgvLeaves.CanUserSortColumns=!1,e=new C.a,e.Header="#",e.DisplayMember="SlNo",e.ID="SlNo",e.Width=45,e.ReadOnly=!0,this.dgvLeaves.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Pay_Leaves"),e.DisplayMember="Leaves",e.ID="Leaves",e.Width=150,e.ReadOnly=!0,this.dgvLeaves.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("OpeningBalance"),e.DisplayMember="TotOPBal",e.ID="TotOPBal",e.Width=120,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="2",this.dgvLeaves.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("TakeninthisMonth"),e.DisplayMember="LeavesTaken",e.ID="LeavesTaken",e.Width=150,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="2",this.dgvLeaves.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("NetBalance"),e.DisplayMember="NetBal",e.ID="NetBal",e.Width=100,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="2",this.dgvLeaves.Columns.push(e),this.dgvLeaves.Clear(),this.dgvLeaves.TableColumns.push("SlNo"),this.dgvLeaves.TableColumns.push("Leaves"),this.dgvLeaves.TableColumns.push("TotOPBal"),this.dgvLeaves.TableColumns.push("MonOPBal"),this.dgvLeaves.TableColumns.push("LeavesTaken"),this.dgvLeaves.TableColumns.push("NetBal"),this.dgvLeaves.TableColumns.push("LeaveSNo"),this.dgvLeaves.TableColumns.push("IsEditable"),this.dgvLeaves.TableColumns.push("ComponentID"),this.dgvLeaves.TableColumns.push("IsVisible"),this.dgvLeaves.TableColumns.push("IndexValue"),this.dgvLeaves.Columns[2].footer=(0).ToString("0.00"),this.dgvLeaves.Columns[3].footer=(0).ToString("0.00"),this.dgvLeaves.Columns[4].footer=(0).ToString("0.00"),this.dgvLeaves.UpdateFooter(),this.dgvAccruals=new c.a,this.dgvAccruals.OnBeginEdit.Subscribe(this,"dgvAccruals_BeginEdit"),this.dgvAccruals.OnCellEditEnding.Subscribe(this,"dgvAccruals_EndEdit"),this.dgvAccruals.Columns=[],this.dgvAccruals.Width="",this.dgvAccruals.Height=300,this.dgvAccruals.AllowReorderColumns=!1,this.dgvAccruals.CanUserResizeColumns=!1,this.dgvAccruals.CanUserSortColumns=!1,e=new C.a,e.Header="#",e.DisplayMember="SlNo",e.ID="SlNo",e.Width=45,e.ReadOnly=!0,this.dgvAccruals.Columns.push(e),e=new C.a,e.Header="Accrual Type",e.DisplayMember="Earnings",e.ID="Earnings",e.Width=150,e.ReadOnly=!0,this.dgvAccruals.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Actual"),e.DisplayMember="Actual",e.ID="Actual",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvAccruals.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Earned"),e.DisplayMember="Earned",e.ID="Earned",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvAccruals.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Arrears"),e.DisplayMember="Arrears",e.ID="Arrears",e.Width=100,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvAccruals.Columns.push(e),e=new C.a,e.Header=i.a.GetResource("Adjustments"),e.DisplayMember="Adjustments",e.ID="Adjustments",e.Width=100,e.ReadOnly=!0,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints=i.a.SessionManager.Preferences.DecimalsinAmount,this.dgvAccruals.Columns.push(e),e=new C.a,e.CostCenterID=44,e.TypeID=120,e.DataType="LISTBOX",e.DisplayMember="EarDedType",e.ValueMember="EarDedTypeID",e.Header="Earning Type",e.Width=100,e.IsVisible=!(!i.a.SessionManager.Preferences.ContainsKey("ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll")||"True"!=i.a.SessionManager.Preferences.ShowEarngDeductionTypeLookUpFldsInMnthlyPayroll),this.dgvAccruals.Columns.push(e),this.dgvAccruals.Table=[],this.dgvAccruals.TableColumns.push("SlNo"),this.dgvAccruals.TableColumns.push("Earnings"),this.dgvAccruals.TableColumns.push("Actual"),this.dgvAccruals.TableColumns.push("Earned"),this.dgvAccruals.TableColumns.push("Arrears"),this.dgvAccruals.TableColumns.push("Adjustments"),this.dgvAccruals.TableColumns.push("EarAddToNet"),this.dgvAccruals.TableColumns.push("EarFType"),this.dgvAccruals.TableColumns.push("EarSNo"),this.dgvAccruals.TableColumns.push("EarFormula"),this.dgvAccruals.TableColumns.push("IsEditable"),this.dgvAccruals.TableColumns.push("Actual_GRAY"),this.dgvAccruals.TableColumns.push("Earned_GRAY"),this.dgvAccruals.TableColumns.push("Arrears_GRAY"),this.dgvAccruals.TableColumns.push("Adjustments_GRAY"),this.dgvAccruals.TableColumns.push("ComponentID"),this.dgvAccruals.TableColumns.push("IsVisible"),this.dgvAccruals.TableColumns.push("EarDedType"),this.dgvAccruals.TableColumns.push("EarDedTypeID"),this.dgvAccruals.TableColumns.push("IndexValue");for(let i=0;i<20;i++)t=this.dgvAccruals.NewRow(),t.SlNo=(i+1).toString(),this.dgvAccruals.addRow(t);this.dgvDays.OnPreviewKeyDown.Subscribe(this,"OnPreviewKeyDown"),this.dgvEarnings.OnPreviewKeyDown.Subscribe(this,"OnPreviewKeyDown"),this.dgvEarOTs.OnPreviewKeyDown.Subscribe(this,"OnPreviewKeyDown"),this.dgvDeductions.OnPreviewKeyDown.Subscribe(this,"OnPreviewKeyDown"),this.dgvLoans.OnPreviewKeyDown.Subscribe(this,"OnPreviewKeyDown"),this.dgvLeaves.OnPreviewKeyDown.Subscribe(this,"OnPreviewKeyDown"),s=new n.b,s.Name="General",s.Header=i.a.GetResource("General"),this.CustomTab.Pages.push(s),this.dgvEarnings.Row=0,this.dgvEarnings.Column=0,this.dgvEarnings.ColumnSpan=2,this.CustomTab.Pages[0].Fields.push(this.dgvEarnings),this.dgvDeductions.Row=0,this.dgvDeductions.Column=2,this.dgvDeductions.ColumnSpan=2,this.CustomTab.Pages[0].Fields.push(this.dgvDeductions),s=new n.b,s.Name="Loans",s.Header=i.a.GetResource("Loans"),this.CustomTab.Pages.push(s),this.dgvLoans.Row=0,this.dgvLoans.Column=0,this.dgvLoans.ColumnSpan=2,this.CustomTab.Pages[1].Fields.push(this.dgvLoans),s=new n.b,s.Name="Leaves",s.Header=i.a.GetResource("Pay_Leaves"),this.CustomTab.Pages.push(s),this.dgvLeaves.Row=0,this.dgvLeaves.Column=0,this.dgvLeaves.ColumnSpan=2,this.CustomTab.Pages[2].Fields.push(this.dgvLeaves),s=new n.b,s.Name="Accruals",s.Header=i.a.GetResource("Accruals"),s.Visible=!1,this.CustomTab.Pages.push(s),this.dgvAccruals.Row=0,this.dgvAccruals.Column=0,this.dgvAccruals.ColumnSpan=2,this.CustomTab.Pages[3].Fields.push(this.dgvAccruals),Logger.InfoLog("MonthlyPayrollViewModel::Exiting LoadGrids()")}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION LoadGrids()\r\n"+t.Message+"\r\n"+t.stack)}}dgvLoans_CellDoubleClick(t,e,s){if(null!=t&&!l.e.IsEmpty(t.LoanDocNo)){let e=[];e.push(this),e.push(parseInt(t.PayStatus)),e.push(parseFloat(t.InstAmt)),e.push(parseFloat(t.ActInstAmt)),e.push(parseFloat(t.BalAmt)),e.push(this.SelectedEmpID),e.push(parseInt(t.LoanSNo)),e.push(t.Loans.toString()),e.push(t.LoanDocNo.toString());let s=new R(e);i.a.page.ShowDialog(s,x.a,{ShowCenter:!0,Title:"Change Loan Payment"}).subscribe(()=>{s.DialogResult&&(t.PayStatus=s.LoanPayType,0==s.LoanPayType?t.InstAmt=parseFloat(t.ActInstAmt).ToString(i.a.SessionManager.sPayrollDecimals):1==s.LoanPayType?t.InstAmt=s.Amount.ToString(i.a.SessionManager.sPayrollDecimals):(2==s.LoanPayType||3==s.LoanPayType)&&(t.InstAmt=0),this.dgvLoans.updateRow(t),this.objCPField=this.oCMP.arrLstCPFields[0][4].find(e=>e.SNo==parseInt(t.LoanSNo)),this.objCPField.LoanPayStatus=t.PayStatus.toString(),this.objCPField.LoanInstAmt=t.InstAmt.toString(),this.objCPField.dEarned=t.InstAmt.toString(),this.oCMP.iEmpIndex=0,this.oCMP.ExecuteAllFormulas(),this.FillProcessedData())})}}EmployeeList_LostFocus(t){if("UnProcessed"==this.sProcessType||"NoticePay"==this.sProcessType||this.SelectedEmpID!=this.EmployeeList.Code.SelectedValue)try{if(Logger.InfoLog("MonthlyPayrollViewModel::Entering EmployeeList_SelectedValueChanged()"),this.DisplayMessage="",this.ClearControls(),this.SelectedEmpID=this.EmployeeList.Code.SelectedValue,this.SelectedEmpID>0){this.DisplayMessage="Loading data, Please wait....",this.MessageVisibility=!0,this.MsgVisibility=!0,this.GetLinkReferenceData(32316,40054,this.SelectedEmpID),this.drc=this.dsDocDesig.Tables[0].filter(t=>"CreditAccount"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&null!=this.drc[0].UserDefaultValue&&""!=this.drc[0].UserDefaultValue.toString().Trim()&&(this.sCrAccount=this.drc[0].UserDefaultValue.toString()),this.drc=this.dsDocDesig.Tables[0].filter(t=>"DebitAccount"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&null!=this.drc[0].UserDefaultValue&&""!=this.drc[0].UserDefaultValue.toString().Trim()&&(this.sDrAccount=this.drc[0].UserDefaultValue.toString());try{if(this.oCMP=new f.a,this.oCMP.oParent=this,this.oCMP.sSelectedEmpSeqNos=this.SelectedEmpID.toString(),this.oCMP.PayrollMonth=i.a.SessionManager.PayrollMonth,this.oCMP.PayrollMonthStart=i.a.SessionManager.PayrollMonthStart,this.oCMP.PayrollMonthEnd=i.a.SessionManager.PayrollMonthEnd,this.oCMP.ProcessPayroll(),this.oCMP.IsCompleted){if(this.oCMP.arrLstOthMPFields[0].sErrorMessage.length>0)return this.DisplayMessage=this.oCMP.arrLstOthMPFields[0].sErrorMessage.Replace("NumFields",""),this.MsgVisibility=!1,void(this.MessageVisibility=!0);let t;if(null==this.dtArrData&&(this.dtArrData=[]),this.dtArrData=[],this.sArrCalcMonthPaydays="",this.sArrsCalcMonths="",null!=this.oCMP.arrLstOthMPFields[0].drcArrears&&this.oCMP.arrLstOthMPFields[0].drcArrears.length>0)for(let a=0;a<this.oCMP.arrLstOthMPFields[0].drcArrears.length;a++)this.sArrCalcMonthPaydays.length>0&&(this.sArrCalcMonthPaydays+=";"),this.sArrCalcMonthPaydays+=this.oCMP.arrLstOthMPFields[0].drcArrears[a].ArrCalcMonthPayDays,this.sArrsCalcMonths.length>0&&(this.sArrsCalcMonths+=";"),this.sArrsCalcMonths+=new Date(this.oCMP.arrLstOthMPFields[0].drcArrears[a].ArrearsCalcMonths).ToString("dd/MMM/yyyy"),t={},t.PayrollMonth=new Date(this.oCMP.arrLstOthMPFields[0].drcArrears[a].ArrearsCalcMonths).ToString("dd/MMM/yyyy"),this.dtArrData.push(t);if(null!=this.dtArrData&&this.dtArrData.length>0){let t=i.a.empService.GetQueryData(this.SelectedEmpID,"MPL012","","","");for(let e=0;e<this.dtArrData.length;e++){let s=new Date(this.dtArrData[e].PayrollMonth);if(null!=t&&t.length>0){let e=t.filter(t=>t.ArrAdjMonth==s);if(null!=e&&e.length>0){for(let t=0;t<this.oCMP.arrLstCPFields[0][0].length;t++)null!=e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo]&&null!=e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo]&&""!=e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo].toString()&&(this.oCMP.arrLstCPFields[0][0][t].ArrData+=s.ToString("dd MMM yyyy")+","+parseFloat(e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo])+",");for(let t=0;t<this.oCMP.arrLstCPFields[0][2].length;t++)null!=e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo]&&null!=e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo]&&""!=e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo].toString()&&(this.oCMP.arrLstCPFields[0][2][t].ArrData+=s.ToString("dd MMM yyyy")+","+parseFloat(e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo])+",")}}}}if(null==this.dtAdjData&&(this.dtAdjData=[]),this.dtAdjData=[],this.sAdjCalcMonthPaydays="",this.sAdjsCalcMonths="",this.oCMP.arrLstOthMPFields[0].drcAdjustments.length>0)for(let a=0;a<this.oCMP.arrLstOthMPFields[0].drcAdjustments.length;a++)this.sAdjCalcMonthPaydays.length>0&&(this.sAdjCalcMonthPaydays+=";"),this.sAdjCalcMonthPaydays+=this.oCMP.arrLstOthMPFields[0].drcAdjustments[a].Days,this.sAdjsCalcMonths.length>0&&(this.sAdjsCalcMonths+=";"),this.sAdjsCalcMonths+=new Date(this.oCMP.arrLstOthMPFields[0].drcAdjustments[a].AdjMonth).ToString("dd/MMM/yyyy"),t={},t.PayrollMonth=new Date(this.oCMP.arrLstOthMPFields[0].drcAdjustments[a].PayrollMonth).ToString("dd/MMM/yyyy"),t.AdjMonth=new Date(this.oCMP.arrLstOthMPFields[0].drcAdjustments[a].AdjMonth).ToString("dd/MMM/yyyy"),t.Days=this.oCMP.arrLstOthMPFields[0].drcAdjustments[a].Days.toString(),t.Remarks=this.oCMP.arrLstOthMPFields[0].drcAdjustments[a].Remarks.toString(),this.dtAdjData.push(t);if(null!=this.dtAdjData&&this.dtAdjData.length>0){let t=i.a.empService.GetQueryData(this.SelectedEmpID,"MPL013","","","");for(let e=0;e<this.dtAdjData.length;e++){let s=new Date(this.dtAdjData.Rows[e].AdjMonth);if(null!=t&&t.length>0){let e=t.filter(t=>t.ArrAdjMonth==s);if(null!=e&&e.length>0){for(let t=0;t<this.oCMP.arrLstCPFields[0][0].length;t++)null!=e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo]&&null!=e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo]&&""!=e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo].toString()&&(this.oCMP.arrLstCPFields[0][0][t].AdjData+=s.ToString("dd MMM yyyy")+","+parseFloat(e[0]["Earning"+this.oCMP.arrLstCPFields[0][0][t].SNo])+",");for(let t=0;t<this.oCMP.arrLstCPFields[0][2].length;t++)null!=e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo]&&null!=e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo]&&""!=e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo].toString()&&(this.oCMP.arrLstCPFields[0][2][t].AdjData+=s.ToString("dd MMM yyyy")+","+parseFloat(e[0]["Deduction"+this.oCMP.arrLstCPFields[0][2][t].SNo])+",")}}}}if(null==this.dtDSData&&(this.dtDSData=[]),this.dtDSData=[],this.oCMP.arrLstOthMPFields[0].drcDues.length>0)for(let a=0;a<this.oCMP.arrLstOthMPFields[0].drcDues.length;a++)t={},t.FieldType="2"==l.e.String(this.oCMP.arrLstOthMPFields[0].drcDues[a].FieldType)?"Earning":"Deduction",t.ComponentID=this.oCMP.arrLstOthMPFields[0].drcDues[a].ComponentID.toString(),t.PayrollMonth=new Date(this.oCMP.arrLstOthMPFields[0].drcDues[a].DuesPaidMonth).ToString("dd/MMM/yyyy"),t.Amount=parseFloat(this.oCMP.arrLstOthMPFields[0].drcDues[a].Amount),this.dtDSData.push(t);this.CalculateAccruals(),this.FillProcessedData(),this.MsgVisibility=!1,this.ApproveVisibility=!1;let e=[],s="";if(this.oCMP.arrLstOthMPFields[0].IsAlreadyProcessed?!l.e.IsEmpty(this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].WorkFlowID)&&parseInt(this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].WorkFlowID)>0&&(s=this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].INVDocDetailsID.toString()+",54,'"+i.a.SessionManager.UserName+"',40054,"+this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].WorkFlowID.toString()+","+this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].WorkFlowLevel.toString()+","+this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].StatusID.toString()+","+this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].CreatedDate.toString()+","+i.a.SessionManager.UserID+","+i.a.SessionManager.RoleID,e=i.a.empService.GetQueryData(0,"MPL002",JSON.stringify(s),"",""),null!=e&&e.length>0&&(null!=e[0].CanApprove&&null!=e[0].CanApprove&&"TRUE"==e[0].CanApprove.toString().toUpperCase()?(this.ApproveVisibility=!0,this.PostVisiblility=!1):this.PostVisiblility=!(!i.a.SessionManager.IsActionAssigned(this.CostCenterID,"Edit Posted Docs")&&!i.a.SessionManager.IsActionAssigned(this.CostCenterID,"Edit Approved Docs")))):this.PostVisiblility=i.a.SessionManager.IsActionAssigned(this.CostCenterID,"Create"),this.oCMP.arrLstOthMPFields[0].IsAlreadyProcessed){if(this.DocStatus=this.oCMP.arrLstOthMPFields[0].DocStatus,this.DocID=this.oCMP.arrLstOthMPFields[0].DocID,this.DocNo=this.oCMP.arrLstOthMPFields[0].DocNo,null!=this.HeaderFields&&this.HeaderFields.length>0)for(let a=0;a<this.HeaderFields.length;a++)(this.HeaderFields[a].DBColumnName.startsWith("dcAlpha")||this.HeaderFields[a].DBColumnName.startsWith("dcCCNID"))&&this.FillControlValue(this.HeaderFields[a],l.e.String(this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0][this.HeaderFields[a].DBColumnName]));if(this.CustomTab.Pages.length>this.iStaticTabCnt)for(let a=this.iStaticTabCnt;a<this.CustomTab.Pages.length;a++)for(let t=0;t<this.CustomTab.Pages[a].Fields.length;t++)(this.CustomTab.Pages[a].Fields[t].DBColumnName.startsWith("dcAlpha")||this.CustomTab.Pages[a].Fields[t].DBColumnName.startsWith("dcCCNID"))&&this.FillControlValue(this.CustomTab.Pages[a].Fields[t],this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0][this.CustomTab.Pages[a].Fields[t].DBColumnName].toString());let t=i.a.empService.GetQueryData(this.CostCenterID,"MPL003",this.DocID,"","");this.WFDocLevelList.Clear();let e=null,s=null;if(e=t.Tables[1],s=t.Tables[0],null!=e&&e.length>0&&!i.a.SessionManager.IsActionAssigned(this.CostCenterID,"HideWorkflowLevels")){let t,a=parseInt(this.oCMP.arrLstOthMPFields[0].drcPayProcessed[0].WorkFlowLevel.toString());s.length>0&&(t=parseInt(s[s.length-1].StatusID));let l=s.length>0?parseInt(s[0].WorkFlowLevel)-1:0;for(let s=0;s<e.length;s++){let t=new g.a(parseInt(e[0].WID),parseInt(e[s].LEVELID),e[s].LEVELNAME.toString(),this.CostCenterID,this.DocID,i.a.SessionManager.PayrollMonth);s==l&&(t.IsPending=!0,t.Label="C"),0==s&&(t.LeftLineBrush="#FFFFFFFF"),s==e.length-1&&(t.RightLineBrush="#FFFFFFFF"),this.WFDocLevelList.push(t)}for(let e=s.length-1;e>=0;e--){let t=parseInt(s[e].WorkFlowLevel);if(t<=a&&t<=this.WFDocLevelList.length&&!this.WFDocLevelList[t-1].IsSet){this.WFDocLevelList[t-1].IsSet=!0,this.WFDocLevelList[t-1].ModifiedBy=s[e].Status.toString()+" By "+s[e].CreatedBy.toString(),s[e].FirstName.toString().length>0&&(this.WFDocLevelList[t-1].ModifiedBy+="("+s[e].FirstName.toString()+")");let a=new Date(s[e].Date);this.WFDocLevelList[t-1].ModifiedBy+=" On "+a.ToString(i.a.SessionManager.Preferences["Date Format"]);let l=parseInt(s[e].StatusID);372==l?this.WFDocLevelList[t-1].IsRejected=!0:441==l?this.WFDocLevelList[t-1].IsApproved=!0:369==l&&(this.WFDocLevelList[t-1].IsPending=!0,this.WFDocLevelList[t-1].Label=" P")}}}}else this.DocStatus="[UnPosted]",this.DocID=0,this.DocNo=""}}catch(e){this.MsgVisibility=!1,Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION EmployeeList_SelectedValueChanged()\r\n"+e.Message+"\r\n"+e.stack)}}Logger.InfoLog("MonthlyPayrollViewModel::Exiting EmployeeList_SelectedValueChanged()")}catch(e){this.MsgVisibility=!1,Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION EmployeeList_SelectedValueChanged()\r\n"+e.Message+"\r\n"+e.stack)}}CalculateAccruals(){if(new Date(this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[2][0].cEffectFrom).getFullYear()==i.a.SessionManager.PayrollMonth.getFullYear()&&new Date(this.oCMP.arrLstOthMPFields[0].dsAllEmpsData.Tables[2][0].cEffectFrom).iMonth()==i.a.SessionManager.PayrollMonth.iMonth()&&this.oCMP.lstAccrAccumulateSNos.length>0){let t="",e=0,s=0,a=0,l=0,o=0,r=0,n=0,d=0,h=0,c=-1;for(let i=0;i<this.oCMP.lstAccrAccumulateSNos.length;i++)t.length>0&&(t+=","),t+="ISNULL(dcNum"+this.oCMP.lstAccrAccumulateSNos[i]+",0) as dcNum"+this.oCMP.lstAccrAccumulateSNos[i]+",ISNULL(dcCalcNum"+this.oCMP.lstAccrAccumulateSNos[i]+",0) as dcCalcNum"+this.oCMP.lstAccrAccumulateSNos[i]+",ISNULL(dcCalcNumFC"+this.oCMP.lstAccrAccumulateSNos[i]+",0) as dcCalcNumFC"+this.oCMP.lstAccrAccumulateSNos[i];let g=i.a.empService.GetQueryData(0,"MPL008",JSON.stringify(t),new Date(i.a.SessionManager.PayrollMonth).ToString("dd MMM yyyy"),this.SelectedEmpID.toString());if(null!=g&&g.length>0){let t=0;for(let e=0;e<this.oCMP.arrLstCPFields[0][0].length;e++)if(this.oCMP.arrLstCPFields[0][0][e].IsAccrualType&&-9e3==this.oCMP.arrLstCPFields[0][0][e].MaxOTHrs){t=parseFloat(this.oCMP.arrLstCPFields[0][0][e].dActual);break}for(let D=0;D<this.oCMP.arrLstCPFields[0][0].length;D++)if(s=0,a=0,this.oCMP.arrLstCPFields[0][0][D].IsAccrualType&&"Accruals-AccumulateForPreviousYears"==this.oCMP.arrLstCPFields[0][0][D].Behaviour)if(c=this.oCMP.arrLstCPFields[0][0][D].SNo,e=parseFloat(this.oCMP.arrLstCPFields[0][0][D].dActual),-9001==this.oCMP.arrLstCPFields[0][0][D].MaxOTHrs)n=this.oCMP.arrLstOthMPFields[0].dVacDaysUptoLastMonth,r=parseFloat(g[g.length-1]["dcNum"+c]),h=parseFloat((e-r).ToString(i.a.SessionManager.sPayrollDecimals)),d=parseFloat((h/t).ToString(i.a.SessionManager.sPayrollDecimals)),this.oCMP.arrLstCPFields[0][0][D].dAdjusted=(n*d).ToString(i.a.SessionManager.sPayrollDecimals);else{for(let t=0;t<g.length;t++)o=parseFloat(g[t].TotalDays),l=parseFloat(g[t].DaysAttended)+parseFloat(g[t].PaidLeaves)+parseFloat(g[t].LOPDays),r=parseFloat(g[t]["dcCalcNum"+c]),n=parseFloat(g[t]["dcCalcNumFC"+c]),d=parseFloat((l/o*e).ToString(i.a.SessionManager.sPayrollDecimals)),h=parseFloat((d-r).ToString(i.a.SessionManager.sPayrollDecimals)),s+=parseFloat(h.ToString(i.a.SessionManager.sPayrollDecimals)),a+=n;this.oCMP.arrLstCPFields[0][0][D].dAdjusted=(s-a).ToString(i.a.SessionManager.sPayrollDecimals)}}}}FillProcessedData(){let t;if(this.dgvEarnings.Clear(),this.dgvAccruals.Clear(),this.Remarks.Text=this.oCMP.arrLstOthMPFields[0].sRemarks,this.oCMP.arrLstCPFields[0][0].length>0){for(let e=0;e<this.oCMP.arrLstCPFields[0][0].length;e++)this.oCMP.arrLstCPFields[0][0][e].IsAccrualType?(this.iAccruCnt++,t=this.dgvAccruals.NewRow(),t.SlNo=this.iAccruCnt.toString()):(this.iEarCnt++,t=this.dgvEarnings.NewRow(),t.SlNo=this.iEarCnt.toString()),t.Earnings=this.oCMP.arrLstCPFields[0][0][e].ComponentName,t.ComponentID=this.oCMP.arrLstCPFields[0][0][e].ComponentID,t.EarSNo=this.oCMP.arrLstCPFields[0][0][e].SNo,t.Actual=this.oCMP.arrLstCPFields[0][0][e].dActual,t.Earned=this.oCMP.arrLstCPFields[0][0][e].dEarned,t.Arrears=this.oCMP.arrLstCPFields[0][0][e].dArrear,t.Adjustments=this.oCMP.arrLstCPFields[0][0][e].dAdjusted,t.EarDedTypeID=this.oCMP.arrLstCPFields[0][0][e].sEarDedType,t.IsEditable=this.oCMP.arrLstCPFields[0][0][e].IsEditable,t.IsVisible=this.oCMP.arrLstCPFields[0][0][e].IsVisible,t.Actual_GRAY=this.oCMP.arrLstCPFields[0][0][e].IsReadOnly,t.Earned_GRAY=this.oCMP.arrLstCPFields[0][0][e].IsReadOnly,t.Arrears_GRAY=this.oCMP.arrLstCPFields[0][0][e].IsReadOnly,t.Adjustments_GRAY=this.oCMP.arrLstCPFields[0][0][e].IsReadOnly,t.IndexValue=-1,this.oCMP.arrLstCPFields[0][0][e].IsAccrualType?this.dgvAccruals.addRow(t):this.dgvEarnings.addRow(t);this.dgvEarnings.RefreshGrid=!0,this.dgvAccruals.RefreshGrid=!0}if(this.iAccruCnt>0&&(this.CustomTab.Pages[3].Visible=!0),this.dgvEarOTs.Clear(),this.oCMP.arrLstCPFields[0][1].length>0)for(let s=0;s<this.oCMP.arrLstCPFields[0][1].length;s++)t=this.dgvEarOTs.NewRow(),t.OT=this.oCMP.arrLstCPFields[0][1][s].ComponentName,t.ComponentID=this.oCMP.arrLstCPFields[0][1][s].ComponentID,t.EarSNo=this.oCMP.arrLstCPFields[0][1][s].SNo,t.Hours=this.oCMP.arrLstCPFields[0][1][s].dActual,t.Amount=this.oCMP.arrLstCPFields[0][1][s].dEarned,t.IsEditable=this.oCMP.arrLstCPFields[0][1][s].IsEditable,t.IsVisible=this.oCMP.arrLstCPFields[0][1][s].IsVisible,this.dgvEarOTs.addRow(t);if(this.dgvDeductions.Clear(),this.oCMP.arrLstCPFields[0][2].length>0){for(let e=0;e<this.oCMP.arrLstCPFields[0][2].length;e++)t=this.dgvDeductions.NewRow(),t.SlNo=(e+1).toString(),t.Deductions=this.oCMP.arrLstCPFields[0][2][e].ComponentName,t.ComponentID=this.oCMP.arrLstCPFields[0][2][e].ComponentID,t.DedSNo=this.oCMP.arrLstCPFields[0][2][e].SNo,t.Actual=this.oCMP.arrLstCPFields[0][2][e].dActual,t.Deducted=this.oCMP.arrLstCPFields[0][2][e].dEarned,t.Arrears=this.oCMP.arrLstCPFields[0][2][e].dArrear,t.Adjustments=this.oCMP.arrLstCPFields[0][2][e].dAdjusted,t.EarDedTypeID=this.oCMP.arrLstCPFields[0][2][e].sEarDedType,t.IsEditable=this.oCMP.arrLstCPFields[0][2][e].IsEditable,t.IsVisible=this.oCMP.arrLstCPFields[0][2][e].IsVisible,t.Actual_GRAY=this.oCMP.arrLstCPFields[0][2][e].IsReadOnly,t.Deducted_GRAY=this.oCMP.arrLstCPFields[0][2][e].IsReadOnly,t.Arrears_GRAY=this.oCMP.arrLstCPFields[0][2][e].IsReadOnly,t.Adjustments_GRAY=this.oCMP.arrLstCPFields[0][2][e].IsReadOnly,this.dgvDeductions.addRow(t);this.dgvDeductions.RefreshGrid=!0}if(this.dgvDedNetSal.Clear(),this.oCMP.arrLstOthMPFields[0].iExtLoansCnt=0,this.dgvLoans.Clear(),this.oCMP.arrLstCPFields[0][4].length>0)for(let s=0;s<this.oCMP.arrLstCPFields[0][4].length;s++)null!=this.oCMP.arrLstCPFields[0][4][s].LoanDocNo&&""!=this.oCMP.arrLstCPFields[0][4][s].LoanDocNo.Trim()&&(t=this.dgvLoans.NewRow(),t.SlNo=(s+1).toString(),t.Loans=this.oCMP.arrLstCPFields[0][4][s].ComponentName,t.ComponentID=this.oCMP.arrLstCPFields[0][4][s].ComponentID,t.LoanSNo=this.oCMP.arrLstCPFields[0][4][s].SNo,t.LoanDocNo=this.oCMP.arrLstCPFields[0][4][s].LoanDocNo,t.ApprovedAmt=this.oCMP.arrLstCPFields[0][4][s].LoanApprovedAmt,t.BalAmt=this.oCMP.arrLstCPFields[0][4][s].LoanBalAmt,t.ActInstAmt=this.oCMP.arrLstCPFields[0][4][s].LoanActInstAmt,t.InstAmt=this.oCMP.arrLstCPFields[0][4][s].LoanInstAmt,t.InstNo=this.oCMP.arrLstCPFields[0][4][s].LoanInstNo,t.ActInstNo=this.oCMP.arrLstCPFields[0][4][s].LoanActInstNo,t.PayStatus=this.oCMP.arrLstCPFields[0][4][s].LoanPayStatus,t.IsEditable=this.oCMP.arrLstCPFields[0][4][s].IsEditable,t.IsVisible=this.oCMP.arrLstCPFields[0][4][s].IsVisible,t.NodeNo=this.oCMP.arrLstCPFields[0][4][s].LoanNodeNo,this.dgvLoans.addRow(t),this.oCMP.arrLstOthMPFields[0].iExtLoansCnt++);if(this.dgvLoans.Tag=this.oCMP.arrLstOthMPFields[0].iExtLoansCnt,this.dgvLeaves.Clear(),this.oCMP.arrLstCPFields[0][5].length>0)for(let s=0;s<this.oCMP.arrLstCPFields[0][5].length;s++)t=this.dgvLeaves.NewRow(),t.SlNo=(s+1).toString(),t.Leaves=this.oCMP.arrLstCPFields[0][5][s].ComponentName,t.ComponentID=this.oCMP.arrLstCPFields[0][5][s].ComponentID,t.LeaveSNo=this.oCMP.arrLstCPFields[0][5][s].SNo,t.TotOPBal=this.oCMP.arrLstCPFields[0][5][s].LeaveTotOPBal,t.MonOPBal=this.oCMP.arrLstCPFields[0][5][s].LeaveMonOPBal,t.LeavesTaken=this.oCMP.arrLstCPFields[0][5][s].LeaveTaken,t.NetBal=this.oCMP.arrLstCPFields[0][5][s].LeaveNetBal,t.IsEditable=this.oCMP.arrLstCPFields[0][5][s].IsEditable,t.IsVisible=this.oCMP.arrLstCPFields[0][5][s].IsVisible,this.dgvLeaves.addRow(t);if(0==this.dgvEarnings.Table.length){let t=this.dgvEarnings.NewRow();this.dgvEarnings.addRow(t)}if(0==this.dgvAccruals.Table.length){let t=this.dgvAccruals.NewRow();this.dgvAccruals.addRow(t)}if(0==this.dgvEarOTs.Table.length){let t=this.dgvEarOTs.NewRow();this.dgvEarOTs.addRow(t)}if(0==this.dgvDeductions.Table.length){let t=this.dgvDeductions.NewRow();this.dgvDeductions.addRow(t)}if(0==this.dgvDedNetSal.Table.length){let t=this.dgvDedNetSal.NewRow();this.dgvDedNetSal.addRow(t)}if(0==this.dgvLeaves.Table.length){let t=this.dgvLeaves.NewRow();this.dgvLeaves.addRow(t)}if(0==this.dgvLoans.Table.length){let t=this.dgvLoans.NewRow();this.dgvLoans.addRow(t)}this.dgvDays.Table[1].Days=this.oCMP.arrLstOthMPFields[0].DaysAttended.ToString("0.0"),this.dgvDays.Table[2].Days=this.oCMP.arrLstOthMPFields[0].PaidLeaves.ToString("0.0"),this.dgvDays.Table[3].Days=this.oCMP.arrLstOthMPFields[0].TotalLeaves.ToString("0.0"),this.dgvDays.Table[4].Days=this.oCMP.arrLstOthMPFields[0].WeeklyOffs.ToString("0.0"),this.dgvDays.Table[5].Days=this.oCMP.arrLstOthMPFields[0].Holidays.ToString("0.0"),this.dgvDays.Table[6].Days=this.oCMP.arrLstOthMPFields[0].LOPDays.ToString("0.0"),this.dgvDays.Table[7].Days=this.oCMP.arrLstOthMPFields[0].UnpaidDays.ToString("0.0"),this.dgvDays.Columns[1].footer=this.oCMP.arrLstOthMPFields[0].TotalDays.ToString("0.0"),this.dgvDays.UpdateFooter();for(let s=0;s<this.dgvDays.Table.length;s++)this.dgvDays.updateRow(this.dgvDays.Table[s]);this.dgvEarnings.Columns[2].footer=this.oCMP.arrLstOthMPFields[0].totActEarnings.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[3].footer=this.oCMP.arrLstOthMPFields[0].totEarnings.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[4].footer=this.oCMP.arrLstOthMPFields[0].totEarArrears.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[5].footer=this.oCMP.arrLstOthMPFields[0].totEarAdjustments.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarOTs.Columns[1].footer=parseFloat(this.oCMP.arrLstOthMPFields[0].totOTHours).ToString(i.a.SessionManager.sPayrollDecimals2),this.dgvEarOTs.Columns[2].footer=this.oCMP.arrLstOthMPFields[0].totOTAmount.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[2].footer=this.oCMP.arrLstOthMPFields[0].totActDeductions.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[3].footer=this.oCMP.arrLstOthMPFields[0].totDeductions.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[4].footer=this.oCMP.arrLstOthMPFields[0].totDedArrears.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[5].footer=this.oCMP.arrLstOthMPFields[0].totDedAdjustments.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvLoans.Columns[4].footer=this.oCMP.arrLstOthMPFields[0].totLoans.ToString(i.a.SessionManager.sPayrollDecimals),this.dgvLeaves.Columns[2].footer=this.oCMP.arrLstOthMPFields[0].totOPBalLeaves.ToString("0.00"),this.dgvLeaves.Columns[3].footer=this.oCMP.arrLstOthMPFields[0].totLeavesTaken.ToString("0.00"),this.dgvLeaves.Columns[4].footer=this.oCMP.arrLstOthMPFields[0].totNetBalLeaves.ToString("0.00"),this.dgvEarnings.UpdateFooter(),this.dgvEarOTs.UpdateFooter(),this.dgvDeductions.UpdateFooter(),this.dgvLoans.UpdateFooter(),this.dgvLeaves.UpdateFooter(),this.sBasicMonthly=this.oCMP.arrLstOthMPFields[0].BasicMonthly.ToString(i.a.SessionManager.sPayrollDecimals),this.NetSalary.Text=this.oCMP.arrLstOthMPFields[0].NetSalary.ToString(i.a.SessionManager.sPayrollDecimals),this.CheckViewForUser(0),0==this.dgvEarnings.Table.filter(t=>"False"!=t.IsVisible).length&&this.dgvEarnings.addRow(this.dgvEarnings.NewRow()),0==this.dgvAccruals.Table.filter(t=>"False"!=t.IsVisible).length&&this.dgvAccruals.addRow(this.dgvAccruals.NewRow()),0==this.dgvEarOTs.Table.filter(t=>"False"!=t.IsVisible).length&&this.dgvEarOTs.addRow(this.dgvEarOTs.NewRow()),0==this.dgvDeductions.Table.filter(t=>"False"!=t.IsVisible).length&&this.dgvDeductions.addRow(this.dgvDeductions.NewRow()),0==this.dgvLoans.Table.filter(t=>"False"!=t.IsVisible).length&&this.dgvLoans.addRow(this.dgvLoans.NewRow()),0==this.dgvLeaves.Table.filter(t=>"False"!=t.IsVisible).length&&this.dgvLeaves.addRow(this.dgvLeaves.NewRow()),this.dgvDays.Table.length<10&&this.dgvDays.AddExtraEmptyRows(5);let e=i.a.empService.GetQueryData(i.a.SessionManager.RoleID,"MPL009","","","");if(null!=e&&e.length>0){let t=new l.f;if(t.ReadXml(l.e.String(e[0].ValueXml)),null!=t&&t.Tables.length>0&&t.Tables[0].length>0){let e=[],s=[],a=[],i=[],l=[];for(let o=0;o<this.dgvEarnings.Table.length;o++)e=t.Tables[0].filter(t=>t.Name==this.dgvEarnings.Table[o].Earnings),null!=e&&e.length>0?this.dgvEarnings.Table[o].IndexValue=parseInt(e[0].Index):(e=t.Tables[0].filter(t=>t.ID==this.dgvEarnings.Table[o].ComponentID),null!=e&&e.length>0?this.dgvEarnings.Table[o].IndexValue=parseInt(e[0].Index):(e=t.Tables[0].filter(t=>t.ID=="-"+this.dgvEarnings.Table[o].ComponentID),this.dgvEarnings.Table[o].IndexValue=null!=e&&e.length>0?parseInt(e[0].Index):o));for(let o=0;o<this.dgvDeductions.Table.length;o++)s=t.Tables[0].filter(t=>t.Name==this.dgvDeductions.Table[o].Deductions),null!=s&&s.length>0?this.dgvDeductions.Table[o].IndexValue=parseInt(s[0].Index):(s=t.Tables[0].filter(t=>t.ID==this.dgvDeductions.Table[o].ComponentID),null!=s&&s.length>0?this.dgvDeductions.Table[o].IndexValue=parseInt(s[0].Index):(s=t.Tables[0].filter(t=>t.ID=="-"+this.dgvDeductions.Table[o].ComponentID),this.dgvDeductions.Table[o].IndexValue=null!=s&&s.length>0?parseInt(s[0].Index):o));for(let o=0;o<this.dgvLoans.Table.length;o++)a=t.Tables[0].filter(t=>t.Name==this.dgvLoans.Table[o].Loans),null!=a&&a.length>0?this.dgvLoans.Table[o].IndexValue=parseInt(a[0].Index):(a=t.Tables[0].filter(t=>t.ID==this.dgvLoans.Table[o].ComponentID),null!=a&&a.length>0?this.dgvLoans.Table[o].IndexValue=parseInt(a[0].Index):(a=t.Tables[0].filter(t=>t.ID=="-"+this.dgvLoans.Table[o].ComponentID),this.dgvLoans.Table[o].IndexValue=null!=a&&a.length>0?parseInt(a[0].Index):o));for(let o=0;o<this.dgvLeaves.Table.length;o++)i=t.Tables[0].filter(t=>t.Name==this.dgvLeaves.Table[o].Leaves),null!=i&&i.length>0?this.dgvLeaves.Table[o].IndexValue=parseInt(i[0].Index):(i=t.Tables[0].filter(t=>t.ID==this.dgvLeaves.Table[o].ComponentID+"'"),null!=i&&i.length>0?this.dgvLeaves.Table[o].IndexValue=parseInt(i[0].Index):(i=t.Tables[0].filter(t=>t.ID=="-"+this.dgvLeaves.Table[o].ComponentID),this.dgvLeaves.Table[o].IndexValue=null!=i&&i.length>0?parseInt(i[0].Index):o));for(let o=0;o<this.dgvAccruals.Table.length;o++)l=t.Tables[0].filter(t=>t.Name=this.dgvAccruals.Table[o].Earnings),null!=l&&l.length>0?this.dgvAccruals.Table[o].IndexValue=parseInt(l[0].Index):(l=t.Tables[0].filter(t=>t.ID==this.dgvAccruals.Table[o].ComponentID),null!=l&&l.length>0?this.dgvAccruals.Table[o].IndexValue=parseInt(l[0].Index):(l=t.Tables[0].filter(t=>t.ID=="-"+this.dgvAccruals.Table[o].ComponentID),this.dgvAccruals.Table[o].IndexValue=null!=l&&l.length>0?parseInt(l[0].Index):o))}let s=this.dgvEarnings.Table;s.sort((t,e)=>t.IndexValue-e.IndexValue),this.dgvEarnings.Table=s;let a=this.dgvDeductions.Table;a.sort((t,e)=>t.IndexValue-e.IndexValue),this.dgvDeductions.Table=a;let i=this.dgvLoans.Table;i.sort((t,e)=>t.IndexValue-e.IndexValue),this.dgvLoans.Table=i;let o=this.dgvLeaves.Table;o.sort((t,e)=>t.IndexValue-e.IndexValue),this.dgvLeaves.Table=o;let r=this.dgvAccruals.Table;r.sort((t,e)=>t.IndexValue-e.IndexValue),this.dgvAccruals.Table=r}this.dgvEarOTs.AddExtraEmptyRows(10),this.dgvEarnings.AddExtraEmptyRows(20),this.dgvAccruals.AddExtraEmptyRows(20),this.dgvDeductions.AddExtraEmptyRows(20),this.dgvLoans.AddExtraEmptyRows(20),this.dgvLeaves.AddExtraEmptyRows(20)}GetLinkReferenceData(t,e,s){try{if(Logger.InfoLog("MonthlyPayrollViewModel:: Entering GetLinkReferenceData()"),s>0){let a=[];a.push(t),a.push(e),a.push(s),a.push((new Date).ToString("dd/MMM/yyyy")),a.push(0),a.push("<XML></XML>"),a.push(0),a.push(i.a.SessionManager.LanguageID);let l=i.a.empService.GetLinkReferenceDataMontlyPayroll(a);if(null!=l&&l.Tables.length>0&&l.Tables[0].length>0&&l.Columns[0].length>0&&(this.HeaderFields.forEach(t=>{for(let e=0;e<l.Columns[0].length;e++)this.FillLocalReference(l,t)}),this.CustomTab.Pages.length>this.iStaticTabCnt))for(let t=this.iStaticTabCnt;t<this.CustomTab.Pages.length;t++)this.CustomTab.Pages[t].Fields.forEach(t=>{this.FillLocalReference(l,t)})}Logger.InfoLog("MonthlyPayrollViewModel:: Exiting GetLinkReferenceData()")}catch(a){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION GetLinkReferenceData()\r\n"+a.Message+"\r\n"+a.stack)}}FillLocalReference(t,e){try{Logger.InfoLog("MonthlyPayrollViewModel::Entering FillLocalReference()");for(let s=0;s<t.Columns[0].length;s++)if(e instanceof S.c&&!l.e.IsEmpty(e.DBColumnName)&&t.Columns[0].Contains(e.DBColumnName))if(e instanceof d.d)e.Text=l.e.String(t.Tables[0][0][e.DBColumnName]);else if(e instanceof y.e)e.SelectedValue=l.e.String(t.Tables[0][0][e.DBColumnName]);else if(e instanceof d.c)e.Text=l.e.String(t.Tables[0][0][e.DBColumnName]);else if(e instanceof D.b)!l.e.IsEmpty(t.Tables[0][0][e.DBColumnName])&&l.e.isValidDate(t.Tables[0][0][e.DBColumnName].toString())&&(e.Date=new Date(t.Tables[0][0][e.DBColumnName].toString()));else if(e instanceof D.c)!l.e.IsEmpty(t.Tables[0][0][e.DBColumnName])&&l.e.isValidDate(t.Tables[0][0][e.DBColumnName].toString())&&(e.Date=new Date(t.Tables[0][0][e.DBColumnName].toString()));else if(e instanceof D.a)!l.e.IsEmpty(t.Tables[0][0][e.DBColumnName])&&l.e.isValidDate(t.Tables[0][0][e.DBColumnName].toString())&&(e.Date=new Date(t.Tables[0][0][e.DBColumnName].toString()));else if(e instanceof u.a)e.Text=l.e.String(t.Tables[0][0][e.DBColumnName]);else if(e instanceof P.b){let s=0;s=l.e.Int(t.Tables[0][0][e.DBColumnName]),!l.e.IsEmpty(t.Tables[0][0][e.DBColumnName])&&s>0&&(e.SelectedValue=parseInt(l.e.String(t.Tables[0][0][e.DBColumnName])))}Logger.InfoLog("MonthlyPayrollViewModel::Exiting FillLocalReference()")}catch(s){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION FillLocalReference()\r\n"+s.Message+"\r\n"+s.stack)}}CalculateTotalDays(){let t=0;t+=parseFloat(this.dgvDays.Table[1].Days),t+=parseFloat(this.dgvDays.Table[3].Days),t+=parseFloat(this.dgvDays.Table[6].Days),t+=parseFloat(this.dgvDays.Table[7].Days),this.dgvDays.Columns[1].footer=t.ToString("0.0"),this.dgvDays.UpdateFooter()}dgvDeductions_BeginEdit(t,e,s){if("Actual"==(e=t.args.column.field)||"Deducted"==e||"EarDedType"==e){if("Actual"!=e&&"Deducted"!=e)return t.args.Cancel=!1,!1;if("1"==l.e.String(t.args.item.IsEditable))return t.args.Cancel=!1,!1}return t.args.Cancel=!0,!0}dgvDeductions_EndEdit(t,e,s){let a=t.item;"Actual"!=(e=t.column.field)&&"Deducted"!=e||null==this.oCMP||(""==l.e.String(a[e]).Trim()&&(a[e]=(0).ToString(i.a.SessionManager.sPayrollDecimals)),this.dgvDeductionsEndEdit(parseInt(a.DedSNo),a[e].toString()))}dgvEarnings_BeginEdit(t,e,s){if("Actual"==(e=t.args.column.field)||"Earned"==e||"EarDedType"==e){if("Actual"!=e&&"Earned"!=e)return t.args.Cancel=!1,!1;if("1"==l.e.String(t.args.item.IsEditable))return t.args.Cancel=!1,!1}return t.args.Cancel=!0,!0}dgvEarningsEndEdit(t,e){this.oCMP.ReEvaluateData(0,0,t,e),this.FillProcessedData()}dgvDeductionsEndEdit(t,e){this.oCMP.ReEvaluateData(0,2,t,e),this.FillProcessedData()}dgvEarnings_EndEdit(t,e,s){let a=t.item;"Actual"!=(e=t.column.field)&&"Earned"!=e||null==this.oCMP||(""==l.e.String(a[e]).Trim()&&(a[e]=(0).ToString(i.a.SessionManager.sPayrollDecimals)),this.dgvEarningsEndEdit(parseInt(a.EarSNo),a[e].toString()))}dgvAccruals_BeginEdit(t,e,s){if("Actual"==(e=t.args.column.field)||"Earned"==e||"EarDedType"==e){if("Actual"!=e&&"Earned"!=e)return t.args.Cancel=!1,!1;if("1"==l.e.String(t.args.item.IsEditable))return t.args.Cancel=!1,!1}return t.args.Cancel=!0,!0}dgvAccruals_EndEdit(t,e,s){let a=t.item;"Actual"!=(e=t.column.field)&&"Earned"!=e||null==this.oCMP||(""==l.e.String(a[e]).Trim()&&(a[e]=(0).ToString(i.a.SessionManager.sPayrollDecimals)),this.dgvAccrualsEndEdit(parseInt(a.EarSNo),a[e].toString()))}dgvAccrualsEndEdit(t,e){this.oCMP.ReEvaluateData(0,0,t,e),this.FillProcessedData()}dgvEarOTs_BeginEdit(t,e,s){return"Hours"==t.args.column.field&&null!=this.oCMP&&this.oCMP.arrLstOthMPFields[0].IsAllowOT&&"1"==l.e.String(t.args.item.IsEditable)?(t.args.Cancel=!1,!1):(t.args.Cancel=!0,!0)}dgvEarOTs_EndEdit(t,e,s){let a=t.item;"Hours"==(e=t.column.field)&&null!=this.oCMP&&(""==l.e.String(a[e]).toString().Trim()&&(a[e]=(0).ToString(i.a.SessionManager.sPayrollDecimals2)),this.oCMP.ReEvaluateData(0,1,parseInt(a.EarSNo),a[e].toString()),this.FillProcessedData())}dgvDays_BeginEdit(t,e,s){return"Days"==t.args.column.field&&"1"==l.e.String(t.args.item.IsEditable)?(t.args.Cancel=!1,!1):(t.args.Cancel=!0,!0)}Web_dgvDays_EndEdit(t,e){"Days Attended"==t?(this.oCMP.SetDaysAttended(0,"Days Attended",parseFloat(e)),this.DisplayMessage=this.oCMP.arrLstOthMPFields[0].LOPDays<0?i.a.GetResource("EnterValidDaysAttended"):this.oCMP.arrLstOthMPFields[0].dblLeavesLOP>0&&this.oCMP.arrLstOthMPFields[0].LOPDays<this.oCMP.arrLstOthMPFields[0].dblLeavesLOP?"Employee Should have atleast "+this.oCMP.arrLstOthMPFields[0].dblLeavesLOP+" LOP Days":"",this.dgvDays.Table[6].Days=this.oCMP.arrLstOthMPFields[0].LOPDays.ToString("0.0")):"Absent(LOP)"==t&&this.oCMP.SetDaysAttended(0,"LOP",parseFloat(e)),this.FillProcessedData()}dgvDays_EndEdit(t,e,s){try{e=t.column.field;let s=t.item;Logger.InfoLog("MonthlyPayrollViewModel::Entering dgvDays_EndEdit()"),"Days"==e&&null!=this.oCMP&&(""==l.e.String(s[e]).Trim()&&(s[e]="0.0"),"Days Attended"==s.Particulars.toString()?(this.oCMP.SetDaysAttended(0,"Days Attended",parseFloat(s[e])),this.oCMP.arrLstOthMPFields[0].LOPDays<0?(this.DisplayMessage=i.a.GetResource("EnterValidDaysAttended"),this.MessageVisibility=!0):this.oCMP.arrLstOthMPFields[0].dblLeavesLOP>0&&this.oCMP.arrLstOthMPFields[0].LOPDays<this.oCMP.arrLstOthMPFields[0].dblLeavesLOP?(this.DisplayMessage="Employee Should have atleast "+this.oCMP.arrLstOthMPFields[0].dblLeavesLOP+" LOP Days",this.MessageVisibility=!0):this.DisplayMessage="",this.dgvDays.Table[6].Days=this.oCMP.arrLstOthMPFields[0].LOPDays.ToString("0.0")):"Absent(LOP)"==l.e.String(s.Particulars)&&this.oCMP.SetDaysAttended(0,"LOP",parseFloat(s[e])),this.FillProcessedData()),Logger.InfoLog("MonthlyPayrollViewModel::Exiting dgvDays_EndEdit()")}catch(a){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION dgvDays_EndEdit()\r\n"+a.Message+"\r\n"+a.stack)}}ClearControls(){try{Logger.InfoLog("MonthlyPayrollViewModel::Entering ClearControls()"),this.objMonPay={},this.sBasicMonthly=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.NetSalary.Text=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.Remarks.Text="",this.sPayrollMonth=" / ["+i.a.SessionManager.PayrollMonth.ToString("MMM-yyyy")+"]",this.dgvDays.Table[0].Days="Actual Days"==i.a.SessionManager.Preferences.PayDays?"True"==i.a.SessionManager.Preferences.SetPayrollMonthToEndDateMonth?i.a.SessionManager.PayrollMonth.DaysInMonth().ToString("0.0"):(i.a.SessionManager.PayrollMonthEnd.Subtract(i.a.SessionManager.PayrollMonthStart).Days+1).ToString("0.0"):parseFloat(i.a.SessionManager.Preferences.PayDays).ToString("0.0"),this.dgvDays.Table[1].Days="0.0",this.dgvDays.Table[2].Days="0.0",this.dgvDays.Table[3].Days="0.0",this.dgvDays.Table[4].Days="0.0",this.dgvDays.Table[5].Days="0.0",this.dgvDays.Table[6].Days="0.0",this.dgvDays.Table[7].Days="0.0",this.dgvDays.Columns[1].footer="0.0",this.dgvDays.UpdateFooter();for(let e=0;e<this.dgvDays.Table.length;e++)this.dgvDays.updateRow(this.dgvDays.Table[e]);this.dgvEarOTs.Clear();let t=this.dgvEarOTs.NewRow();if(this.dgvEarOTs.addRow(t),this.dgvEarOTs.Columns[1].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals2),this.dgvEarOTs.Columns[2].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarOTs.UpdateFooter(),this.dgvEarnings.Clear(),t=this.dgvEarnings.NewRow(),this.dgvEarnings.addRow(t),this.dgvEarnings.Columns[2].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[3].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[4].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.Columns[5].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvEarnings.UpdateFooter(),this.dgvAccruals.Clear(),this.dgvAccruals.NewRow(),this.dgvDeductions.Clear(),t=this.dgvDeductions.NewRow(),this.dgvDeductions.addRow(t),this.dgvDeductions.Columns[2].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[3].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[4].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.Columns[5].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvDeductions.UpdateFooter(),this.dgvLoans.Clear(),t=this.dgvLoans.NewRow(),this.dgvLoans.addRow(t),this.dgvLoans.Columns[4].footer=(0).ToString(i.a.SessionManager.sPayrollDecimals),this.dgvLoans.UpdateFooter(),this.dgvLeaves.Clear(),t=this.dgvLeaves.NewRow(),this.dgvLeaves.addRow(t),this.dgvLeaves.Columns[2].footer=(0).ToString("0.00"),this.dgvLeaves.Columns[3].footer=(0).ToString("0.00"),this.dgvLeaves.Columns[4].footer=(0).ToString("0.00"),this.dgvLeaves.UpdateFooter(),this.dgvDays.Table.length<10&&this.dgvDays.AddExtraEmptyRows(5),this.dgvEarOTs.AddExtraEmptyRows(10),this.dgvEarnings.AddExtraEmptyRows(20),this.dgvAccruals.AddExtraEmptyRows(20),this.dgvDeductions.AddExtraEmptyRows(20),this.dgvLoans.AddExtraEmptyRows(20),this.dgvLeaves.AddExtraEmptyRows(20),this.HeaderFields.forEach(t=>{this.SetProperty_DefaultValue(t)}),this.CustomTab.Pages.length>this.iStaticTabCnt)for(let e=this.iStaticTabCnt;e<this.CustomTab.Pages.length;e++)this.CustomTab.Pages[e].Fields.forEach(t=>{this.SetProperty_DefaultValue(t)});this.DocID=0,this.DocNo="",this.DocStatus="[UnPosted]",this.DisplayMessage="",this.oCMP=null,this.objArrVM=null,this.dtArrData=null,this.sArrsCalcMonths="",this.sArrCalcMonthPaydays="",this.strArrearsDays="",this.strWorkSheetXML="",this.dtWorkSheet=null,this.dtAdjData=null,this.dtDSData=null,this.IsArrearsEnabled=!0,this.IsAdjustmentsEnabled=!0,this.ApproveVisibility=!1,Logger.InfoLog("MonthlyPayrollViewModel::Exiting ClearControls()")}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION SetProperties_Custom()\r\n"+t.Message+"\r\n"+t.stack)}}PopupEmployeesFilter(){try{return Logger.InfoLog("MonthlyPayrollViewModel::Entering PopupEmployeesFilter()"),i.a.SessionManager.Preferences.ContainsKey("MonthlyPayrollFilter")&&parseInt(i.a.SessionManager.Preferences.MonthlyPayrollFilter)>0?null==this.oEmpFilter?this.oEmpFilter=new E.a("",0,1):(this.oEmpFilter.CostCenterFilters.length>0?this.oEmpFilter.CostCenters.SelectedValue=this.oEmpFilter.CostCenterFilters[0].CostCenterID.toString():(this.oEmpFilter.Filter=1,this.oEmpFilter.InitControls()),this.oEmpFilter.CostCenters.Enable=!0):null==this.oEmpFilter?this.oEmpFilter=new E.a("",0,0):(this.oEmpFilter.Filter=0,this.oEmpFilter.InitControls()),this.oEmpFilter.Filter>0?i.a.page.ShowDialog(this.oEmpFilter,T.a,{ShowCenter:!0,HideHeader:!0}).subscribe(()=>{this.empFilterTemp(),this.strCustomEmpFilter=this.strWhere,""==this.strCustomEmpFilter.toString()&&(this.strCustomEmpFilter=this.FilterEmployees()),this.EmployeeList.Code.CustomWhere=this.EmployeeList.Name.CustomWhere=this.strCustomEmpFilter}):this.empFilterTemp(),this.strWhere}catch(t){Logger.ErrorLog("MonthlyPayrollViewModel::EXCEPTION PopupEmployeesFilter()\r\n"+t.Message+"\r\n"+t.stack)}}EmpTreeFilterCallBack(){this.empFilterTemp()}empFilterTemp(){let t="",e="";if(this.DialogResult=this.oEmpFilter.IsCompleted,this.oEmpFilter.IsCompleted)if(this.oEmpFilter.CostCenterFilters.length>0){let s=1,a="",o="";this.sbDimWhere="",this.oEmpFilter.CostCenterFilters.forEach(t=>{if(t.CostCenterID>5e4&&(s=2,a="NodeID",o=50051==t.CostCenterID?"EmpSeqNo":"CCNID"+(t.CostCenterID-5e4)),t.SelectedNodes.length>0){if(1==t.SelectedNodes.length)this.sbDimWhere+=" AND ",this.sbDimWhere+=o+"="+t.SelectedNodes[0].Id;else if(null==t.SelectedNodes.find(t=>t.Id==s&&t.IsGroup))if(this.sbDimWhere+=" AND ",F.IPrefetchFilter.IsGroupTree(t)){let e="";for(let s=0;s<t.SelectedNodes.length;s++)null!=t.SelectedNodes[s].Parent&&t.SelectedNodes[s].Parent.IsSelected||(e.length>0&&(e+=","),e+=t.SelectedNodes[s].Id);0==e.length&&(e+=-12912),this.sbDimWhere+=o+" IN ",this.sbDimWhere+=" (select T."+a+" GTID from ",this.sbDimWhere+=this.GetTagTableName(t.CostCenterID)+" T with(nolock),",this.sbDimWhere+=this.GetTagTableName(t.CostCenterID)+" GTP with(nolock) where T.lft BETWEEN GTP.lft AND GTP.rgt AND GTP."+a+" IN ",this.sbDimWhere+=e.toString()+")  group by T."+a+")"}else{this.sbDimWhere+=o+" IN (";for(let e=0;e<t.SelectedNodes.length;e++)e>0&&(this.sbDimWhere+=","),this.sbDimWhere+=t.SelectedNodes[e].Id;this.sbDimWhere+=")"}}else t.DeleteButtonVisibility||(this.sbDimWhere+=" AND ",this.sbDimWhere+=o+"=-12912")}),t=this.sbDimWhere.toString(),t+=" AND ( CONVERT(DATETIME,EMP.DOJ) <='"+i.a.SessionManager.PayrollMonthEnd.ToString("dd MMM yyyy")+"' AND CONVERT(DATETIME,EMP.DORelieve) >='"+i.a.SessionManager.PayrollMonthStart.ToString("dd MMM yyyy")+"' ) ","True"==i.a.SessionManager.Preferences.NPDontAllowPayrollProcessing&&(t+=" AND EmpSeqNo NOT IN ( Select NodeID From COM_CC50051 WITH(NOLOCK) ",t+=" Where ResignStatus = 'Posted' AND DateDiff(day, ISNULL(CONVERT(DATETIME, DORelieve), '01-Jan-9000'), '"+i.a.SessionManager.PayrollMonthStart.ToString("dd MMM yyyy")+"') <= 0 ",t+=" AND DateDiff(day, CONVERT(DATETIME, CONVERT(DATETIME, ('01-' + CONVERT(NVARCHAR(3), DATENAME(MONTH, ISNULL(CONVERT(DATETIME, DOResign), '01-Jan-9000'))) + '-' + CONVERT(NVARCHAR, YEAR(ISNULL(CONVERT(DATETIME, DOResign), '01-Jan-9000')))))), '"+i.a.SessionManager.PayrollMonthStart.ToString("dd MMM yyyy")+"') >= 0 ) "),"True"==i.a.SessionManager.Preferences.DontConsiderEmpsForPayroll&&parseInt(i.a.SessionManager.Preferences.DontConsiderEmpsForPayrollDays)>0&&(t+=" AND NOT ( MONTH(CONVERT(DATETIME,EMP.DOJ))="+i.a.SessionManager.PayrollMonth.getMonth()+" AND YEAR(CONVERT(DATETIME,EMP.DOJ))="+i.a.SessionManager.PayrollMonth.getFullYear()+" AND DAY(CONVERT(DATETIME,EMP.DOJ))>="+parseInt(i.a.SessionManager.Preferences.DontConsiderEmpsForPayrollDays)+" ) "),i.a.SessionManager.LocationID>0&&i.a.SessionManager.Preferences.ContainsKey("LocationWiseDimension")&&i.a.SessionManager.Preferences.LocationWiseDimension.split(",").Contains("50051")&&(t+=" AND EmpSeqNo IN ( Select NodeID From Com_CCCCData with(nolock) where CostCenterID=50051 and CCNID2="+i.a.SessionManager.LocationID+")"),l.e.IsEmpty(i.a.SessionManager.sWHEmpFilteredEmpSeqNos)||(t+="  AND EmpSeqNo IN ("+i.a.SessionManager.sWHEmpFilteredEmpSeqNos+")");let r=[];r.push(i.a.SessionManager.PayrollMonthEnd.ToString("dd MMM yyyy")),r.push(t),r.push(0),r.push(i.a.SessionManager.RoleID),r.push(i.a.SessionManager.UserID),r.push(i.a.SessionManager.LanguageID);let n=i.a.empService.ExecuteQuery_SP(r,"spPAY_GetEmpMasterCCDetails");if(n.Tables.length>0)if(n.Tables[0].length>0){for(let t=0;t<n.Tables[0].length;t++)e=e+n.Tables[0][t].EmpSeqNo.toString()+",";l.e.IsEmpty(e)||(e=e.substr(0,e.length-1),this.strWhere=" ( a.NodeId IN ("+e+"))")}else this.strWhere=" ( a.NodeId = 0)"}else this.oEmpFilter.Filter>0&&(this.strWhere=this.FilterEmployees())}GetTagTableName(t){return 2==t?"ACC_Accounts":3==t?"INV_Product":7==t?"ADM_Users":50001==t?"COM_Division":50002==t?"COM_Location":50003==t?"COM_Branch":50004==t?"COM_Department":50005==t?"COM_Salesman":50006==t?"COM_Category":50007==t?"COM_Area":50008==t?"COM_Teritory":"COM_CC"+t}onLoanClick(t){let e=new Date;j.RibbonExtViewModel.GetDocumentObject(40056,"",!1,"Payroll").then(t=>{let s={value:e};t.ScreenObject.OnDocPrefixChanged("lostFocus",0,parseInt(this.dgvLoans.Table[this.dgvLoans.SelectedIndex].NodeNo),s,!1),e=s.value,i.a.page.addNewTab({component:B.AddEditDocumentComponent,params:{obj:t}})})}ValidateControl(t,e){if(e.Message="",t instanceof d.d&&(e.Message=t.ValidateData()),t instanceof u.a)e.Message=t.GetValidationError("Text");else if(t instanceof d.c)e.Message=t.ValidateData();else if(t instanceof y.e)e.Message=t.GetValidationError("SelectedValue");else if(t instanceof D.c)e.Message=t.ValidateData();else if(t instanceof D.b)e.Message=t.ValidateData();else if(t instanceof D.a)e.Message=t.ValidateData();else if(t instanceof P.b){if(e.Message=t.GetValidationError("SelectedValue"),t.Visible&&!l.e.IsEmpty(t.Text)&&0==t.SelectedValue)return e.Message=i.a.GetResource("Invalid")+" "+t.Label.toString(),""}else if(t instanceof h.a&&t.CCID>2){if(t.CCID==i.a.SessionManager.RegisterCCID&&(t.Mandatory=!0),e.Message=t.GetValidationError("SelectedValue"),t.Visible&&!l.e.IsEmpty(t.Text)&&0==t.SelectedValue)return e.Message=i.a.GetResource("Invalid")+" "+t.Label.toString(),"";if(50051==t.CCID&&t.Mandatory&&0==t.SelectedValue)return e.Message=i.a.GetResource("Invalid")+" "+t.Label.toString(),""}return l.e.IsEmpty(e.Message),""}}},"6sKv":function(t,e,s){"use strict";s.d(e,"a",(function(){return h}));var a=s("3Pt+"),i=s("fXoL"),l=s("q8k3"),o=s("ofXK"),r=s("sYmb");function n(t,e){if(1&t&&(i.Zb(0,"div",5),i.Wc(1,"\n                "),i.Vb(2,4),i.Wc(3,"\n            "),i.Yb()),2&t){const t=i.lc();i.Db(2),i.tc("obj",t.obj.txtPartialRExcessAmt)("group",t.form)}}function d(t,e){if(1&t&&(i.Zb(0,"div",5),i.Wc(1,"\n                "),i.Vb(2,4),i.Wc(3,"\n            "),i.Yb()),2&t){const t=i.lc();i.Db(2),i.tc("obj",t.obj.btnExcessPay)("group",t.form)}}let h=(()=>{class t{constructor(){this.form=new a.j({})}ngOnInit(){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=i.Nb({type:t,selectors:[["app-change-loan"]],inputs:{obj:"obj"},decls:56,vars:16,consts:[[1,"master-screen",2,"padding-bottom","4px","width","200px"],[1,"PACTHeaderFields","dialogSubBody"],[1,"row"],[1,"form-group","row","form-row","col-xl-12","col-md-12","col-sm-12","col-xs-12","PACTControl"],["FieldDirective","",3,"obj","group"],[1,"form-group","row","form-row","col-xl-6","col-md-6","col-sm-12","col-xs-12","PACTControl"],["class","form-group row form-row col-xl-6 col-md-6 col-sm-12 col-xs-12 PACTControl",4,"ngIf"],[1,"Pactdailogfooter"],[1,"primary-btn-wicon",3,"click"],[1,"secondary-btn-wicon",3,"click"]],template:function(t,e){1&t&&(i.Zb(0,"div",0),i.Wc(1,"\n    "),i.Zb(2,"div",1),i.Wc(3,"\n        \n        "),i.Zb(4,"div",2),i.Wc(5,"\n            "),i.Zb(6,"div",3),i.Wc(7,"\n                "),i.Vb(8,4),i.Wc(9,"\n            "),i.Yb(),i.Wc(10,"\n            \n        "),i.Yb(),i.Wc(11,"\n        "),i.Zb(12,"div",2),i.Wc(13,"\n            "),i.Zb(14,"div",5),i.Wc(15,"\n                "),i.Vb(16,4),i.Wc(17,"\n            "),i.Yb(),i.Wc(18,"\n            "),i.Uc(19,n,4,2,"div",6),i.Wc(20,"\n        "),i.Yb(),i.Wc(21,"\n        "),i.Zb(22,"div",2),i.Wc(23,"\n            "),i.Zb(24,"div",5),i.Wc(25,"\n                "),i.Vb(26,4),i.Wc(27,"\n            "),i.Yb(),i.Wc(28,"\n            "),i.Uc(29,d,4,2,"div",6),i.Wc(30,"\n            \n        "),i.Yb(),i.Wc(31,"\n        "),i.Zb(32,"div",2),i.Wc(33,"\n            "),i.Zb(34,"div",3),i.Wc(35,"\n                "),i.Vb(36,4),i.Wc(37,"\n            "),i.Yb(),i.Wc(38,"\n            \n        "),i.Yb(),i.Wc(39,"\n      \n    "),i.Yb(),i.Wc(40,"\n    "),i.Zb(41,"div",7),i.Wc(42,"\n      "),i.Zb(43,"div"),i.Wc(44,"\n        "),i.Zb(45,"button",8),i.hc("click",(function(){return e.obj.Button_Click("OK")})),i.Wc(46),i.mc(47,"translate"),i.Yb(),i.Wc(48,"\n        "),i.Zb(49,"button",9),i.hc("click",(function(){return e.obj.Button_Click("Cancel")})),i.Wc(50),i.mc(51,"translate"),i.Yb(),i.Wc(52,"\n      "),i.Yb(),i.Wc(53,"\n  "),i.Yb(),i.Wc(54,"\n"),i.Yb(),i.Wc(55,"\n")),2&t&&(i.Db(8),i.tc("obj",e.obj.rdbInstAmt)("group",e.form),i.Db(8),i.tc("obj",e.obj.rdbPartialRExcessAmt)("group",e.form),i.Db(3),i.tc("ngIf",e.obj.txtPartialRExcessAmt.Visible),i.Db(7),i.tc("obj",e.obj.rdbPostpone)("group",e.form),i.Db(3),i.tc("ngIf",e.obj.btnExcessPay.Visible),i.Db(7),i.tc("obj",e.obj.rdbExempt)("group",e.form),i.Db(10),i.Xc(i.nc(47,12,"Ok")),i.Db(4),i.Xc(i.nc(51,14,"Close")))},directives:[l.a,o.t],pipes:[r.d],encapsulation:2}),t})()},FZke:function(t,e,s){"use strict";s.d(e,"a",(function(){return r}));var a=s("3Pt+"),i=s("fXoL"),l=s("sT9C"),o=s("sYmb");let r=(()=>{class t{constructor(){this.form=new a.j({})}ngOnInit(){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=i.Nb({type:t,selectors:[["app-adjustments"]],inputs:{obj:"obj"},decls:25,vars:8,consts:[[1,"master-screen",2,"padding-bottom","4px","width","900px"],[1,"PACTHeaderFields","dialogSubBody"],[1,"documentgrid","row","form-row",2,"width","100%"],[2,"width","100%",3,"obj","group"],[1,"Pactdailogfooter"],[1,"primary-btn-wicon",3,"click"],[1,"secondary-btn-wicon",3,"click"]],template:function(t,e){1&t&&(i.Zb(0,"div",0),i.Wc(1,"\n    "),i.Zb(2,"div",1),i.Wc(3,"\n        \n      "),i.Zb(4,"div",2),i.Wc(5,"\n        "),i.Ub(6,"app-PactGridView",3),i.Wc(7,"  \n      "),i.Yb(),i.Wc(8,"\n      \n    "),i.Yb(),i.Wc(9,"\n    "),i.Zb(10,"div",4),i.Wc(11,"\n      "),i.Zb(12,"div"),i.Wc(13,"\n        "),i.Zb(14,"button",5),i.hc("click",(function(){return e.obj.Button_Click("OK")})),i.Wc(15),i.mc(16,"translate"),i.Yb(),i.Wc(17,"\n        "),i.Zb(18,"button",6),i.hc("click",(function(){return e.obj.Button_Click("Cancel")})),i.Wc(19),i.mc(20,"translate"),i.Yb(),i.Wc(21,"\n      "),i.Yb(),i.Wc(22,"\n  "),i.Yb(),i.Wc(23,"\n"),i.Yb(),i.Wc(24,"\n")),2&t&&(i.Db(6),i.tc("obj",e.obj.dgv)("group",e.form),i.Db(9),i.Xc(i.nc(16,4,"Ok")),i.Db(4),i.Xc(i.nc(20,6,"Close")))},directives:[l.a],pipes:[o.d],encapsulation:2}),t})()},"PGQ+":function(t,e,s){"use strict";s.d(e,"a",(function(){return d}));var a=s("Do2H"),i=s("Lp6j"),l=s("MRsC"),o=s("VxiT"),r=s("uMy8"),n=s("vTM8");class d{constructor(){this.sSelectedEmpSeqNos="",this.sDisplayMessage="",this.sFilter="",this.sEmpSeqNo="",this.dsAllEmpsData=[],this.dtPayrollData=[],this.IsArrears=!1,this.IsAdjustments=!1,this.dAdjDays=0,this.dWklyoff=0,this.dHdays=0,this.dblMWeekOffs=0,this.dblMHolidays=0,this.oCPField=null,this.dtHolidayDef=null,this.lstHolidays=new Array,this.lstVacations=new Array,this.lstAccrAccumulateSNos=new Array,this.lstWeekoff=new Array,this.IsCompleted=!1,this.IsPostFullAttendance=!1,this.IsPostBasedOnDailyAttendance=!1,this.IsPostBasedOnAttDimWise=!1,this.IncludeOTHours=!1,this.IsArrearclick=!1,this.ArrGradeID=1,this.iEmpIndex=0,this.VacationFieldSNo=0,this.dblVacationDays=0,this.dblVacationDaysEncash=0,this.dVacDays=0,this.dVacPayYes=0,this.dVacPayNo=0,this.ExcludeWeeklyOff=!1,this.ExcludeHolidays=!1,this.dblLeavesLOP=0,this.dsEarDedExtra=null,this.fldDict=new n.a,Logger.InfoLog("CommonMonthlyPayroll::Entering CommonMonthlyPayroll()"),Logger.InfoLog("CommonMonthlyPayroll::Exiting CommonMonthlyPayroll()")}ProcessPayroll(){if(this.sSelectedEmpSeqNos.length>0){this.LeaveYearStartmonth=new Date(parseInt(this.PayrollMonthStart.ToString("yyyy")),parseInt(a.a.SessionManager.Preferences.LeaveYear.toString()),1),this.LeaveYearEndmonth=this.LeaveYearStartmonth.AddMonths(12).AddDays(-1);let t=[];t.push(this.sSelectedEmpSeqNos),t.push(this.PayrollMonth.ToString("dd/MMM/yyyy")),t.push(this.PayrollMonthStart.ToString("dd/MMM/yyyy")),t.push(this.PayrollMonthEnd.ToString("dd/MMM/yyyy")),t.push(a.a.SessionManager.UserID),t.push(a.a.SessionManager.RoleID),t.push(a.a.SessionManager.LanguageID),this.dsAllEmpsData=a.a.empService.ExecuteQuery_SP(t,"spPAY_GetEmpPayrollDetailsMultiple");let e=[];if(e.push(a.a.SessionManager.PayrollMonthEnd.ToString("dd MMM yyyy")),e.push(this.sFilter),e.push(0),e.push(a.a.SessionManager.RoleID),e.push(a.a.SessionManager.UserID),e.push(a.a.SessionManager.LanguageID),this.dsData=a.a.empService.ExecuteQuery_SP(e,"spPAY_GetEmpMasterCCDetails"),this.dsData1=a.a.empService.GetQueryData(0,"MPL004","","",""),this.dsData2=a.a.empService.GetQueryData(0,"MPL007","","",""),this.dsDocDesig=(new o.a).GetScreenInfo(40054),null!=this.dsAllEmpsData&&this.dsAllEmpsData.Tables.length>0&&this.dsAllEmpsData.Tables[0].length>0){let t=this.sSelectedEmpSeqNos.split(",");if(t.length>0)for(this.arrLstOthMPFields=new Array,this.arrLstCPFields=i.e.Array(t.length,7),this.iEmpIndex=0;this.iEmpIndex<t.length;this.iEmpIndex++){if(null!=t[this.iEmpIndex]&&""!=t[this.iEmpIndex].Trim()){this.arrLstCPFields[this.iEmpIndex][0]=new Array,this.arrLstCPFields[this.iEmpIndex][1]=new Array,this.arrLstCPFields[this.iEmpIndex][2]=new Array,this.arrLstCPFields[this.iEmpIndex][3]=new Array,this.arrLstCPFields[this.iEmpIndex][4]=new Array,this.arrLstCPFields[this.iEmpIndex][5]=new Array,this.arrLstCPFields[this.iEmpIndex][6]=new Array,this.othMPField=new l.c,this.arrLstOthMPFields.push(this.othMPField),this.othMPField.dsAllEmpsData=this.dsAllEmpsData,this.sEmpSeqNo=t[this.iEmpIndex];let e=0,s="";if(null!=this.dsData2&&this.dsData2.Tables.length>0&&null!=this.dsData2.Tables[0]&&this.dsData2.Tables[0].length>0){let t=[];null!=this.dsAllEmpsData.Tables[17]&&this.dsAllEmpsData.Tables[17].length>0&&(t=this.dsAllEmpsData.Tables[17]);for(let a=0;a<this.dsData2.Tables[0].length;a++){s=this.dsData2.Tables[0][a].SysColumnName.toString();let i=this.dsAllEmpsData.Tables[24].filter(t=>t.EmpSeqNo==this.sEmpSeqNo);null!=i&&i.length>0&&(e=parseInt(i[0]["CCNID"+s.Replace("dcCCNID","")])),t=t.filter(t=>t[s]==e)}if(null!=t&&null!=t&&t.length>0&&!i.e.IsEmpty(t[0].MPLockStatus)&&"Locked"==t[0].MPLockStatus.toString())return this.othMPField.sErrorMessage="Monthly Payroll Locked",void(this.IsCompleted=!0)}let o=0,r=0,n=0,d=0,h=0,c=0,g=0,D=0,u=0,P=0,y=0;if(this.lstAccrAccumulateSNos=new Array,this.othMPField.dPTApplicableAmt=this.othMPField.dblGrossSalary=0,this.dblVacationDays=0,this.dblVacationDaysEncash=0,this.dblLeavesLOP=0,o="Actual Days"==a.a.SessionManager.Preferences.PayDays?this.PayrollMonthEnd.Subtract(this.PayrollMonthStart).Days+1:parseInt(a.a.SessionManager.Preferences.PayDays),this.othMPField.MonthDays=o,this.drcAllEmpsData=this.dsAllEmpsData.Tables[0].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcAllEmpsData=this.drcAllEmpsData,this.othMPField.EmpSeqNo=this.sEmpSeqNo,this.othMPField.EmpCode=this.drcAllEmpsData[0].Code.toString(),this.othMPField.EmpName=this.drcAllEmpsData[0].Name.toString(),null!=this.dsAllEmpsData.Tables[14]&&this.dsAllEmpsData.Tables[14].length>0&&this.dsAllEmpsData.Columns[14].Contains("ServerMessage")&&null!=this.dsAllEmpsData.Tables[14][0].ServerMessage&&this.dsAllEmpsData.Tables[14][0].ServerMessage.toString().Contains("Invalid column name"))return this.othMPField.sErrorMessage="Please Enable Payroll Document Fields from Global Preferences (Payroll Tab) NumFields",void(this.IsCompleted=!0);this.othMPField.DateOfJoining=new Date(this.drcAllEmpsData[0].CDOJ),this.othMPField.DateOfRelieve=null==this.drcAllEmpsData[0].CDORelieve||null==this.drcAllEmpsData[0].CDORelieve?new Date("01-Jan-9000"):new Date(this.drcAllEmpsData[0].CDORelieve),this.othMPField.dServiceDays=(new Date).Subtract(this.othMPField.DateOfJoining).Days+1,this.othMPField.CurrencyID=null==this.drcAllEmpsData[0].CurrencyID||""==this.drcAllEmpsData[0].CurrencyID.toString()||0==parseInt(this.drcAllEmpsData[0].CurrencyID)?1:parseInt(this.drcAllEmpsData[0].CurrencyID),this.othMPField.IsAllowOT=null!=this.drcAllEmpsData[0].IsAllowOT&&null!=this.drcAllEmpsData[0].IsAllowOT&&"No"!=this.drcAllEmpsData[0].IsAllowOT.toString(),null!=this.oParent&&"PostPayrollViewModel"==this.oParent.ClassName&&(this.othMPField.IsAllowOT=!(!this.othMPField.IsAllowOT||!this.IncludeOTHours)),this.drcEmpPay=this.dsAllEmpsData.Tables[2].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcEmpPay.length>0&&(this.othMPField.BasicMonthly=i.e.IsEmpty(this.drcEmpPay[0].BasicMonthly)||""==this.drcEmpPay[0].BasicMonthly.toString().Trim()?0:parseFloat(this.drcEmpPay[0].BasicMonthly)),this.drcWOffDef=this.dsAllEmpsData.Tables[4];let C,m=a.a.SessionManager.Preferences.WeeklyOffsDefBasedOn.split(","),p=" 1=1 ",M="";if(C=this.drcWOffDef,null!=m&&null!=m&&m.length>0)for(let t=0;t<m.length;t++)i.e.IsEmpty(m[t])||(M="CCNID"+(parseInt(m[t])-5e4),this.drcCCData=this.dsData.Tables[0].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),null!=this.drcCCData&&this.drcCCData.length>0&&(M.Contains("CCNID51")?(p+=" AND ( "+M+"="+this.drcCCData[0].EmpSeqNo+" OR "+M+"= 1)",C=C.filter(t=>t[M]==this.drcCCData[0].EmpSeqNo||1==t[M])):(p+=" AND ( "+M+"="+this.drcCCData[0][M]+" OR "+M+"= 1)",C=C.filter(t=>t[M]==this.drcCCData[0][M]||1==t[M]))));" 1=1 "!=p&&(this.drcWOffDef=C),this.drcHolidayDef=this.dsAllEmpsData.Tables[5];let S=this.drcHolidayDef;if(m=a.a.SessionManager.Preferences.HolidaysBasedOn.split(","),p=" 1=1 ",M="",null!=m&&null!=m&&m.length>0)for(let t=0;t<m.length;t++)i.e.IsEmpty(m[t])||(M="CCNID"+(parseInt(m[t])-5e4),this.drcCCData=this.dsData.Tables[0].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),null!=this.drcCCData&&this.drcCCData.length>0&&(M.Contains("CCNID51")?(p+=" AND ( "+M+"="+this.drcCCData[0].EmpSeqNo+" OR "+M+"= 1)",S=S.filter(t=>t[M]==this.drcCCData[0].EmpSeqNo||1==t[M])):(p+=" AND ( "+M+"="+this.drcCCData[0][M]+" OR "+M+"= 1)",S=S.filter(t=>t[M]==this.drcCCData[0][M]||1==t[M]))));if(" 1=1 "!=p&&(this.drcHolidayDef=S),null!=this.drcHolidayDef&&this.drcHolidayDef.length>0&&(this.dtHolidayDef=this.drcHolidayDef),this.lstHolidays.Clear(),null!=this.drcHolidayDef&&this.drcHolidayDef.length>0)for(let t=0;t<this.dsAllEmpsData.Tables[5].length;t++)this.lstHolidays.push(new Date(this.dsAllEmpsData.Tables[5][t].HolidayDate));if(this.drcPayProcessed=this.dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcPayProcessed=this.drcPayProcessed,null!=this.drcPayProcessed&&this.drcPayProcessed.length>0?(this.othMPField.IsAlreadyProcessed=!0,this.othMPField.DocStatus="["+this.drcPayProcessed[0].DocStatus.toString()+"]",this.othMPField.DocID=parseInt(this.drcPayProcessed[0].DocID),this.othMPField.DocNo=this.drcPayProcessed[0].DocNumber.toString(),this.othMPField.StatusID=parseInt(this.drcPayProcessed[0].StatusID)):(this.othMPField.IsAlreadyProcessed=!1,this.othMPField.DocStatus="[UnPosted]",this.othMPField.DocID=0,this.othMPField.DocNo="",this.othMPField.StatusID=0),this.IsPostFullAttendance&&(this.othMPField.IsAlreadyProcessed=!1),this.dsAllEmpsData.Tables[7].length>0&&(this.othMPField.WID=parseInt(this.dsAllEmpsData.Tables[7][0].WorkFlowID)),this.drcAssLeaves=this.dsAllEmpsData.Tables[8].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcApprLoans=this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcApprLoans=this.drcApprLoans,this.drcLoanRepay=this.dsAllEmpsData.Tables[11].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcLoanRepay=this.drcLoanRepay,1==this.IsArrearclick&&(this.dsAllEmpsData.Tables[12][0].GradeID=this.ArrGradeID),this.drcEmpGrades=this.dsAllEmpsData.Tables[12].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcPTDimension=this.dsAllEmpsData.Tables[13].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcPTDimension=this.drcPTDimension,this.drcDailyAtten=this.dsAllEmpsData.Tables[14].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.IsPostFullAttendance&&0==this.drcDailyAtten.length&&a.a.SessionManager.Preferences.ContainsKey("ProcessMonthlyPayrollonlyifDailyAttendanceDataexists")&&"True"==a.a.SessionManager.Preferences.ProcessMonthlyPayrollonlyifDailyAttendanceDataexists.toString()){this.othMPField.sErrorMessage="Attendance data not found for the Employee";continue}if(this.drcDailyDays=this.dsAllEmpsData.Tables[15].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcRecData=this.dsAllEmpsData.Tables[16].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.EmpGradeID=null!=this.drcEmpGrades&&this.drcEmpGrades.length>0?parseInt(this.drcEmpGrades[0].GradeID):1,this.othMPField.GradeID="True"==a.a.SessionManager.Preferences.GradeWiseMonthlyPayroll.toString()&&null!=this.drcEmpGrades&&this.drcEmpGrades.length>0?parseInt(this.drcEmpGrades[0].GradeID):1,1==this.IsArrearclick&&null!=this.drcArrStructure&&this.drcArrStructure.length>0){this.dsAllEmpsData.Tables[1].Clear();for(let t=0;t<this.drcArrStructure.length;t++)this.dsAllEmpsData.Tables[1].push(this.drcArrStructure[t])}if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>t.GradeID==this.othMPField.GradeID),0==this.drcStructure.length){this.othMPField.sErrorMessage="Payroll Structure not found for this Employee";continue}if(this.drcVacations=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcArrears=this.dsAllEmpsData.Tables[19],this.drcArrears=this.dsAllEmpsData.Tables[19].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcArrears=this.drcArrears,this.drcAdjustments=this.dsAllEmpsData.Tables[20],this.drcAdjustments=this.dsAllEmpsData.Tables[20].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcAdjustments=this.drcAdjustments,this.drcLoanCrNetSalLessZero=this.dsAllEmpsData.Tables[21].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcLoanCrNetSalLessZero=this.drcLoanCrNetSalLessZero,this.drcDues=this.dsAllEmpsData.Tables[22].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcDues=this.drcDues,this.drcDependentInfo=this.dsAllEmpsData.Tables[23].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcAsOnDim=this.dsAllEmpsData.Tables[24],this.drcAsOnDim=this.dsAllEmpsData.Tables[24].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcAsOnDim=this.drcAsOnDim,null!=this.dsAllEmpsData.Tables[26]&&this.dsAllEmpsData.Tables[26].length>0&&(this.VacationFieldSNo=parseInt(this.dsAllEmpsData.Tables[26][0].VacationField.toString()),this.othMPField.VacationComponentID=this.VacationFieldSNo),this.drcLEPay=this.dsAllEmpsData.Tables[27].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcADWData=this.dsAllEmpsData.Tables[28],this.drcADWData=this.dsAllEmpsData.Tables[28].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.othMPField.drcADWData=this.drcADWData,this.IsPostFullAttendance&&this.IsPostBasedOnAttDimWise&&0==this.drcADWData.length){this.othMPField.sErrorMessage="Attendance Dimension wise data not found for the Employee";continue}if(this.drcVacFld=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcLatesProc=this.dsAllEmpsData.Tables[31].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcVacReJoin=this.dsAllEmpsData.Tables[32].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcVaclateReJoin=this.dsAllEmpsData.Tables[33].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcApprisal=this.dsAllEmpsData.Tables[34].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcApprisal.length>0&&(this.othMPField.AppraisalMonth=new Date(this.drcApprisal[0].CEffectFrom)),this.drcAllApprisal=this.dsAllEmpsData.Tables[35].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcAllApprovalDoc=this.dsAllEmpsData.Tables[36].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),a.a.SessionManager.Preferences.ContainsKey("DonotProcessPayrollIfDocumentareinApproval")&&"True"==a.a.SessionManager.Preferences.DonotProcessPayrollIfDocumentareinApproval.toString()&&null!=this.drcAllApprovalDoc&&this.drcAllApprovalDoc.length>0){this.othMPField.sErrorMessage="Payroll can not Process Documents are in Approval";continue}this.drcPrevMonthPayroll=this.dsAllEmpsData.Tables[38];let E=this.dsAllEmpsData.Tables[38].filter(t=>t.EmpSeqNo==this.sEmpSeqNo);if(a.a.SessionManager.Preferences.ContainsKey("DonotprocesspayrollifPreviousPayrollMonthnotprocessed")&&"True"==a.a.SessionManager.Preferences.DonotprocesspayrollifPreviousPayrollMonthnotprocessed.toString()){let t=new Date(this.othMPField.DateOfJoining.getFullYear(),this.othMPField.DateOfJoining.getMonth(),1);if(0==E.length&&this.PayrollMonth!=t){this.othMPField.sErrorMessage="Previous Month Payroll is Not Processed";continue}}if(this.lstVacations.Clear(),this.othMPField.dGosi=0,null!=this.drcAllApprisal&&this.drcAllApprisal.length>0&&(this.drcAllApprisal=this.dsAllEmpsData.Tables[35].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.CEffectFrom<=this.PayrollMonthEnd.ToString("dd MMM yyyy")),null!=this.drcAllApprisal&&this.drcAllApprisal.length>1&&(this.drcAllApprisal.sort((t,e)=>e.CEffectFrom-t.CEffectFrom),this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>1==t.Type&&"Yes"==t.Applicable&&t.GradeID==this.othMPField.GradeID),null!=this.drcStructure&&this.drcStructure.length>0)))for(let t=0;t<this.drcStructure.length;t++)i.e.IsEmpty(a.a.SessionManager.Preferences.GosiComponent)||a.a.SessionManager.Preferences.GosiComponent!=this.drcStructure[t].ComponentID.toString()||(this.othMPField.dGosi=parseFloat(this.drcAllApprisal[1]["Earning"+parseInt(this.drcStructure[t].SNo)]));if(null!=this.drcVacFld&&this.drcVacFld.length>0){let t=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo).Compute("sum","VACDAYS");this.othMPField.dblTotMVacDays=parseFloat(t);let e=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo).Compute("sum","VACAMOUNT");this.othMPField.dblTotVacAmount=parseFloat(e);let s=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo).Compute("sum","ENCASHDAYS");this.othMPField.dblTotVacEncashDays=parseFloat(s);let a=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo).Compute("sum","ENCASHAMOUNT");this.othMPField.dblTotVacEncashAmount=parseFloat(a);let i=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo).Compute("sum","EXCESSDAYS");this.othMPField.dblTotVacExcessDays=parseFloat(i);let l=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo).Compute("sum","EXCESSAMOUNT");this.othMPField.dblTotVacExcessAmount=parseFloat(l);let o=this.dsAllEmpsData.Tables[30].filter(t=>t.EmpSeqNo==this.sEmpSeqNo).Compute("sum","NETTOTAL");this.othMPField.dblTotVacNetAmount=parseFloat(o)}if(null!=this.drcVacReJoin&&this.drcVacReJoin.length>0&&a.a.SessionManager.Preferences.ContainsKey("AllowPayrollProcessIfEmpOnVacation")&&"False"==a.a.SessionManager.Preferences.AllowPayrollProcessIfEmpOnVacation.toString()){this.othMPField.sErrorMessage="Payroll can not be processed. Because Employee is on VACATION. Please enter rejoin date.";continue}if(null!=this.drcVacations&&this.drcVacations.length>0){this.dblVacationDays=this.dblVacationDaysEncash=this.dVacPayYes=this.dVacPayNo=0;for(let t=0;t<this.drcVacations.length;t++){if(this.dVacDays=0,this.oVacation=new l.d,"01 Jan 1900"==new Date(this.drcVacations[t].ReJoinDate).ToString("dd MMM yyyy")?this.oVacation.DocDate=this.PayrollMonthEnd.AddDays(1):(this.oVacation.DocDate=new Date(this.drcVacations[t].ReJoinDate),this.oVacation.ActRejoinDate=this.drcVacations[t].ReJoinDate.toString()),this.oVacation.StartDate=new Date(this.drcVacations[t].FromDate),this.oVacation.EndDate=new Date(this.drcVacations[t].ToDate),(this.oVacation.StartDate<=this.PayrollMonthStart&&this.oVacation.EndDate>=this.PayrollMonthStart||this.oVacation.StartDate<=this.PayrollMonthEnd&&this.oVacation.EndDate>=this.PayrollMonthEnd||this.PayrollMonthStart<=this.oVacation.StartDate&&this.PayrollMonthEnd>=this.oVacation.StartDate)&&!i.e.IsEmpty(this.drcVacations[t].IsEncash)&&"YES"==this.drcVacations[t].IsEncash.toString().toUpperCase()&&!i.e.IsEmpty(this.drcVacations[t].EncashedDays)){this.dblVacationDaysEncash+=parseFloat(this.drcVacations[t].EncashedDays),this.oVacation.IsEncashDays=!0,this.lstVacations.push(this.oVacation);continue}let e=0,s=new Date,a=new Date;if(this.oVacation.DocDate>=this.PayrollMonthStart&&(s=this.oVacation.EndDate>=this.PayrollMonthStart&&this.oVacation.EndDate<=this.PayrollMonthEnd?this.oVacation.EndDate.AddDays(1):this.PayrollMonthStart,a=this.oVacation.DocDate>=this.PayrollMonthStart&&this.oVacation.DocDate<=this.PayrollMonthEnd?this.oVacation.DocDate:this.PayrollMonthEnd.AddDays(1),this.oVacation.EndDate<a))for(;s<a;)e++,s=s.AddDays(1);this.oVacation.NotAttendedDays=e,this.oVacation.StartDate<=this.PayrollMonthStart&&this.oVacation.EndDate>=this.PayrollMonthStart||this.oVacation.StartDate<=this.PayrollMonthEnd&&this.oVacation.EndDate>=this.PayrollMonthEnd||this.PayrollMonthStart<=this.oVacation.StartDate&&this.PayrollMonthEnd>=this.oVacation.StartDate?(this.oVacation.ExcessDays=parseFloat(this.drcVacations[t].ExcessDays),this.dVacDays=this.oVacation.StartDate>=this.PayrollMonthStart?this.GetVacationDays(this.oVacation.StartDate,this.oVacation.EndDate<=this.PayrollMonthEnd?this.oVacation.DocDate<=this.oVacation.EndDate?this.oVacation.DocDate.AddDays(-1):this.oVacation.EndDate:this.oVacation.DocDate<=this.PayrollMonthEnd?this.oVacation.DocDate.AddDays(-1):this.PayrollMonthEnd,parseInt(this.drcVacations[t].DocID)):this.oVacation.EndDate<=this.PayrollMonthEnd?this.oVacation.DocDate<=this.oVacation.EndDate?this.oVacation.DocDate>=this.PayrollMonthStart?this.GetVacationDays(this.PayrollMonthStart,this.oVacation.DocDate.AddDays(-1),parseInt(this.drcVacations[t].DocID)):0:this.GetVacationDays(this.PayrollMonthStart,this.oVacation.EndDate,parseInt(this.drcVacations[t].DocID)):this.oVacation.DocDate<=this.oVacation.EndDate?this.oVacation.DocDate<=this.PayrollMonthEnd&&this.oVacation.DocDate>=this.PayrollMonthStart?this.GetVacationDays(this.PayrollMonthStart,this.oVacation.DocDate.AddDays(-1),parseInt(this.drcVacations[t].DocID)):this.oVacation.DocDate>=this.PayrollMonthEnd?this.GetVacationDays(this.PayrollMonthStart,this.PayrollMonthEnd,parseInt(this.drcVacations[t].DocID)):0:this.GetVacationDays(this.PayrollMonthStart,this.PayrollMonthEnd,parseInt(this.drcVacations[t].DocID)),this.oVacation.NotAttendedDays>0&&(this.dblLeavesLOP+=this.oVacation.NotAttendedDays),this.dVacDays>o&&(this.dVacDays=o),this.dblVacationDays+=this.dVacDays,this.lstVacations.push(this.oVacation),i.e.IsEmpty(this.drcVacations[t].PayWithSalary)||"YES"!=this.drcVacations[t].PayWithSalary.toString().toUpperCase()?this.dVacPayNo+=this.dVacDays:this.dVacPayYes+=this.dVacDays):this.oVacation.NotAttendedDays>0&&(this.oVacation.DocDate>=this.PayrollMonthStart&&this.oVacation.DocDate<=this.PayrollMonthEnd||this.oVacation.EndDate<=this.PayrollMonthStart&&this.oVacation.DocDate>=this.PayrollMonthEnd)&&(this.dblLeavesLOP+=this.oVacation.NotAttendedDays)}if(this.lstVacations.length>0&&!this.lstVacations[this.lstVacations.length-1].IsEncashDays&&this.lstVacations[this.lstVacations.length-1].StartDate<=this.PayrollMonthStart&&this.lstVacations[this.lstVacations.length-1].DocDate==this.PayrollMonthEnd.AddDays(1))if(null!=this.lstVacations[this.lstVacations.length-1].ActRejoinDate&&""!=this.lstVacations[this.lstVacations.length-1].ActRejoinDate&&new Date(this.lstVacations[this.lstVacations.length-1].ActRejoinDate)==this.lstVacations[this.lstVacations.length-1].DocDate);else if(a.a.SessionManager.Preferences.ContainsKey("AllowPayrollProcessIfEmpOnVacation")&&"False"==a.a.SessionManager.Preferences.AllowPayrollProcessIfEmpOnVacation.toString()){this.othMPField.sErrorMessage="Payroll can not be processed. Because Employee is on VACATION. Please enter rejoin date.";continue}}if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>t.GradeID==this.othMPField.GradeID),this.drcPr=this.dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&11==t.VoucherType),this.dsEarDedExtra=[],null!=this.drcPr&&this.drcPr.length>0&&(i.e.IsEmpty(this.drcPr[0].Remarks)||this.dsEarDedExtra.ReadXml(this.drcPr[0].Remarks.toString())),this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>1==t.Type&&"Yes"==t.Applicable&&"OverTime"!=t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.drcStructure&&this.drcStructure.length>0)for(let t=0;t<this.drcStructure.length;t++){if(this.oCPField=new l.a,this.oCPField.SNo=parseInt(this.drcStructure[t].SNo),this.oCPField.ComponentID=parseInt(this.drcStructure[t].ComponentID),this.oCPField.ComponentName=i.e.String(this.drcStructure[t].ComponentName),this.oCPField.Formula=i.e.String(this.drcStructure[t].Formula),this.oCPField.AddToNet=i.e.String(this.drcStructure[t].AddToNet),this.oCPField.ROff=parseFloat(this.drcStructure[t].ROff),this.oCPField.FieldType=i.e.String(this.drcStructure[t].FieldType),this.oCPField.MaxOTHrs=parseFloat(this.drcStructure[t].MaxOTHrs),this.oCPField.CalculateArrears=i.e.String(this.drcStructure[t].CalculateArrears),this.oCPField.CalculateAdjustments=i.e.String(this.drcStructure[t].CalculateAdjustments),"Monthly"==this.oCPField.FieldType?(this.oCPField.IsEditable=1,this.oCPField.IsReadOnly=0):(this.oCPField.IsEditable=0,this.oCPField.IsReadOnly=1),this.oCPField.Behaviour=i.e.IsEmpty(this.drcStructure[t].Behaviour)?"":this.drcStructure[t].Behaviour.toString(),"Accruals"!=this.oCPField.Behaviour&&"Accruals-AccumulateForPreviousYears"!=this.oCPField.Behaviour||(this.oCPField.IsAccrualType=!0,"Accruals-AccumulateForPreviousYears"==this.oCPField.Behaviour&&this.lstAccrAccumulateSNos.push(this.oCPField.SNo)),this.othMPField.IsAlreadyProcessed)null!=this.drcPr&&this.drcPr.length>0?(this.oCPField.dActual=null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dArrear=null!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcExchRT"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals).Replace(",",""):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=null!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals).Replace(",",""):(0).ToString(a.a.SessionManager.sPayrollDecimals),null!=this.dsEarDedExtra&&null!=this.dsEarDedExtra.Tables&&this.dsEarDedExtra.Tables.length>0&&(this.drcEDExtra=this.dsEarDedExtra.Tables[0].filter(t=>t.ComponentID==this.oCPField.ComponentID),null!=this.drcEDExtra&&this.drcEDExtra.length>0&&(this.oCPField.sEarDedType=this.drcEDExtra[0].EarDedType.toString()))):(this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals));else{if("EmployeeMaster"==this.oCPField.FieldType)this.oCPField.dActual=this.drcEmpPay.length>0?parseFloat(this.drcEmpPay[0]["Earning"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=this.oCPField.dActual;else if("Monthly"==this.oCPField.FieldType){if(this.drcRecData.length>0){let t=this.dsAllEmpsData.Tables[16].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ComponentID==this.oCPField.ComponentID).Compute("sum","Amount");null!=t&&""!=t.toString().Trim()?(this.oCPField.dActual=parseFloat(t).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=parseFloat(t).ToString(a.a.SessionManager.sPayrollDecimals)):(this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals))}else this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);let t=this.dsAllEmpsData.Tables[1];if(t=t.filter(t=>t.GradeID==this.othMPField.GradeID&&4==t.Type&&t.LEDaysField==this.oCPField.ComponentID),t.length>0&&(this.drcLEPay=this.dsAllEmpsData.Tables[27].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcLEPay.length>0)){let e=[];for(let s=0;s<t.length;s++){let a=[];a=this.drcLEPay.filter(e=>e.EmpSeqNo==this.sEmpSeqNo&&e.LeaveComponentID==t[s].ComponentID.toString()),a.length>0&&e.push(a)}if(e.length>0){let t=e.Compute("sum","AppliedDays");null!=t&&null!=t&&""!=t.toString().Trim()&&(this.oCPField.dActual=(parseFloat(this.oCPField.dActual)+parseFloat(t)).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(parseFloat(this.oCPField.dEarned)+parseFloat(t)).ToString(a.a.SessionManager.sPayrollDecimals))}}if(t=this.dsAllEmpsData.Tables[1],t=t.filter(t=>t.GradeID==this.othMPField.GradeID&&4==t.Type&&t.LEAmountField==this.oCPField.ComponentID),t.length>0&&(this.drcLEPay=this.dsAllEmpsData.Tables[27].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.drcLEPay.length>0)){let e=[];for(let s=0;s<t.length;s++){let a=[];a=this.drcLEPay.filter(e=>e.EmpSeqNo==this.sEmpSeqNo&&e.LeaveComponentID==t[s].ComponentID.toString()),a.length>0&&e.push(a)}if(e.length>0){let t=e.Compute("sum","LEAmount");null!=t&&null!=t&&""!=t.toString().Trim()&&(this.oCPField.dActual=(parseFloat(this.oCPField.dActual)+parseFloat(t)).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(parseFloat(this.oCPField.dEarned)+parseFloat(t)).ToString(a.a.SessionManager.sPayrollDecimals))}}}else this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals)}this.arrLstCPFields[this.iEmpIndex][0].push(this.oCPField)}if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>1==t.Type&&"Yes"==t.Applicable&&"OverTime"==t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.drcStructure&&this.drcStructure.length>0)for(let t=0;t<this.drcStructure.length;t++){if(this.oCPField=new l.a,this.oCPField.SNo=parseInt(this.drcStructure[t].SNo),this.oCPField.ComponentID=parseInt(this.drcStructure[t].ComponentID),this.oCPField.ComponentName=i.e.String(this.drcStructure[t].ComponentName),this.oCPField.Formula=i.e.String(this.drcStructure[t].Formula),this.oCPField.AddToNet=i.e.String(this.drcStructure[t].AddToNet),this.oCPField.FieldType=i.e.String(this.drcStructure[t].FieldType),this.oCPField.ROff=parseFloat(this.drcStructure[t].ROff),this.oCPField.IsEditable=1,this.oCPField.IsReadOnly=0,this.othMPField.IsAllowOT)if(this.othMPField.IsAlreadyProcessed)null!=this.drcPr&&this.drcPr.length>0?(this.oCPField.dActual=null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals2):(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals):(0).ToString(a.a.SessionManager.sPayrollDecimals)):(this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals));else if(this.IsPostFullAttendance)if(this.IsPostBasedOnDailyAttendance){let e=i.e.DTComputeSUM(this.dsAllEmpsData.Tables[14].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),"OT"+(t+1),!0);this.oCPField.dActual=e.ToString(a.a.SessionManager.sPayrollDecimals2)}else if(this.IsPostBasedOnAttDimWise){let e=i.e.DTComputeSUM(this.drcADWData.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),"OT"+(t+1),!0);this.oCPField.dActual=e.ToString(a.a.SessionManager.sPayrollDecimals2)}else this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);else if("True"==a.a.SessionManager.Preferences.GetDailyAttendanceDataInMonthlyPayroll){let e=i.e.DTComputeSUM(this.dsAllEmpsData.Tables[14].filter(t=>t.EmpSeqNo==this.sEmpSeqNo),"OT"+(t+1),!0);this.oCPField.dActual=e.ToString(a.a.SessionManager.sPayrollDecimals2)}else this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);else this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[this.iEmpIndex][1].push(this.oCPField)}if(this.drcPr=this.dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&12==t.VoucherType),this.dsEarDedExtra=[],null!=this.drcPr&&this.drcPr.length>0&&(i.e.IsEmpty(this.drcPr[0].Remarks)||this.dsEarDedExtra.ReadXml(this.drcPr[0].Remarks.toString())),this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>2==t.Type&&"Yes"==t.Applicable&&"OverTime"!=t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.drcStructure&&this.drcStructure.length>0)for(let t=0;t<this.drcStructure.length;t++){if(this.oCPField=new l.a,this.oCPField.SNo=parseInt(this.drcStructure[t].SNo),this.oCPField.ComponentID=parseInt(this.drcStructure[t].ComponentID),this.oCPField.ComponentName=i.e.String(this.drcStructure[t].ComponentName),this.oCPField.Formula=i.e.String(this.drcStructure[t].Formula),this.oCPField.AddToNet=i.e.String(this.drcStructure[t].AddToNet),this.oCPField.FieldType=i.e.String(this.drcStructure[t].FieldType),this.oCPField.ROff=parseFloat(this.drcStructure[t].ROff),this.oCPField.MaxOTHrs=parseFloat(this.drcStructure[t].MaxOTHrs),this.oCPField.CalculateArrears=i.e.String(this.drcStructure[t].CalculateArrears),this.oCPField.CalculateAdjustments=i.e.String(this.drcStructure[t].CalculateAdjustments),"PT"==this.oCPField.ComponentName&&(this.othMPField.PTIndex=t),"Monthly"==this.oCPField.FieldType?(this.oCPField.IsEditable=1,this.oCPField.IsReadOnly=0):(this.oCPField.IsEditable=0,this.oCPField.IsReadOnly=1),this.othMPField.IsAlreadyProcessed)null!=this.drcPr&&this.drcPr.length>0?(this.oCPField.dActual=null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dArrear=null!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcExchRT"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals).Replace(",",""):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=null!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals).Replace(",",""):(0).ToString(a.a.SessionManager.sPayrollDecimals),null!=this.dsEarDedExtra&&null!=this.dsEarDedExtra.Tables&&this.dsEarDedExtra.Tables.length>0&&(this.drcEDExtra=this.dsEarDedExtra.Tables[0].filter(t=>t.ComponentID==this.oCPField.ComponentID),null!=this.drcEDExtra&&this.drcEDExtra.length>0&&(this.oCPField.sEarDedType=this.drcEDExtra[0].EarDedType.toString()))):(this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals));else{if("EmployeeMaster"==this.oCPField.FieldType)this.oCPField.dActual=this.drcEmpPay.length>0?parseFloat(this.drcEmpPay[0]["Deduction"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals):(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=this.oCPField.dActual;else if("Monthly"==this.oCPField.FieldType)if(this.drcRecData.length>0){let t=this.dsAllEmpsData.Tables[16].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ComponentID==this.oCPField.ComponentID).Compute("sum","Amount");null!=t&&""!=t.toString().Trim()?(this.oCPField.dActual=parseFloat(t).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=parseFloat(t).ToString(a.a.SessionManager.sPayrollDecimals)):(this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals))}else this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);else this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals)}this.arrLstCPFields[this.iEmpIndex][2].push(this.oCPField)}if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>2==t.Type&&"Yes"==t.Applicable&&"OverTime"==t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.drcStructure&&this.drcStructure.length>0)for(let t=0;t<this.drcStructure.length;t++)this.oCPField=new l.a,this.oCPField.SNo=parseInt(this.drcStructure[t].SNo),this.oCPField.ComponentID=parseInt(this.drcStructure[t].ComponentID),this.oCPField.ComponentName=i.e.String(this.drcStructure[t].ComponentName),this.oCPField.Formula=i.e.String(this.drcStructure[t].Formula),this.oCPField.AddToNet=i.e.String(this.drcStructure[t].AddToNet),this.oCPField.FieldType=i.e.String(this.drcStructure[t].FieldType),this.oCPField.ROff=parseFloat(this.drcStructure[t].ROff),this.oCPField.IsEditable=1,this.oCPField.IsReadOnly=0,this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[this.iEmpIndex][3].push(this.oCPField);this.othMPField.iExtLoansCnt=0;let F=0,T=0,f=0;if(this.drcPr=this.dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&13==t.VoucherType),this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>3==t.Type&&t.GradeID==this.othMPField.GradeID),null!=this.drcStructure&&this.drcStructure.length>0){let t=0;for(let e=0;e<this.drcStructure.length;e++){this.oCPField=new l.a,this.oCPField.SNo=parseInt(this.drcStructure[e].SNo),this.oCPField.ComponentID=parseInt(this.drcStructure[e].ComponentID),this.oCPField.ComponentName=i.e.String(this.drcStructure[e].ComponentName),this.oCPField.Formula=i.e.String(this.drcStructure[e].Formula),this.oCPField.AddToNet=i.e.String(this.drcStructure[e].AddToNet),this.oCPField.FieldType=i.e.String(this.drcStructure[e].FieldType),this.oCPField.ROff=""==i.e.String(this.drcStructure[e].ROff)?0:parseFloat(this.drcStructure[e].ROff),this.oCPField.IsEditable=0,this.oCPField.IsReadOnly=1,this.oCPField.IsVisible=1;let s="",o=this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID).Compute("max","DeductionMonth");if(i.e.IsEmpty(o)||(this.MaxDeductionMonth=new Date(o)),a.a.SessionManager.Preferences.ContainsKey("ShowLoanBalRespDedMonthWhilePayProc")&&"True"==a.a.SessionManager.Preferences.ShowLoanBalRespDedMonthWhilePayProc&&this.PayrollMonth<=this.MaxDeductionMonth?this.drcTmp=this.dsAllEmpsData.Tables[10].filter(this.othMPField.IsAlreadyProcessed?t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&new Date(t.DeductionMonth).ToString("dd/MMM/yyyy")==this.PayrollMonth.ToString("dd/MMM/yyyy"):t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.InstBalance>0&&new Date(t.DeductionMonth).ToString("dd/MMM/yyyy")==this.PayrollMonth.ToString("dd/MMM/yyyy")):(s="EmpSeqNo="+this.sEmpSeqNo+" AND LoanCompID="+this.oCPField.ComponentID+" AND InstBalance>0 AND DeductionMonth<='"+this.PayrollMonth.ToString("dd/MMM/yyyy")+"'",this.drcTmp=this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.InstBalance>0&&new Date(t.DeductionMonth).ToString("dd/MMM/yyyy")<=this.PayrollMonth.ToString("dd/MMM/yyyy"))),null!=this.drcTmp&&this.drcTmp.length>0&&this.drcTmp.sort((t,e)=>t.DeductionMonth-e.DeductionMonth),null!=this.drcTmp&&this.drcTmp.length>0){t++,T=f=0,this.oCPField.LoanSlNo=t.toString(),this.oCPField.LoanDocNo=this.drcTmp[0].DocNo.toString(),this.oCPField.LoanNodeNo=this.drcTmp[0].NodeNo.toString(),this.oCPField.LoanInvDocDetailsID=this.drcTmp[0].InvDocDetailsID.toString(),this.oCPField.LoanApprovedAmt=this.drcTmp[0].ApprovedAmt.toString();let e="";if(1==this.drcTmp.length||a.a.SessionManager.Preferences.ContainsKey("ShowLoanBalRespDedMonthWhilePayProc")&&"True"==a.a.SessionManager.Preferences.ShowLoanBalRespDedMonthWhilePayProc?(this.oCPField.LoanInstNo=this.drcTmp[0].InstallmentNo.toString()+"/"+this.drcTmp[0].NoOfInstallments.toString(),this.oCPField.LoanActInstNo=this.drcTmp[0].InstallmentNo.toString(),e=this.drcTmp[0].InstallmentNo.toString()):(this.oCPField.LoanInstNo=this.drcTmp[this.drcTmp.length-1].InstallmentNo.toString()+"/"+this.drcTmp[0].NoOfInstallments.toString(),this.oCPField.LoanActInstNo=this.drcTmp[this.drcTmp.length-1].InstallmentNo.toString(),e=this.drcTmp[this.drcTmp.length-1].InstallmentNo.toString()),this.othMPField.IsAlreadyProcessed&&this.drcPr.length>0)this.oCPField.LoanActInstAmt=parseFloat(this.drcPr[0]["dcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.LoanInstAmt=parseFloat(this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.LoanBalAmt=parseFloat(this.drcPr[0]["dcExchRT"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.LoanPayStatus=null==this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]?"0":this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo].toString();else{let t;t=a.a.SessionManager.Preferences.ContainsKey("ShowLoanBalRespDedMonthWhilePayProc")&&"True"==a.a.SessionManager.Preferences.ShowLoanBalRespDedMonthWhilePayProc&&this.PayrollMonth>this.MaxDeductionMonth?this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.DocNo==this.oCPField.LoanDocNo).Compute("sum","Paid"):this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.DocNo==this.oCPField.LoanDocNo&&t.InstallmentNo<=e).Compute("sum","Paid"),null!=t&&null!=t&&(T=parseFloat(t)),F=parseFloat(this.oCPField.LoanApprovedAmt)-T,t=a.a.SessionManager.Preferences.ContainsKey("ShowLoanBalRespDedMonthWhilePayProc")&&"True"==a.a.SessionManager.Preferences.ShowLoanBalRespDedMonthWhilePayProc?this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.DocNo==this.oCPField.LoanDocNo&&t.InstallmentNo==e).Compute("sum","InstBalance"):this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.DocNo==this.oCPField.LoanDocNo&&t.InstallmentNo<=e).Compute("sum","InstBalance"),null!=t&&null!=t&&(f=parseFloat(t)),this.oCPField.LoanActInstAmt=f.toString(),this.oCPField.LoanInstAmt=f.ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.LoanBalAmt=F.ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.LoanPayStatus="0"}this.oCPField.IsVisible=1,this.oCPField.dActual=parseFloat(this.oCPField.LoanActInstAmt).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=parseFloat(this.oCPField.LoanInstAmt).ToString(a.a.SessionManager.sPayrollDecimals),this.othMPField.iExtLoansCnt++}else this.oCPField.IsVisible=0,this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals);this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[this.iEmpIndex][4].push(this.oCPField)}}if(this.drcPr=this.dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&14==t.VoucherType),this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>4==t.Type&&t.GradeID==this.othMPField.GradeID),null!=this.drcStructure&&this.drcStructure.length>0){let t=a.a.SessionManager.Preferences.ConsiderLOPBasedOn.toString(),e=null;t.length>0&&(e=t.split(","));let s,o=0,r=0,n=0,d=0,h=0,c=0;for(let g=0;g<this.drcStructure.length;g++){if(this.oCPField=new l.a,this.oCPField.SNo=parseInt(this.drcStructure[g].SNo),this.oCPField.ComponentID=parseInt(this.drcStructure[g].ComponentID),this.oCPField.ComponentName=i.e.String(this.drcStructure[g].ComponentName),this.oCPField.Formula=i.e.String(this.drcStructure[g].Formula),this.oCPField.AddToNet=i.e.String(this.drcStructure[g].AddToNet),this.oCPField.FieldType=i.e.String(this.drcStructure[g].FieldType),this.oCPField.ROff=""==i.e.String(this.drcStructure[g].ROff)?0:parseFloat(this.drcStructure[g].ROff),this.oCPField.IsEditable=0,this.oCPField.IsReadOnly=1,this.oCPField.Percentage=parseFloat(this.drcStructure[g].Percentage),h=0,this.othMPField.IsAlreadyProcessed)null!=this.drcPr&&this.drcPr.length>0?(this.oCPField.LeaveTotOPBal=null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals2):(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveTaken=null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcCalcNum"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcCalcNum"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals2):(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveMonOPBal=null!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcExchRT"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcExchRT"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals2):(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveNetBal=null!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]&&null!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]&&""!=this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo].toString()?parseFloat(this.drcPr[0]["dcCalcNumFC"+this.oCPField.SNo]).ToString(a.a.SessionManager.sPayrollDecimals2):(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.ComponentID==this.VacationFieldSNo&&(this.othMPField.dblTotVacDays=parseFloat(this.oCPField.LeaveTaken))):(this.oCPField.LeaveTotOPBal=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveMonOPBal=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveTaken=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveNetBal=(0).ToString(a.a.SessionManager.sPayrollDecimals2)),this.oCPField.ActLeaveTaken=this.oCPField.LeaveTaken;else if(this.oCPField.ComponentID==this.VacationFieldSNo){let t=new Date(this.PayrollMonthStart.getFullYear(),this.PayrollMonthStart.getMonth(),this.PayrollMonthStart.DaysInMonth());this.oCPField.LeaveTotOPBal=this.GetVacationAvailability(t,this.VacationFieldSNo),this.oCPField.LeaveTotOPBal=(parseFloat(this.oCPField.LeaveTotOPBal)+this.dblVacationDays+this.dblVacationDaysEncash).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveMonOPBal=this.oCPField.LeaveTotOPBal,this.oCPField.LeaveTaken=(this.dblVacationDays+this.dblVacationDaysEncash).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.ActLeaveTaken=this.dblVacationDays.ToString(a.a.SessionManager.sPayrollDecimals2),this.othMPField.dblTotVacDays=this.dblVacationDays,this.oCPField.LeaveNetBal=(parseFloat(this.oCPField.LeaveTotOPBal)-parseFloat(this.oCPField.LeaveTaken)).ToString(a.a.SessionManager.sPayrollDecimals2)}else{if(null!=this.drcStructure[g].LeaveOthFeatures&&null!=this.drcStructure[g].LeaveOthFeatures&&this.drcStructure[g].LeaveOthFeatures.toString().toUpperCase().Contains("#REJOIN#")){if(this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ComponentID==this.oCPField.ComponentID&&t.FromDate<this.PayrollMonthStart.ToString("dd MMM yyyy")&&"LatesProcessing"!=t.PostedFrom),this.drcApprLeaves.length>0&&""==i.e.String(this.drcApprLeaves[0].RejoinDate)){this.othMPField.sErrorMessage="Payroll can not be processed. Because Employee is on "+this.oCPField.ComponentName+". Please enter rejoin date.";break}let t,e,s;this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ComponentID==this.oCPField.ComponentID&&t.FromDate>=this.PayrollMonthStart.ToString("dd MMM yyyy")&&t.ToDate<=this.PayrollMonthEnd.ToString("dd MMM yyyy")&&"LatesProcessing"!=t.PostedFrom);for(let l=0;l<this.drcApprLeaves.length;l++){t=new Date(this.drcApprLeaves[l].FromDate),e=new Date(this.drcApprLeaves[l].ToDate),s=""==i.e.String(this.drcApprLeaves[l].RejoinDate)?this.PayrollMonthEnd.AddDays(1):new Date(this.drcApprLeaves[l].RejoinDate);let o=0,r=0,n=e.AddDays(1);if(e<s)for(;n<=s;)o++,n=n.AddDays(1);if(r=o-1,r>0&&(this.dblLeavesLOP+=r),t<=this.PayrollMonthStart&&s==this.PayrollMonthEnd.AddDays(1)&&a.a.SessionManager.Preferences.ContainsKey("AllowPayrollProcessIfEmpOnVacation")&&"False"==a.a.SessionManager.Preferences.AllowPayrollProcessIfEmpOnVacation.toString()){this.othMPField.sErrorMessage="Payroll can not be processed. Because Employee is on "+this.oCPField.ComponentName+". Please enter rejoin date.";break}}}if(this.drcAssLeaves=this.dsAllEmpsData.Tables[8].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LeaveType==this.oCPField.ComponentName),o=this.drcAssLeaves.length>0?parseFloat(this.drcAssLeaves[0].Total):0,s=this.dsAllEmpsData.Tables[25],s=s.filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LeaveType==this.oCPField.ComponentName),s.length>0)for(let e=0;e<s.length;e++)h+=parseFloat(s[e].AppliedDays);o-=h;let t={dLLDed:c};r=this.AggregateLeaves(this.oCPField.ComponentID,t),c=t.dLLDed,n=this.AggregateLeavesBeforePayroll(this.oCPField.ComponentID),(null==e||null!=e&&!e.Contains(this.oCPField.ComponentID.toString()))&&(y+=c),null!=e&&e.Contains(this.oCPField.ComponentID.toString())?(this.oCPField.LeaveTotOPBal=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveMonOPBal=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveTaken=r.ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveNetBal=(0).ToString(a.a.SessionManager.sPayrollDecimals2)):(this.oCPField.LeaveTotOPBal=(o-n).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveMonOPBal=d.ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveTaken=r.ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveNetBal=(o-n-r).ToString(a.a.SessionManager.sPayrollDecimals2)),this.oCPField.ActLeaveTaken=this.oCPField.LeaveTaken}null!=e&&e.Contains(this.oCPField.ComponentID.toString())?this.dblLeavesLOP+=parseFloat(this.oCPField.LeaveTaken):D+=parseFloat(this.oCPField.ActLeaveTaken),this.oCPField.dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dArrear=(0).ToString(a.a.SessionManager.sPayrollDecimals2),this.oCPField.dAdjusted=(0).ToString(a.a.SessionManager.sPayrollDecimals2),(null==e||null!=e&&!e.Contains(this.oCPField.ComponentID.toString()))&&(this.oCPField.ComponentID==this.VacationFieldSNo?this.dblVacationDays>0&&this.oCPField.Percentage>0&&(u+=this.dblVacationDays*this.oCPField.Percentage/100):parseFloat(this.oCPField.LeaveTaken)>0&&this.oCPField.Percentage>0&&(u+=parseFloat(this.oCPField.LeaveTaken)*this.oCPField.Percentage/100)),this.arrLstCPFields[this.iEmpIndex][5].push(this.oCPField)}}this.othMPField.dblLeavesLOP=this.dblLeavesLOP,g=this.dblLeavesLOP,this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>t.GradeID==this.othMPField.GradeID),this.drcPr=this.dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&11==t.VoucherType);let A=this.dsDocDesig.Tables[0];if(A=A.filter(t=>1==t.IsColumnUserDefined&&(2==t.SectionID&&"H"==t.SectionName||3==t.SectionID)),null!=A&&A.length>0)for(let t=0;t<A.length;t++)this.oCPField=new l.a,this.oCPField.ExtraFieldSNo=A[t].SysColumnName.toString().Replace("dcAlpha","").Replace("dcCCNID",""),this.oCPField.ExtraFieldName=A[t].SysColumnName.toString(),this.oCPField.ExtraFieldCaption=A[t].UserColumnName.toString(),this.oCPField.ExtraFieldValue="EMPTY",this.oCPField.ExtraFieldDataType=A[t].ColumnDataType.toString().toUpperCase(),this.oCPField.ExtraFieldUserColumnType=A[t].UserColumnType.toString().toUpperCase(),this.othMPField.IsAlreadyProcessed&&null!=this.drcPr&&this.drcPr.length>0&&null!=this.drcPr[0][this.oCPField.ExtraFieldName]&&null!=this.drcPr[0][this.oCPField.ExtraFieldName]&&(this.oCPField.ExtraFieldValue=this.drcPr[0][this.oCPField.ExtraFieldName].toString()),this.arrLstCPFields[this.iEmpIndex][6].push(this.oCPField);if(this.drcPr=this.dsAllEmpsData.Tables[6].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&11==t.VoucherType),this.lstHolidays.Clear(),null!=this.drcHolidayDef&&this.drcHolidayDef.length>0)for(let t=0;t<this.drcHolidayDef.length;t++)this.lstHolidays.push(new Date(this.drcHolidayDef[t].HolidayDate));if(this.othMPField.sRemarks="",this.othMPField.IsAlreadyProcessed)null!=this.drcPr&&this.drcPr.length>0&&(P=parseFloat(this.drcPr[0].dcAlpha5),D=parseFloat(this.drcPr[0].dcAlpha6),u=null!=this.drcPr[0].dcAlpha24&&null!=this.drcPr[0].dcAlpha24&&""!=this.drcPr[0].dcAlpha24.toString()?parseFloat(this.drcPr[0].dcAlpha24):0,d=parseFloat(this.drcPr[0].dcAlpha7),h=parseFloat(this.drcPr[0].dcAlpha8),g=parseFloat(this.drcPr[0].dcAlpha9),c=parseFloat(this.drcPr[0].dcAlpha10),null!=this.drcPr[0].CommonNarration&&null!=this.drcPr[0].CommonNarration&&(this.othMPField.sRemarks=this.drcPr[0].CommonNarration.toString()));else{c+=this.GetUnpaidDays();let t=this.othMPField.DateOfJoining>this.PayrollMonthStart?this.othMPField.DateOfJoining:this.PayrollMonthStart,e=this.othMPField.DateOfRelieve<this.PayrollMonthEnd?this.othMPField.DateOfRelieve:this.PayrollMonthEnd;if(r=-1,n=-1,this.lstWeekoff.Clear(),this.drcWOffDef.length>0)d=this.CalculateWeeklyOffsFromDef();else{let s="",l="";switch(s="NONE"!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()?this.drcAllEmpsData[0].WeeklyOff1.toString():a.a.SessionManager.Preferences.WeeklyOff1.toString(),"NONE"!=this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()?this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()!=s.toUpperCase()&&(l=this.drcAllEmpsData[0].WeeklyOff2.toString()):l=a.a.SessionManager.Preferences.WeeklyOff2.toString(),s){case"Sunday":r=0;break;case"Monday":r=1;break;case"Tuesday":r=2;break;case"Wednesday":r=3;break;case"Thursday":r=4;break;case"Friday":r=5;break;case"Saturday":r=6}switch(l){case"Sunday":n=0;break;case"Monday":n=1;break;case"Tuesday":n=2;break;case"Wednesday":n=3;break;case"Thursday":n=4;break;case"Friday":n=5;break;case"Saturday":n=6}if(-1!=r){let s=t;for(s.getDay()<r?s=s.AddDays(r-s.getDay()):s.getDay()>r&&(s=s.AddDays(7-(s.getDay()-r)));s<=e;)if(this.lstHolidays.Contains(s))s=s.AddDays(7);else if(this.lstWeekoff.Contains(s))s=s.AddDays(7);else{if(this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.FromDate<=s.ToString("dd MMM yyyy")&&t.ToDate>=s.ToString("dd MMM yyyy")&&"LatesProcessing"!=t.PostedFrom),0==this.drcApprLeaves.length)if(null!=this.lstVacations&&this.lstVacations.length>0)for(let t=0;t<this.lstVacations.length;t++)this.lstVacations[t].IsEncashDays||this.lstWeekoff.Contains(s)||(this.oVacation=this.lstVacations[t],null!=this.oVacation?this.oVacation.StartDate<=s&&this.oVacation.EndDate>=s?(this.ExcludeWeeklyOff&&d++,this.lstWeekoff.push(s)):(this.drcVacations=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ToDate<=s.ToString("dd MMM yyyy")&&t.ReJoinDate>s.ToString("dd MMM yyyy")),0==this.drcVacations.length&&d++,this.lstWeekoff.push(s)):d++,this.lstWeekoff.push(s));else this.drcVacations=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ToDate<=s.ToString("dd MMM yyyy")&&t.ReJoinDate>s.ToString("dd MMM yyyy")),0==this.drcVacations.length&&(d++,this.lstWeekoff.push(s));else if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>4==t.Type&&t.ComponentID==i.e.String(this.drcApprLeaves[0].ComponentID)&&t.GradeID==this.othMPField.GradeID),this.drcStructure.length>0&&""!=i.e.String(this.drcStructure[0].IncludeRExclude).Trim())switch(this.drcStructure[0].IncludeRExclude.toString()){case"ExcludeBoth":case"ExcludeWeeklyOffs":case"IncludeHolidays":d++,this.lstWeekoff.push(s)}s=s.AddDays(7)}}if(-1!=n&&r!=n){let s=t;for(s.getDay()<n?s=s.AddDays(n-s.getDay()):s.getDay()>n&&(s=s.AddDays(7-(s.getDay()-n)));s<=e;)if(this.lstHolidays.Contains(s))s=s.AddDays(7);else if(this.lstWeekoff.Contains(s))s=s.AddDays(7);else{if(this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.FromDate<=s.ToString("dd MMM yyyy")&&t.ToDate>=s.ToString("dd MMM yyyy")&&"LatesProcessing"!=t.PostedFrom),0==this.drcApprLeaves.length)if(null!=this.lstVacations&&this.lstVacations.length>0)for(let t=0;t<this.lstVacations.length;t++)this.lstVacations[t].IsEncashDays||this.lstWeekoff.Contains(s)||(this.oVacation=this.lstVacations[t],null!=this.oVacation?this.oVacation.StartDate<=s&&this.oVacation.EndDate>=s?(this.ExcludeWeeklyOff&&d++,this.lstWeekoff.push(s)):(this.drcVacations=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ToDate<=s.ToString("dd MMM yyyy")&&t.ReJoinDate>s.ToString("dd MMM yyyy")),0==this.drcVacations.length&&d++,this.lstWeekoff.push(s)):d++,this.lstWeekoff.push(s));else this.drcVacations=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ToDate<=s.ToString("dd MMM yyyy")&&t.ReJoinDate>s.ToString("dd MMM yyyy")),0==this.drcVacations.length&&(d++,this.lstWeekoff.push(s));else if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>4==t.Type&&t.ComponentID==i.e.String(this.drcApprLeaves[0].ComponentID)&&t.GradeID==this.othMPField.GradeID),this.drcStructure.length>0&&""!=i.e.String(this.drcStructure[0].IncludeRExclude).Trim())switch(this.drcStructure[0].IncludeRExclude.toString()){case"ExcludeBoth":case"ExcludeWeeklyOffs":case"IncludeHolidays":d++,this.lstWeekoff.push(s)}s=s.AddDays(7)}}}-1==r&&-1==n&&(this.drcTmp=this.dsAllEmpsData.Tables[14].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&-1==t.NormalWorkingHours),null!=this.drcTmp&&this.drcTmp.length>0&&(d=this.drcTmp.length));let s=new Array;for(let a=0;a<this.lstHolidays.length;a++)if(this.lstHolidays[a]>=this.othMPField.DateOfJoining&&this.lstHolidays[a]<=this.othMPField.DateOfRelieve)if(this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.FromDate<=this.lstHolidays[a].ToString("dd MMM yyyy")&&t.ToDate>=this.lstHolidays[a].ToString("dd MMM yyyy")&&"LatesProcessing"!=t.PostedFrom),0==this.drcApprLeaves.length)if(null!=this.lstVacations&&this.lstVacations.length>0)for(let t=0;t<this.lstVacations.length;t++)this.lstVacations[t].IsEncashDays||s.Contains(this.lstHolidays[a])||(this.oVacation=this.lstVacations[t],null!=this.oVacation?this.oVacation.StartDate<=this.lstHolidays[a]&&this.oVacation.EndDate>=this.lstHolidays[a]?(this.ExcludeHolidays&&h++,s.push(this.lstHolidays[a])):(this.drcVacations=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ToDate<=this.lstHolidays[a].ToString("dd MMM yyyy")&&t.ReJoinDate>this.lstHolidays[a].ToString("dd MMM yyyy")),0==this.drcVacations.length&&h++,s.push(this.lstHolidays[a])):h++,s.push(this.lstHolidays[a]));else this.drcVacations=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.ToDate<=this.lstHolidays[a].ToString("dd MMM yyyy")&&t.ReJoinDate>this.lstHolidays[a].ToString("dd MMM yyyy")),0==this.drcVacations.length&&(h++,s.push(this.lstHolidays[a]));else if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>4==t.Type&&t.ComponentID==i.e.String(this.drcApprLeaves[0].ComponentID)&&t.GradeID==this.othMPField.GradeID),this.drcStructure.length>0&&""!=this.drcStructure[0].IncludeRExclude.toString().Trim())switch(this.drcStructure[0].IncludeRExclude.toString()){case"ExcludeBoth":case"ExcludeHolidays":case"IncludeWeeklyOffs":h++,s.push(this.lstHolidays[a])}if(this.drcTmp=this.dsAllEmpsData.Tables[14].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&-2==t.NormalWorkingHours),null!=this.drcTmp&&this.drcTmp.length>0&&(h=this.drcTmp.length),this.IsPostFullAttendance)if(this.IsPostBasedOnDailyAttendance){let t=this.GetDaysAttendedBasedOnDailyAttendance(this.dsAllEmpsData.Tables[14],this.sEmpSeqNo);t+d+h<this.dblLeavesLOP?(P=t+d+h,P-=y,g=o-(P+D+c)):(P=t+d+h,this.othMPField.dblLeavesLOP>0&&this.othMPField.LOPDays>0&&this.othMPField.LOPDays<this.othMPField.dblLeavesLOP&&(P-=this.othMPField.dblLeavesLOP),P-=y,g=o-(P+D+c))}else this.IsPostBasedOnAttDimWise?null!=this.drcADWData&&this.drcADWData.length>0&&(P=i.e.DTComputeSUM(this.drcADWData,"DaysAttended",!1),this.othMPField.dblLeavesLOP>0&&this.othMPField.LOPDays>0&&this.othMPField.LOPDays<this.othMPField.dblLeavesLOP&&(P-=this.othMPField.dblLeavesLOP),P-=y,g=o-(P+D+c)):P=o-D-g-c;else if("True"==a.a.SessionManager.Preferences.GetDailyAttendanceDataInMonthlyPayroll){let t=this.GetDaysAttendedBasedOnDailyAttendance(this.dsAllEmpsData.Tables[14],this.sEmpSeqNo);t+d+h<this.dblLeavesLOP?(P=t+d+h,P-=y,g=o-(P+D+c)):(P=t+d+h,this.othMPField.dblLeavesLOP>0&&this.othMPField.LOPDays>0&&this.othMPField.LOPDays<this.othMPField.dblLeavesLOP&&(P-=this.othMPField.dblLeavesLOP),P-=y,g=o-(P+D+c))}else P=d+h,g=o-(P+D+c)}if(this.othMPField.DaysAttended=P,this.othMPField.TotalLeaves=D,this.othMPField.PaidLeaves=u,this.othMPField.WeeklyOffs=d,this.othMPField.Holidays=h,this.othMPField.LOPDays=g,this.othMPField.UnpaidDays=c,this.othMPField.TotalDays=P+D+g+c,this.othMPField.PaidDays=P+u,this.ExecuteAllFormulas(),("MonthlyPayrollViewModel"==this.oParent.ClassName||"ConsolidatedMonthlyPayrollViewModel"==this.oParent.ClassName)&&!this.othMPField.IsAlreadyProcessed&&a.a.SessionManager.Preferences.ContainsKey("GetFulDaysAttndsinMnthlyPayroll")&&"True"==a.a.SessionManager.Preferences.GetFulDaysAttndsinMnthlyPayroll){let t=this.othMPField.TotalDays;this.SetDaysAttended(this.iEmpIndex,"Days Attended",this.othMPField.TotalDays),this.othMPField.LOPDays<0&&(t+=this.othMPField.LOPDays),this.othMPField.dblLeavesLOP>0&&this.othMPField.LOPDays<this.othMPField.dblLeavesLOP&&(t-=this.othMPField.dblLeavesLOP),this.SetDaysAttended(this.iEmpIndex,"Days Attended",t)}}("PostPayrollViewModel"==this.oParent.ClassName||"ConsolidatedMonthlyPayrollViewModel"==this.oParent.ClassName)&&(this.oParent.InProgress=this.iEmpIndex+1+" of "+t.length,this.oParent.ProgressValue++)}}this.IsCompleted=!0}}GetHoursDefChart(t){let e=this.dsAllEmpsData.Tables[29],s=new Date(t.DailyAttendanceDate).ToString("dd/MMM/yyyy"),l=null;if(a.a.SessionManager.Preferences.ContainsKey("HoursDefChartBasedOn")&&""!=a.a.SessionManager.Preferences.HoursDefChartBasedOn){let o=a.a.SessionManager.Preferences.HoursDefChartBasedOn.split(",");if(null!=o&&o.length>0){let a=" 1=1 ",r="";for(let s=0;s<o.length;s++)null!=o[s]&&""!=o[s]&&(r="dcCCNID"+(parseInt(o[s])-5e4),i.e.IsEmpty(t[r])?(e=e.filter(t=>1==t[r]),a+=" AND "+r+"=1"):(e=e.filter(e=>e[r]==t[r].toString()||1==e[r]),a+=" AND ( "+r+"="+t[r].toString()+" OR "+r+"=1 )"));if(a.length>0&&(a+=" AND WEF<='"+s+"'",null!=e&&e.length>0)){let t=e.filter(t=>t.WEF<=s);t.sort((t,e)=>t.WEF>e.WEF||t.WEF==e.WEF&&t.DocID>e.DocID?1:-1),null!=t&&t.length>0&&(l=t)}}}return l}GetDaysAttendedBasedOnDailyAttendance(t,e){let s,a=0,l=this.PayrollMonthStart,o=this.PayrollMonthEnd,r=0,n=0,d=0,h=0,c=null,g=[];if(g=t,g=t.filter(t=>t.EmpSeqNo==e),null!=g&&g.length>0){let t;for(s=l;s<=o;)t=g.filter(t=>t.EmpSeqNo==e&&t.DailyAttendanceDate==s.ToString("dd/MMM/yyyy")),null!=t&&t.length>0&&(c=this.GetHoursDefChart(t[0]),r=n=d=h=0,d=i.e.DTComputeSUM(g.filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.DailyAttendanceDate==s.ToString("dd/MMM/yyyy")&&t.NormalWorkingHours>=0),"NormalWorkingHours",!0),null!=c&&c.length>0&&(r=parseFloat(c[0].MinHalfHrs),n=parseFloat(c[0].MinFullHrs),h=n<=d?1:r<=d?.5:0,a+=h)),s=s.AddDays(1)}return a}AggregateLeaves(t,e){this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(e=>e.EmpSeqNo==this.sEmpSeqNo&&e.ComponentID==t);let s,i,l=0,o=0,r=0;e.dLLDed=0;for(let n=0;n<this.drcApprLeaves.length;n++){if(o=0,a.a.SessionManager.Preferences.ContainsKey("DontConsiderEmpLeavesLoansRecData")&&"True"==a.a.SessionManager.Preferences.DontConsiderEmpLeavesLoansRecData){let t=parseInt(a.a.SessionManager.Preferences.DontConsiderEmpLeavesLoansRecDataDays),e=new Date(a.a.SessionManager.PayrollMonth.getFullYear(),a.a.SessionManager.PayrollMonth.getMonth(),t);if(new Date(this.drcApprLeaves[n].DocDate)>=e)continue}s=new Date(this.drcApprLeaves[n].FromDate),i=new Date(this.drcApprLeaves[n].ToDate),s>=a.a.SessionManager.PayrollMonthStart?i<=a.a.SessionManager.PayrollMonthEnd?(r=parseFloat(this.drcApprLeaves[n].NoOfDays),l+=r,o+=r):s<=a.a.SessionManager.PayrollMonthEnd&&(r=this.GetNoOfDays(s,a.a.SessionManager.PayrollMonthEnd,t),l+=r,o+=r):i<=a.a.SessionManager.PayrollMonthEnd?i>=a.a.SessionManager.PayrollMonthStart&&(r=this.GetNoOfDays(a.a.SessionManager.PayrollMonthStart,i,t),l+=r,o+=r):(r=this.GetNoOfDays(a.a.SessionManager.PayrollMonthStart,a.a.SessionManager.PayrollMonthEnd,t),l+=r,o+=r),null!=this.drcApprLeaves[n].PostedFrom&&null!=this.drcApprLeaves[n].PostedFrom&&"LatesProcessing"==this.drcApprLeaves[n].PostedFrom.toString()&&(e.dLLDed+=o)}return l}AggregateLeavesBeforePayroll(t){this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(e=>e.EmpSeqNo==this.sEmpSeqNo&&e.ComponentID==t);let e,s,i=0;for(let l=0;l<this.drcApprLeaves.length;l++){if(a.a.SessionManager.Preferences.ContainsKey("DontConsiderEmpLeavesLoansRecData")&&"True"==a.a.SessionManager.Preferences.DontConsiderEmpLeavesLoansRecData){let t=parseInt(a.a.SessionManager.Preferences.DontConsiderEmpLeavesLoansRecDataDays),e=new Date(a.a.SessionManager.PayrollMonth.getFullYear(),a.a.SessionManager.PayrollMonth.getMonth(),t);if(new Date(this.drcApprLeaves[l].DocDate)>=e)continue}e=new Date(this.drcApprLeaves[l].FromDate),s=new Date(this.drcApprLeaves[l].ToDate),e>=this.LeaveYearStartmonth?s<a.a.SessionManager.PayrollMonthStart?i+=parseFloat(this.drcApprLeaves[l].NoOfDays):e<a.a.SessionManager.PayrollMonthStart&&(i+=this.GetNoOfDays(e,a.a.SessionManager.PayrollMonthStart,t)):s<a.a.SessionManager.PayrollMonthStart?s>=this.LeaveYearStartmonth&&(i+=this.GetNoOfDays(this.LeaveYearStartmonth,s,t)):i+=this.GetNoOfDays(this.LeaveYearStartmonth,a.a.SessionManager.PayrollMonthStart,t)}return i}GetNoOfDays(t,e,s){let l=0,o=0,r=0,n=null,d=this.dsAllEmpsData.Tables[1].filter(t=>t.GradeID==this.othMPField.GradeID&&4==t.Type&&t.ComponentID==s);if(null!=d&&d.length>0){let s=t,h=d[0].IncludeRExclude.toString();if(l=i.e.GetDateDifference(e,t)+1,"IncludeBoth"==h||""==h)return l;if("IncludeWeeklyOffs"==h)for(;s<=e;)n=this.dtHolidayDef.filter(t=>t.HolidayDate==s.ToString("dd/MMM/yyyy")),null!=n&&n.length>0&&r++,s=s.AddDays(1);else if("IncludeHolidays"==h)for(;s<=e;)null!=this.drcWOffDef&&this.drcWOffDef.length>0?this.CheckIsWeeklyOffFromDef(s)&&o++:("NONE"!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()?s.getDay().toString()==this.drcAllEmpsData[0].WeeklyOff1.toString()&&o++:s.getDay().toString()==a.a.SessionManager.Preferences.WeeklyOff1&&o++,"NONE"!=this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()?this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()&&s.getDay().toString()==this.drcAllEmpsData[0].WeeklyOff2.toString()&&o++:s.getDay().toString()==a.a.SessionManager.Preferences.WeeklyOff2&&o++),s=s.AddDays(1);else if("ExcludeBoth"==h)for(;s<=e;){let t=!1;n=this.dtHolidayDef.filter(t=>t.HolidayDate==s.ToString("dd/MMM/yyyy")),null!=n&&n.length>0&&(r++,t=!0),null!=this.drcWOffDef&&this.drcWOffDef.length>0?this.CheckIsWeeklyOffFromDef(s)&&!t&&o++:("NONE"!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()?s.getDay().toString()!=this.drcAllEmpsData[0].WeeklyOff1.toString()||t||o++:s.getDay().toString()!=a.a.SessionManager.Preferences.WeeklyOff1||t||o++,"NONE"!=this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()?this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()&&(s.getDay().toString()!=this.drcAllEmpsData[0].WeeklyOff2.toString()||t||o++):s.getDay().toString()!=a.a.SessionManager.Preferences.WeeklyOff2||t||o++),s=s.AddDays(1)}else if("ExcludeWeeklyOffs"==h)for(;s<=e;)null!=this.drcWOffDef&&this.drcWOffDef.length>0?this.CheckIsWeeklyOffFromDef(s)&&o++:("NONE"!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()?s.getDay().toString()==this.drcAllEmpsData[0].WeeklyOff1.toString()&&o++:s.getDay().toString()==a.a.SessionManager.Preferences.WeeklyOff1&&o++,"NONE"!=this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()?this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()&&s.getDay().toString()==this.drcAllEmpsData[0].WeeklyOff2.toString()&&o++:s.getDay().toString()==a.a.SessionManager.Preferences.WeeklyOff2&&o++),s=s.AddDays(1);else if("ExcludeHolidays"==h)for(;s<=e;)n=this.dtHolidayDef.filter(t=>t.HolidayDate==s.ToString("dd/MMM/yyyy")),null!=n&&n.length>0&&r++,s=s.AddDays(1)}return l-(o+r)}CheckIsWeeklyOffFromDef(t){if(null!=this.drcWOffDef&&this.drcWOffDef.length>0){let e,s=1,l=this.othMPField.DateOfRelieve<a.a.SessionManager.PayrollMonthEnd?this.othMPField.DateOfRelieve:a.a.SessionManager.PayrollMonthEnd,o=this.othMPField.DateOfJoining>a.a.SessionManager.PayrollMonthStart?this.othMPField.DateOfJoining:a.a.SessionManager.PayrollMonthStart;for(;o<=l;){for(e=o.AddDays(6);o<=e&&o<=l;){if(this.dsAllEmpsData.Columns[4].Contains("Week"+s.toString()+"_W1")&&!i.e.IsEmpty(this.drcWOffDef[0]["Week"+s.toString()+"_W1"])&&o.getDay().toString().toLowerCase()==this.drcWOffDef[0]["Week"+s.toString()+"_W1"].toString().toLowerCase()){if(o.Date==t.Date)return!0}else if(this.dsAllEmpsData.Columns[4].Contains("Week"+s.toString()+"_W2")&&!i.e.IsEmpty(this.drcWOffDef[0]["Week"+s.toString()+"_W2"])&&o.getDay().toString().toLowerCase()==this.drcWOffDef[0]["Week"+s.toString()+"_W2"].toString().toLowerCase()&&o.Date==t.Date)return!0;o=o.AddDays(1)}s++}}return!1}CalculateWeeklyOffsExcludeDays(t,e){let s=0;if(null!=this.drcWOffDef&&this.drcWOffDef.length>0){let l,o=1,r=this.othMPField.DateOfRelieve<a.a.SessionManager.PayrollMonthEnd?this.othMPField.DateOfRelieve:a.a.SessionManager.PayrollMonthEnd,n=this.othMPField.DateOfJoining>a.a.SessionManager.PayrollMonthStart?this.othMPField.DateOfJoining:a.a.SessionManager.PayrollMonthStart;for(;n<=r;){for(l=n.AddDays(6);n<=l&&n<=r;)this.lstHolidays.Contains(n)||(i.e.IsEmpty(this.drcWOffDef[0]["Week"+o.toString()+"_W1"])||n.getDay().toString().toLowerCase()!=this.drcWOffDef[0]["Week"+o.toString()+"_W1"].toString().toLowerCase())&&(i.e.IsEmpty(this.drcWOffDef[0]["Week"+o.toString()+"_W2"])||n.getDay().toString().toLowerCase()!=this.drcWOffDef[0]["Week"+o.toString()+"_W2"].toString().toLowerCase())||n>=t&&n<=e&&s++,n=n.AddDays(1);o++}}return s}GetVacationDays(t,e,s){let o=null;this.ExcludeWeeklyOff=!1,this.ExcludeHolidays=!1;let r=-1,n=this.dsAllEmpsData.Tables[26];n="True"==a.a.SessionManager.Preferences.GradeWiseVacation.toString()?n.filter(t=>t.GradeID==this.othMPField.EmpGradeID):n.filter(t=>1==t.GradeID),n.length>0&&(r=parseInt(n[0].VacationField),this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>4==t.Type&&t.ComponentID==r&&t.GradeID==this.othMPField.GradeID),this.drcStructure.length>0&&null!=this.drcStructure[0].IncludeRExclude&&null!=this.drcStructure[0].IncludeRExclude&&""!=this.drcStructure[0].IncludeRExclude.toString()&&("ExcludeBoth"==this.drcStructure[0].IncludeRExclude.toString()?(this.ExcludeWeeklyOff=!0,this.ExcludeHolidays=!0):"ExcludeWeeklyOffs"==this.drcStructure[0].IncludeRExclude.toString()?this.ExcludeWeeklyOff=!0:"ExcludeHolidays"==this.drcStructure[0].IncludeRExclude.toString()&&(this.ExcludeHolidays=!0)));let d,h=1,c=new Date(t.getFullYear(),t.getMonth(),t.getDate()),g=0,D=0,u=0;if(g=-1,D=-1,null!=this.drcWOffDef&&this.drcWOffDef.length>0)d=new Date(e.getFullYear(),e.getMonth(),e.getDate()),h=d.Subtract(c).Days+1,this.ExcludeWeeklyOff&&(u=this.CalculateWeeklyOffsExcludeDays(t,e)),this.ExcludeHolidays&&(o=this.dtHolidayDef.filter(t=>t.HolidayDate>=c.ToString("dd MMM yyyy")&&t.HolidayDate<=d.ToString("dd MMM yyyy")),null!=o&&o.length>0&&(u+=o.length)),h-=u;else{let t="",s="";switch(t="NONE"!=this.drcAllEmpsData[0].WeeklyOff1.toString().toUpperCase()?this.drcAllEmpsData[0].WeeklyOff1.toString():a.a.SessionManager.Preferences.WeeklyOff1.toString(),"NONE"!=this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()?this.drcAllEmpsData[0].WeeklyOff2.toString().toUpperCase()!=t.toUpperCase()&&(s=this.drcAllEmpsData[0].WeeklyOff2.toString()):s=a.a.SessionManager.Preferences.WeeklyOff2.toString(),t){case"Sunday":g=0;break;case"Monday":g=1;break;case"Tuesday":g=2;break;case"Wednesday":g=3;break;case"Thursday":g=4;break;case"Friday":g=5;break;case"Saturday":g=6}switch(s){case"Sunday":D=0;break;case"Monday":D=1;break;case"Tuesday":D=2;break;case"Wednesday":D=3;break;case"Thursday":D=4;break;case"Friday":D=5;break;case"Saturday":D=6}if(d=new Date(e.getFullYear(),e.getMonth(),e.getDate()),h=d.Subtract(c).Days+1,this.ExcludeWeeklyOff){if(-1!=g){let t=c;for(t.getDay()<g?t=t.AddDays(g-t.getDay()):t.getDay()>g&&(t=t.AddDays(7-(t.getDay()-g)));t<=d;)u++,t=t.AddDays(7)}if(-1!=D&&g!=D){let t=c;for(t.getDay()<D?t=t.AddDays(D-t.getDay()):t.getDay()>D&&(t=t.AddDays(7-(t.getDay()-D)));t<=d;)u++,t=t.AddDays(7)}}this.ExcludeHolidays&&(null!=this.dtHolidayDef&&this.dtHolidayDef.length>0&&(o=this.dtHolidayDef.filter(t=>t.HolidayDate>=c.ToString("dd MMM yyyy")&&t.HolidayDate<=d.ToString("dd MMM yyyy"))),null!=o&&o.length>0&&(u+=o.length)),h-=u}let P=this.dsAllEmpsData.Tables[18].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.DocID==s);if(n.length>0&&null!=n[0].ConsiderExcessDaysAsLOP&&null!=n[0].ConsiderExcessDaysAsLOP&&"Yes"==n[0].ConsiderExcessDaysAsLOP.toString()&&P.length>0&&!i.e.IsEmpty(P[0].ExcessDays)&&parseFloat(P[0].ExcessDays)>0){let t,e=new Array,s=new Date,a=new Date,o=new Date,n=new Date,d=new Date,c=new Date,g=new Date(P[0].FromDate),D=new Date(P[0].ToDate),u=parseFloat(P[0].PaidDays),y=(parseFloat(P[0].ExcessDays),u);c="01 Jan 1900"==new Date(P[0].ReJoinDate).ToString("dd MMM yyyy")?this.PayrollMonthEnd.AddDays(1):new Date(P[0].ReJoinDate),n=g;let C={PayrollMonth:s,PayrollMonthStart:a,PayrollMonthEnd:o};for(i.e.SetPayrollDate(n,C),s=C.PayrollMonth,a=C.PayrollMonthStart,o=C.PayrollMonthEnd,n=s;n<=D;){t=new l.d;let h={PayrollMonth:s,PayrollMonthStart:a,PayrollMonthEnd:o};i.e.SetPayrollDate(n,h),s=h.PayrollMonth,a=h.PayrollMonthStart,o=h.PayrollMonthEnd,d=s,t.DocDate=s,d<g&&(d=g),o>D&&(o=c<D?c.AddDays(-1):D),t.PaidDays=this.GetNoOfDays(d,o,r),y=i.e.Round(y-t.PaidDays,2),y<0?(t.ExcessDays=Math.abs(y),y=0):t.ExcessDays=0,e.push(t),n=n.AddMonths(1)}if(e.length>0)for(let i=0;i<e.length;i++)if(e[i].DocDate==this.PayrollMonth){h-=e[i].ExcessDays,this.dblLeavesLOP+=e[i].ExcessDays;break}}return h}ReEvaluateData(t,e,s,i){this.iEmpIndex=t;let l=this.arrLstCPFields[t][e].find(t=>t.SNo==s);null!=l&&(l.dActual=parseFloat(i).ToString(a.a.SessionManager.sPayrollDecimals)),this.othMPField=this.arrLstOthMPFields[this.iEmpIndex],this.ExecuteAllFormulas()}UpdateExtraFieldData(t,e,s){this.iEmpIndex=t;let a=this.arrLstCPFields[t][6].find(t=>t.ExtraFieldName==e);null!=a&&(a.ExtraFieldValue=s),this.othMPField=this.arrLstOthMPFields[this.iEmpIndex],this.ExecuteAllFormulas()}GetUnpaidDays(){let t,e,s=0,l=0;if(this.othMPField.DateOfJoining.getDate(),this.PayrollMonth.DaysInMonth(),this.othMPField.DateOfJoining>this.PayrollMonthStart)if("Actual Days"!=a.a.SessionManager.Preferences.PayDays){let i=parseInt(a.a.SessionManager.Preferences.PayDays);for(t=this.PayrollMonthStart,e=this.othMPField.DateOfJoining;t<e;)t.getDate()!=t.DaysInMonth()?(t.getDate()>i||s++,t=t.AddDays(1)):(s+=i-t.getDate()+1,t=t.AddDays(1));if(this.othMPField.DateOfRelieve<this.PayrollMonthEnd)for(t=this.othMPField.DateOfRelieve.AddDays(1),e=this.PayrollMonthEnd;t<=e&&!(a.a.SessionManager.Preferences.ContainsKey("ConsiderUnpaidDaysBasedOnPayDays")&&"TRUE"==a.a.SessionManager.Preferences.ConsiderUnpaidDaysBasedOnPayDays.toString().toUpperCase()&&(l=t.Date.Subtract(this.PayrollMonthStart).Days+1,l>i));)t.getDate()!=t.DaysInMonth()?(t.getDate()>i||s++,t=t.AddDays(1)):(s+=i-t.getDate()+1,t=t.AddDays(1))}else s+=i.e.GetDateDifference(this.othMPField.DateOfJoining,this.PayrollMonthStart),this.othMPField.DateOfRelieve<this.PayrollMonthEnd&&(s+=i.e.GetDateDifference(this.PayrollMonthEnd,this.othMPField.DateOfRelieve));else if(this.othMPField.DateOfRelieve<this.PayrollMonthEnd)if("Actual Days"!=a.a.SessionManager.Preferences.PayDays){let i=parseInt(a.a.SessionManager.Preferences.PayDays);for(t=this.othMPField.DateOfRelieve.AddDays(1),e=this.PayrollMonthEnd;t<=e&&!(a.a.SessionManager.Preferences.ContainsKey("ConsiderUnpaidDaysBasedOnPayDays")&&"TRUE"==a.a.SessionManager.Preferences.ConsiderUnpaidDaysBasedOnPayDays.toString().toUpperCase()&&(l=t.Date.Subtract(this.PayrollMonthStart).Days+1,l>i));)t.getDate()!=t.DaysInMonth()?(t.getDate()>i||s++,t=t.AddDays(1)):(s+=i-t.getDate()+1,t=t.AddDays(1))}else s+=i.e.GetDateDifference(this.PayrollMonthEnd,this.othMPField.DateOfRelieve);return s}SetDaysAttended(t,e,s){try{Logger.InfoLog("CommonMonthlyPayroll::Entering dgvDays_EndEdit()"),this.iEmpIndex=t,this.othMPField=this.arrLstOthMPFields[this.iEmpIndex],"Days Attended"==e?(this.othMPField.DaysAttended=s,this.othMPField.LOPDays=this.othMPField.MonthDays-(this.othMPField.DaysAttended+this.othMPField.TotalLeaves+this.othMPField.UnpaidDays),this.sDisplayMessage=this.othMPField.LOPDays<0?a.a.GetResource("EnterValidDaysAttended"):this.othMPField.dblLeavesLOP>0&&this.othMPField.LOPDays<this.othMPField.dblLeavesLOP?"Employee Should have atleast "+this.othMPField.dblLeavesLOP+" LOP Days":""):"LOP"==e&&(this.othMPField.LOPDays=s,this.othMPField.DaysAttended=this.othMPField.MonthDays-(this.othMPField.LOPDays+this.othMPField.TotalLeaves+this.othMPField.UnpaidDays)),this.othMPField.TotalDays=this.othMPField.DaysAttended+this.othMPField.TotalLeaves+this.othMPField.LOPDays+this.othMPField.UnpaidDays,this.ExecuteAllFormulas(),Logger.InfoLog("CommonMonthlyPayroll::Exiting dgvDays_EndEdit()")}catch(i){Logger.ErrorLog("CommonMonthlyPayroll::EXCEPTION dgvDays_EndEdit()\r\n"+i.Message+"\r\n"+i.stack)}}ExecuteAllFormulas(){try{if(Logger.InfoLog("CommonMonthlyPayroll::Entering ExecuteAllFormulas()"),this.othMPField.NetSalary=0,this.othMPField.dblGrossSalary=0,this.ExecuteFormulas(!0),this.ExecuteFormulas(!1),this.ExecuteFormulas(!1),this.ExecuteFormulas(!0),this.ExecuteFormulas(!1),this.ExecuteFormulas(!1),this.othMPField.dblGrossSalary=this.othMPField.totEarnings,this.othMPField.PTIndex>=0){let t=this.dsAllEmpsData.Tables[3];if(this.othMPField.drcPTDimension.length>0){let e=this.dsAllEmpsData.Tables[3];if(e=e.filter(t=>t.NodeID==this.othMPField.drcPTDimension[0].PTDimension.toString()&&""!=t.Formula),null!=e&&e.length>0&&null!=e[0].Formula&&null!=e[0].Formula&&""!=e[0].Formula.toString().Trim()){let t=this.fldDict,s=parseFloat(a.a.eval.EvaluateExpression(e[0].Formula.toString(),t));this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dEarned=s.ToString(a.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dActual=s.ToString(a.a.SessionManager.sPayrollDecimals)}else t=t.filter(t=>t.NodeID==this.othMPField.drcPTDimension[0].PTDimension.toString()&&t.FromSlab<=this.othMPField.dPTApplicableAmt&&t.ToSlab>=this.othMPField.dPTApplicableAmt),t.length>0?(this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dEarned=this.RoundOffValue(parseFloat(t[0].Amount),this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].ROff),this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dActual=this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dEarned):(this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals))}else this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[this.iEmpIndex][2][this.othMPField.PTIndex].dActual=(0).ToString(a.a.SessionManager.sPayrollDecimals)}this.othMPField.totEarnings=this.othMPField.totDeductions=this.othMPField.totActEarnings=0,this.othMPField.totActDeductions=this.othMPField.totLoans=this.othMPField.totOPBalLeaves=0,this.othMPField.totLeavesTaken=this.othMPField.totNetBalLeaves=0,this.othMPField.totEarArrears=this.othMPField.totDedArrears=0,this.othMPField.totEarAdjustments=this.othMPField.totDedAdjustments=0,this.othMPField.totOTAmount=0,this.othMPField.totAccrualsAct=this.othMPField.totAccrualsEar=this.othMPField.totAccrualsArr=this.othMPField.totAccrualsAdj=0;for(let a=0;a<this.arrLstCPFields[this.iEmpIndex][0].length;a++)i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][0][a].SNo)||(this.arrLstCPFields[this.iEmpIndex][0][a].IsAccrualType?(this.othMPField.totAccrualsAct+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dActual),this.othMPField.totAccrualsEar+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dEarned),this.othMPField.totAccrualsArr+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dArrear),this.othMPField.totAccrualsAdj+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dAdjusted)):null==this.arrLstCPFields[this.iEmpIndex][0][a].AddToNet||""==this.arrLstCPFields[this.iEmpIndex][0][a].AddToNet||"Net"!=this.arrLstCPFields[this.iEmpIndex][0][a].AddToNet&&"NetAndTax"!=this.arrLstCPFields[this.iEmpIndex][0][a].AddToNet||(this.othMPField.totActEarnings+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dActual),this.othMPField.totEarnings+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dEarned),this.othMPField.totEarArrears+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dArrear),this.othMPField.totEarAdjustments+=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][a].dAdjusted)));let t=i.e.GetEmptyDate(),e=0;for(let a=0;a<this.arrLstCPFields[this.iEmpIndex][1].length;a++)if(!i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][1][a].SNo)&&null!=this.arrLstCPFields[this.iEmpIndex][1][a].AddToNet&&""!=this.arrLstCPFields[this.iEmpIndex][1][a].AddToNet&&("Net"==this.arrLstCPFields[this.iEmpIndex][1][a].AddToNet||"NetAndTax"==this.arrLstCPFields[this.iEmpIndex][1][a].AddToNet)){let e=parseFloat(this.arrLstCPFields[this.iEmpIndex][1][a].dActual).ToString("00.00").split(".");t=t.AddHours(parseFloat(e[0])),e.length>1&&(1==e[1].length&&(e[1]=e[1]+"0"),t=t.AddMinutes(parseFloat(e[1]))),this.othMPField.totOTAmount+=parseFloat(this.arrLstCPFields[this.iEmpIndex][1][a].dEarned)}let s=t.getMinutes().toString();1==s.length&&(s="0"+s),e=parseFloat(24*(t.getDate()-1)+t.getHours()+"."+s),this.othMPField.totOTHours=e.toString();for(let a=0;a<this.arrLstCPFields[this.iEmpIndex][2].length;a++)i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][2][a].SNo)||null==this.arrLstCPFields[this.iEmpIndex][2][a].AddToNet||""==this.arrLstCPFields[this.iEmpIndex][2][a].AddToNet||"Net"!=this.arrLstCPFields[this.iEmpIndex][2][a].AddToNet&&"NetAndTax"!=this.arrLstCPFields[this.iEmpIndex][2][a].AddToNet||(this.othMPField.totActDeductions+=parseFloat(this.arrLstCPFields[this.iEmpIndex][2][a].dActual),this.othMPField.totDeductions+=parseFloat(this.arrLstCPFields[this.iEmpIndex][2][a].dEarned),this.othMPField.totDedArrears+=parseFloat(this.arrLstCPFields[this.iEmpIndex][2][a].dArrear),this.othMPField.totDedAdjustments+=parseFloat(this.arrLstCPFields[this.iEmpIndex][2][a].dAdjusted));for(let a=0;a<this.arrLstCPFields[this.iEmpIndex][4].length;a++)!i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][4][a].SNo)&&1==this.arrLstCPFields[this.iEmpIndex][4][a].IsVisible&&!i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][4][a].LoanInstAmt)&&parseFloat(this.arrLstCPFields[this.iEmpIndex][4][a].LoanInstAmt)>0&&(this.othMPField.totLoans+=parseFloat(this.arrLstCPFields[this.iEmpIndex][4][a].LoanInstAmt));for(let a=0;a<this.arrLstCPFields[this.iEmpIndex][5].length;a++)i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][5][a].SNo)||(null!=this.arrLstCPFields[this.iEmpIndex][5][a].LeaveTotOPBal&&""!=this.arrLstCPFields[this.iEmpIndex][5][a].LeaveTotOPBal.toString()&&(this.othMPField.totOPBalLeaves+=parseFloat(this.arrLstCPFields[this.iEmpIndex][5][a].LeaveTotOPBal)),null!=this.arrLstCPFields[this.iEmpIndex][5][a].LeaveTaken&&""!=this.arrLstCPFields[this.iEmpIndex][5][a].LeaveTaken.toString()&&(this.othMPField.totLeavesTaken+=parseFloat(this.arrLstCPFields[this.iEmpIndex][5][a].LeaveTaken)),null!=this.arrLstCPFields[this.iEmpIndex][5][a].LeaveNetBal&&""!=this.arrLstCPFields[this.iEmpIndex][5][a].LeaveNetBal.toString()&&(this.othMPField.totNetBalLeaves+=parseFloat(this.arrLstCPFields[this.iEmpIndex][5][a].LeaveNetBal)));this.CalculateNet(),Logger.InfoLog("CommonMonthlyPayroll::Exiting ExecuteAllFormulas()")}catch(t){Logger.ErrorLog("CommonMonthlyPayroll::EXCEPTION ExecuteAllFormulas()\r\n"+t.Message+"\r\n"+t.stack)}this.arrLstOthMPFields[this.iEmpIndex]=this.othMPField}CalculateNet(){this.othMPField.NetSalary=parseFloat(i.e.GetAmountsBasedOnPref(this.othMPField.totEarnings+this.othMPField.totEarArrears+this.othMPField.totEarAdjustments+this.othMPField.totOTAmount-(this.othMPField.totDeductions+this.othMPField.totDedArrears+this.othMPField.totDedAdjustments+this.othMPField.totLoans),a.a.SessionManager.sPayrollDecimals.Replace("N","")))}ExecuteFormulas(t){try{Logger.InfoLog("CommonMonthlyPayroll::Entering ExecuteFormulas()"),this.drcAllEmpsData=this.dsAllEmpsData.Tables[0].filter(t=>t.EmpSeqNo==this.othMPField.EmpSeqNo),this.fldDict=new n.a;let e,s="0";this.othMPField.totEarnings=this.othMPField.totDeductions=this.othMPField.totActEarnings=0,this.othMPField.totActDeductions=this.othMPField.totLoans=this.othMPField.totOPBalLeaves=0,this.othMPField.totLeavesTaken=this.othMPField.totNetBalLeaves=0,this.othMPField.totEarArrears=this.othMPField.totDedArrears=0,this.othMPField.totEarAdjustments=this.othMPField.totDedAdjustments=0,this.othMPField.totOTAmount=0,e=new r.c("Basic",""),this.fldDict.push("Basic",e),this.fldDict.Basic.setFieldValue(this.othMPField.BasicMonthly),e=new r.c("Gross",""),this.fldDict.push("Gross",e),this.fldDict.Gross.setFieldValue(this.othMPField.dblGrossSalary),e=new r.c("ServiceDays",""),this.fldDict.push("ServiceDays",e),this.fldDict.ServiceDays.setFieldValue(this.othMPField.dServiceDays),e=new r.c("WeeklyOffs",""),this.fldDict.push("WeeklyOffs",e),this.fldDict.WeeklyOffs.setFieldValue(this.othMPField.WeeklyOffs),e=new r.c("LeavesTaken",""),this.fldDict.push("LeavesTaken",e),this.fldDict.LeavesTaken.setFieldValue(this.othMPField.TotalLeaves),e=new r.c("VacDaysTaken",""),this.fldDict.push("VacDaysTaken",e),this.fldDict.VacDaysTaken.setFieldValue(this.othMPField.dblTotVacDays),e=new r.c("VacDays",""),this.fldDict.push("VacDays",e),this.fldDict.VacDays.setFieldValue(this.othMPField.dblTotMVacDays),e=new r.c("VacAmount",""),this.fldDict.push("VacAmount",e),this.fldDict.VacAmount.setFieldValue(this.othMPField.dblTotVacAmount),e=new r.c("VacEncashDays",""),this.fldDict.push("VacEncashDays",e),this.fldDict.VacEncashDays.setFieldValue(this.othMPField.dblTotVacEncashDays),e=new r.c("VacEncashAmount",""),this.fldDict.push("VacEncashAmount",e),this.fldDict.VacEncashAmount.setFieldValue(this.othMPField.dblTotVacEncashAmount),e=new r.c("VacExcessDays",""),this.fldDict.push("VacExcessDays",e),this.fldDict.VacExcessDays.setFieldValue(this.othMPField.dblTotVacExcessDays),e=new r.c("VacExcessAmount",""),this.fldDict.push("VacExcessAmount",e),this.fldDict.VacExcessAmount.setFieldValue(this.othMPField.dblTotVacExcessAmount),e=new r.c("VacNetAmount",""),this.fldDict.push("VacNetAmount",e),this.fldDict.VacNetAmount.setFieldValue(this.othMPField.dblTotVacNetAmount),e=new r.c("TotalDays",""),this.fldDict.push("TotalDays",e),this.fldDict.TotalDays.setFieldValue(this.othMPField.TotalDays),e=new r.c("DaysAttended",""),this.fldDict.push("DaysAttended",e),this.fldDict.DaysAttended.setFieldValue(t?this.othMPField.TotalDays:this.othMPField.DaysAttended+this.othMPField.PaidLeaves),e=new r.c("UnpaidDays",""),this.fldDict.push("UnpaidDays",e),this.fldDict.UnpaidDays.setFieldValue(this.othMPField.UnpaidDays),e=new r.c("LOPDays",""),this.fldDict.push("LOPDays",e),this.fldDict.LOPDays.setFieldValue(this.othMPField.LOPDays),e=new r.c("Holidays",""),this.fldDict.push("Holidays",e),this.fldDict.Holidays.setFieldValue(this.othMPField.Holidays),e=new r.c("AdjDays",""),this.fldDict.push("AdjDays",e),this.fldDict.AdjDays.setFieldValue(this.dAdjDays),e=new r.c("EmpType",""),this.fldDict.push("EmpType",e),this.fldDict.EmpType.setFieldValue(this.drcAllEmpsData[0].sEmpType.toString()),e=new r.c("Gender",""),this.fldDict.push("Gender",e),this.fldDict.Gender.setFieldValue(this.drcAllEmpsData[0].sGender.toString()),e=new r.c("MaritalStatus",""),this.fldDict.push("MaritalStatus",e),this.fldDict.MaritalStatus.setFieldValue(this.drcAllEmpsData[0].sMaritalStatus.toString()),e=new r.c("Nationality",""),this.fldDict.push("Nationality",e),this.fldDict.Nationality.setFieldValue(this.drcAllEmpsData[0].sNationality.toString()),e=new r.c("Religion",""),this.fldDict.push("Religion",e),this.fldDict.Religion.setFieldValue(this.drcAllEmpsData[0].sReligion.toString()),e=new r.c("ChildrenCount",""),this.fldDict.push("ChildrenCount",e),null!=this.drcDependentInfo?(this.drcDependentInfo=this.dsAllEmpsData.Tables[23].filter(t=>t.EmpSeqNo==this.othMPField.EmpSeqNo&&"Children"==t.Relation),this.fldDict.ChildrenCount.setFieldValue(this.drcDependentInfo.length)):this.fldDict.ChildrenCount.setFieldValue(0),e=new r.c("ChildrenDays",""),this.fldDict.push("ChildrenDays",e);let l=0;if(null!=this.drcDependentInfo&&(this.drcDependentInfo=this.dsAllEmpsData.Tables[23].filter(t=>t.EmpSeqNo==this.othMPField.EmpSeqNo&&"Children"==t.Relation)),this.drcDependentInfo.length>0){let t=this.drcDependentInfo;for(let e=0;e<t.length;e++)if(new Date(t.Rows[e].ChildDOB)>=this.PayrollMonthStart&&new Date(t.Rows[e].ChildDOB)<=this.PayrollMonthEnd)l+=i.e.GetDateDifference(this.PayrollMonthEnd,new Date(t.Rows[e].ChildDOB))+1;else{let s=0,a=0,o=0,r={iY:s,iM:a,iD:o};i.e.GetYearsMonthsDays(new Date(t.Rows[e].ChildDOB),this.PayrollMonthEnd,r),s=r.iY,a=r.iM,o=r.iD,18==s&&0==a?l+=this.PayrollMonthEnd.Subtract(this.PayrollMonthStart).Days+1-o:s<18&&(l+=this.PayrollMonthEnd.Subtract(this.PayrollMonthStart).Days+1)}}this.fldDict.ChildrenDays.setFieldValue(l),e=new r.c("PayrollMonthNo",""),this.fldDict.push("PayrollMonthNo",e),this.fldDict.PayrollMonthNo.setFieldValue(this.PayrollMonth.iMonth()),e=new r.c("PayrollYearNo",""),this.fldDict.push("PayrollYearNo",e),this.fldDict.PayrollYearNo.setFieldValue(this.PayrollMonth.getFullYear()),e=new r.c("DOJMonth",""),this.fldDict.push("DOJMonth",e),this.fldDict.DOJMonth.setFieldValue(new Date(this.drcAllEmpsData[0].CDOJ).iMonth()),e=new r.c("DOJYear",""),this.fldDict.push("DOJYear",e),this.fldDict.DOJYear.setFieldValue(new Date(this.drcAllEmpsData[0].CDOJ).getFullYear()),e=new r.c("DORMonth",""),this.fldDict.push("DORMonth",e),i.e.IsEmpty(this.drcAllEmpsData[0].CDORelieve)?this.fldDict.DORMonth.setFieldValue(1):this.fldDict.DORMonth.setFieldValue(new Date(this.drcAllEmpsData[0].CDORelieve).iMonth()),e=new r.c("DORYear",""),this.fldDict.push("DORYear",e),i.e.IsEmpty(this.drcAllEmpsData[0].CDORelieve)?this.fldDict.DORYear.setFieldValue(2200):this.fldDict.DORYear.setFieldValue(new Date(this.drcAllEmpsData[0].CDORelieve).getFullYear()),e=new r.c("EmpConfirmationDate",""),this.fldDict.push("EmpConfirmationDate",e),this.fldDict.EmpConfirmationDate.setFieldValue(new Date(this.drcAllEmpsData[0].CDOC)),e=new r.c("LeaveFromDate",""),this.fldDict.push("LeaveFromDate",e),this.fldDict.LeaveFromDate.setFieldValue((new Date).Date),e=new r.c("LeaveNoOfDays",""),this.fldDict.push("LeaveNoOfDays",e),this.fldDict.LeaveNoOfDays.setFieldValue(0),e=new r.c("EmpVacationDays",""),this.fldDict.push("EmpVacationDays",e),this.fldDict.EmpVacationDays.setFieldValue(this.drcAllEmpsData[0].VacDaysPerMonth),e=new r.c("AppraisalMonthNo",""),this.fldDict.push("AppraisalMonthNo",e),this.fldDict.AppraisalMonthNo.setFieldValue(this.drcApprisal.length>0?this.othMPField.AppraisalMonth.iMonth():0),e=new r.c("VacDaysPayYes",""),this.fldDict.push("VacDaysPayYes",e),this.fldDict.VacDaysPayYes.setFieldValue(this.dVacPayYes),e=new r.c("VacDaysPayNo",""),this.fldDict.push("VacDaysPayNo",e),this.fldDict.VacDaysPayNo.setFieldValue(this.dVacPayNo),e=new r.c("PreviousGosiValue",""),this.fldDict.push("PreviousGosiValue",e),this.fldDict.PreviousGosiValue.setFieldValue(this.othMPField.dGosi);let o=0,d=0,h=0,c=0,g=0,D=0,u=0,P=0,y=0,C=0,m=0;null!=this.drcLatesProc&&(this.drcLatesProc=this.dsAllEmpsData.Tables[31].filter(t=>t.EmpSeqNo==this.othMPField.EmpSeqNo),this.drcLatesProc.length>0&&(o=parseFloat(this.drcLatesProc[0].TotCheckInLateMins),d=parseFloat(this.drcLatesProc[0].TotCheckOutEarlyMins),h=parseFloat(this.drcLatesProc[0].TotBreak1MoreMins),c=parseFloat(this.drcLatesProc[0].TotBreak2MoreMins),g=parseFloat(this.drcLatesProc[0].TotBreak3MoreMins),D=parseFloat(this.drcLatesProc[0].TotBreak4MoreMins),u=parseFloat(this.drcLatesProc[0].TotBreak5MoreMins),P=parseFloat(this.drcLatesProc[0].TotLateHrsToDeduct),y=parseFloat(this.drcLatesProc[0].TotLateLeavesToDeduct),C=parseFloat(this.drcLatesProc[0].TotWorkingMinsLessBy),m=parseFloat(this.drcLatesProc[0].TotAbsentMinsLessBy))),e=new r.c("TotCheckInLateMins",""),this.fldDict.push("TotCheckInLateMins",e),this.fldDict.TotCheckInLateMins.setFieldValue(o),e=new r.c("TotCheckOutEarlyMins",""),this.fldDict.push("TotCheckOutEarlyMins",e),this.fldDict.TotCheckOutEarlyMins.setFieldValue(d),e=new r.c("TotBreak1MoreMins",""),this.fldDict.push("TotBreak1MoreMins",e),this.fldDict.TotBreak1MoreMins.setFieldValue(h),e=new r.c("TotBreak2MoreMins",""),this.fldDict.push("TotBreak2MoreMins",e),this.fldDict.TotBreak2MoreMins.setFieldValue(c),e=new r.c("TotBreak3MoreMins",""),this.fldDict.push("TotBreak3MoreMins",e),this.fldDict.TotBreak3MoreMins.setFieldValue(g),e=new r.c("TotBreak4MoreMins",""),this.fldDict.push("TotBreak4MoreMins",e),this.fldDict.TotBreak4MoreMins.setFieldValue(D),e=new r.c("TotBreak5MoreMins",""),this.fldDict.push("TotBreak5MoreMins",e),this.fldDict.TotBreak5MoreMins.setFieldValue(u),e=new r.c("TotLateHrsToDeduct",""),this.fldDict.push("TotLateHrsToDeduct",e),this.fldDict.TotLateHrsToDeduct.setFieldValue(P),e=new r.c("TotLateLeavesToDeduct",""),this.fldDict.push("TotLateLeavesToDeduct",e),this.fldDict.TotLateLeavesToDeduct.setFieldValue(y),e=new r.c("TotWorkingMinsLessBy",""),this.fldDict.push("TotWorkingMinsLessBy",e),this.fldDict.TotWorkingMinsLessBy.setFieldValue(C),e=new r.c("TotAbsentMinsLessBy",""),this.fldDict.push("TotAbsentMinsLessBy",e),this.fldDict.TotAbsentMinsLessBy.setFieldValue(m),this.drcCCData=this.dsData.Tables[0].filter(t=>t.EmpSeqNo==this.othMPField.EmpSeqNo);let p="",M="";if(e=new r.c("RptManagerCode",""),this.fldDict.push("RptManagerCode",e),e=new r.c("RptManagerName",""),this.fldDict.push("RptManagerName",e),this.drcCCData.length>0&&Object.keys(this.drcCCData[0]).Contains("RptManager")&&(this.drcDimsData=this.dsData1.Tables[0].filter(t=>"RptManager"==t.SysColName&&t.NodeID==this.drcCCData[0].RptManager.toString()),this.drcDimsData.length>0&&(p=this.drcDimsData[0].Code.toString(),M=this.drcDimsData[0].Name.toString())),this.fldDict.RptManagerCode.setFieldValue(p),this.fldDict.RptManagerName.setFieldValue(M),this.drcCCData.length>0)for(let t=0;t<Object.keys(this.drcCCData[0]).length;t++){const s=Object.keys(this.drcCCData[0])[t];s.Contains("CCNID")&&(this.drcDimsData=this.dsData1.Tables[0].filter(t=>t.SysColName==s),this.drcDimsData.length>0&&(e=new r.c(this.drcDimsData[0].UserColumnName.toString()+"Code",""),this.fldDict.push(this.drcDimsData[0].UserColumnName.toString()+"Code",e),e=new r.c(this.drcDimsData[0].UserColumnName.toString()+"Name",""),this.fldDict.push(this.drcDimsData[0].UserColumnName.toString()+"Name",e),this.drcDimsData=this.dsData1.Tables[0].filter(t=>t.SysColName==s&&t.NodeID==this.drcCCData[0][s].toString()),this.fldDict[this.drcDimsData[0].UserColumnName.toString()+"Code"].setFieldValue(this.drcDimsData[0].Code.toString()),this.fldDict[this.drcDimsData[0].UserColumnName.toString()+"Name"].setFieldValue(this.drcDimsData[0].Name.toString())))}for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][0].length;t++)i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][0][t].SNo)||(e=new r.c(this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,e),this.fldDict[this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dActual).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Calc"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,""),this.fldDict.push("Calc"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,e),this.fldDict["Calc"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dEarned).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Arr_"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,""),this.fldDict.push("Arr_"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,e),this.fldDict["Arr_"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dArrear).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Adj_"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,""),this.fldDict.push("Adj_"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName,e),this.fldDict["Adj_"+this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dAdjusted).ToString(a.a.SessionManager.sPayrollDecimals)));for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][1].length;t++)""!=this.arrLstCPFields[this.iEmpIndex][1][t].SNo.toString()&&(e=new r.c(this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,e),this.fldDict[this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][1][t].dActual).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Calc"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,""),this.fldDict.push("Calc"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,e),this.fldDict["Calc"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][1][t].dEarned).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Arr_"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,""),this.fldDict.push("Arr_"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,e),this.fldDict["Arr_"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][1][t].dArrear).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Adj_"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,""),this.fldDict.push("Adj_"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName,e),this.fldDict["Adj_"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][1][t].dAdjusted).ToString(a.a.SessionManager.sPayrollDecimals)));for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][2].length;t++)""!=this.arrLstCPFields[this.iEmpIndex][2][t].SNo.toString()&&(e=new r.c(this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,e),this.fldDict[this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dActual).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Calc"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,""),this.fldDict.push("Calc"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,e),this.fldDict["Calc"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dEarned).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Arr_"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,""),this.fldDict.push("Arr_"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,e),this.fldDict["Arr_"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dArrear).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c("Adj_"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,""),this.fldDict.push("Adj_"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName,e),this.fldDict["Adj_"+this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dAdjusted).ToString(a.a.SessionManager.sPayrollDecimals)));for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][4].length;t++)""!=this.arrLstCPFields[this.iEmpIndex][4][t].SNo.toString()&&(e=new r.c(this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName,e),e=new r.c(this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName+"BalAmt",""),this.fldDict.push(this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName+"BalAmt",e)),1==this.arrLstCPFields[this.iEmpIndex][4][t].IsVisible&&null!=this.arrLstCPFields[this.iEmpIndex][4][t].LoanInstAmt&&""!=this.arrLstCPFields[this.iEmpIndex][4][t].LoanInstAmt.toString()&&parseFloat(this.arrLstCPFields[this.iEmpIndex][4][t].LoanInstAmt)>0?(this.fldDict[this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][4][t].LoanInstAmt).ToString(a.a.SessionManager.sPayrollDecimals)),this.fldDict[this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName+"BalAmt"].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][4][t].LoanBalAmt).ToString(a.a.SessionManager.sPayrollDecimals))):(this.fldDict[this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName].setFieldValue(0),this.fldDict[this.arrLstCPFields[this.iEmpIndex][4][t].ComponentName+"BalAmt"].setFieldValue(0));for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][5].length;t++)""!=this.arrLstCPFields[this.iEmpIndex][5][t].SNo.toString()&&(e=new r.c(this.arrLstCPFields[this.iEmpIndex][5][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[this.iEmpIndex][5][t].ComponentName,e),this.fldDict[this.arrLstCPFields[this.iEmpIndex][5][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][5][t].LeaveTaken).ToString(a.a.SessionManager.sPayrollDecimals)),e=new r.c(this.arrLstCPFields[this.iEmpIndex][5][t].ComponentName+"_Bal",""),this.fldDict.push(this.arrLstCPFields[this.iEmpIndex][5][t].ComponentName+"_Bal",e),this.fldDict[this.arrLstCPFields[this.iEmpIndex][5][t].ComponentName+"_Bal"].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][5][t].LeaveTotOPBal).ToString(a.a.SessionManager.sPayrollDecimals)));let S=this.fldDict,E=0;for(let r=0;r<this.arrLstCPFields[this.iEmpIndex][0].length;r++)i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][0][r].SNo)||(null!=this.arrLstCPFields[this.iEmpIndex][0][r].Formula&&""!=this.arrLstCPFields[this.iEmpIndex][0][r].Formula?(this.arrLstCPFields[this.iEmpIndex][0][r].dEarned=this.RoundOffValue(parseFloat(a.a.eval.EvaluateExpression(this.arrLstCPFields[this.iEmpIndex][0][r].Formula,S)),this.arrLstCPFields[this.iEmpIndex][0][r].ROff),this.fldDict["Calc"+this.arrLstCPFields[this.iEmpIndex][0][r].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][0][r].dEarned).ToString(a.a.SessionManager.sPayrollDecimals)),t&&"Formula"==this.arrLstCPFields[this.iEmpIndex][0][r].FieldType&&(this.arrLstCPFields[this.iEmpIndex][0][r].dActual=this.arrLstCPFields[this.iEmpIndex][0][r].dEarned.Replace(",",""),this.fldDict[this.arrLstCPFields[this.iEmpIndex][0][r].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][0][r].dActual).ToString(a.a.SessionManager.sPayrollDecimals))),"PFBasedOn"==this.arrLstCPFields[this.iEmpIndex][0][r].ComponentName&&(E=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][r].dEarned))):"Monthly"!=this.arrLstCPFields[this.iEmpIndex][0][r].FieldType||null!=this.arrLstCPFields[this.iEmpIndex][0][r].Formula&&""!=this.arrLstCPFields[this.iEmpIndex][0][r].Formula||(this.arrLstCPFields[this.iEmpIndex][0][r].dEarned=this.arrLstCPFields[this.iEmpIndex][0][r].dActual.Replace(",",""),this.arrLstCPFields[this.iEmpIndex][0][r].dActual=this.arrLstCPFields[this.iEmpIndex][0][r].dEarned.Replace(",","")));for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][1].length;t++)i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][1][t].SNo)||(null!=this.arrLstCPFields[this.iEmpIndex][1][t].Formula&&""!=this.arrLstCPFields[this.iEmpIndex][1][t].Formula?(this.arrLstCPFields[this.iEmpIndex][1][t].dEarned=this.RoundOffValue(parseFloat(a.a.eval.EvaluateExpression(this.arrLstCPFields[this.iEmpIndex][1][t].Formula,S)),this.arrLstCPFields[this.iEmpIndex][1][t].ROff),i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][1][t].dEarned)||(this.arrLstCPFields[this.iEmpIndex][1][t].dEarned=parseFloat(this.arrLstCPFields[this.iEmpIndex][1][t].dEarned).ToString(a.a.SessionManager.sPayrollDecimals)),this.fldDict["Calc"+this.arrLstCPFields[this.iEmpIndex][1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][1][t].dEarned).ToString(a.a.SessionManager.sPayrollDecimals))):this.arrLstCPFields[this.iEmpIndex][1][t].dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals));for(let r=0;r<this.arrLstCPFields[this.iEmpIndex][2].length;r++)i.e.IsEmpty(this.arrLstCPFields[this.iEmpIndex][2][r].SNo)||(null!=this.arrLstCPFields[this.iEmpIndex][2][r].Formula&&""!=this.arrLstCPFields[this.iEmpIndex][2][r].Formula?("ESI"==this.arrLstCPFields[this.iEmpIndex][2][r].ComponentName?this.arrLstCPFields[this.iEmpIndex][2][r].dEarned=Math.ceil(parseFloat(a.a.eval.EvaluateExpression(this.arrLstCPFields[this.iEmpIndex][2][r].Formula,S))).ToString(a.a.SessionManager.sPayrollDecimals).Replace(",",""):(s=parseFloat(a.a.eval.EvaluateExpression(this.arrLstCPFields[this.iEmpIndex][2][r].Formula,S)).ToString(a.a.SessionManager.sPayrollDecimals),"PT"==this.arrLstCPFields[this.iEmpIndex][2][r].ComponentName?(this.othMPField.dPTApplicableAmt=parseFloat(s),this.arrLstCPFields[this.iEmpIndex][2][r].dEarned=(0).ToString(a.a.SessionManager.sPayrollDecimals)):this.arrLstCPFields[this.iEmpIndex][2][r].dEarned=this.RoundOffValue(parseFloat(s),this.arrLstCPFields[this.iEmpIndex][2][r].ROff),this.fldDict["Calc"+this.arrLstCPFields[this.iEmpIndex][2][r].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][2][r].dEarned).ToString(a.a.SessionManager.sPayrollDecimals))),t&&"Formula"==this.arrLstCPFields[this.iEmpIndex][2][r].FieldType&&(this.arrLstCPFields[this.iEmpIndex][2][r].dActual="PT"==this.arrLstCPFields[this.iEmpIndex][2][r].ComponentName?(0).ToString(a.a.SessionManager.sPayrollDecimals):this.arrLstCPFields[this.iEmpIndex][2][r].dEarned.Replace(",",""),this.fldDict[this.arrLstCPFields[this.iEmpIndex][2][r].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[this.iEmpIndex][2][r].dActual).ToString(a.a.SessionManager.sPayrollDecimals)))):"Monthly"!=this.arrLstCPFields[this.iEmpIndex][2][r].FieldType||null!=this.arrLstCPFields[this.iEmpIndex][2][r].Formula&&""!=this.arrLstCPFields[this.iEmpIndex][2][r].Formula||(this.arrLstCPFields[this.iEmpIndex][2][r].dEarned=this.arrLstCPFields[this.iEmpIndex][2][r].dActual.Replace(",",""),this.arrLstCPFields[this.iEmpIndex][2][r].dActual=this.arrLstCPFields[this.iEmpIndex][2][r].dEarned.Replace(",","")));if(!t&&E>0){for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][0].length;t++)if(""!=i.e.String(this.arrLstCPFields[this.iEmpIndex][0][t].SNo)&&"PFE"==this.arrLstCPFields[this.iEmpIndex][0][t].ComponentName&&this.arrLstCPFields[this.iEmpIndex][0][t].isArrCalculated&&(parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dArrear)>E-parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dEarned)&&(this.arrLstCPFields[this.iEmpIndex][0][t].dArrear=(E-parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dEarned)).ToString(a.a.SessionManager.sPayrollDecimals)),null!=this.arrLstCPFields[this.iEmpIndex][0][t].ArrData&&this.arrLstCPFields[this.iEmpIndex][0][t].ArrData.length>0)){let e=[],a=0;if(this.arrLstCPFields[this.iEmpIndex][0][t].ArrData=this.arrLstCPFields[this.iEmpIndex][0][t].ArrData.TrimEnd(","),e=this.arrLstCPFields[this.iEmpIndex][0][t].ArrData.split(";"),this.arrLstCPFields[this.iEmpIndex][0][t].ArrData="",a=parseFloat(this.arrLstCPFields[this.iEmpIndex][0][t].dArrear),null!=e&&e.length>0)for(let i=0;i<e.length;i+=2)null!=new Date(e[i]).ToString("dd MMM yyyy")&&(s=e[i+1],parseFloat(s)<a?(this.arrLstCPFields[this.iEmpIndex][0][t].ArrData+=new Date(e[i]).ToString("dd MMM yyyy")+","+s+",",a-=parseFloat(s)):(this.arrLstCPFields[this.iEmpIndex][0][t].ArrData+=new Date(e[i]).ToString("dd MMM yyyy")+","+a+",",a=0))}for(let t=0;t<this.arrLstCPFields[this.iEmpIndex][2].length;t++)if(""!=i.e.String(this.arrLstCPFields[this.iEmpIndex][2][t].SNo)&&"PF"==this.arrLstCPFields[this.iEmpIndex][2][t].ComponentName&&this.arrLstCPFields[this.iEmpIndex][2][t].isArrCalculated&&parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dArrear)>E-parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dEarned)&&(this.arrLstCPFields[this.iEmpIndex][2][t].dArrear=(E-parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dEarned)).ToString(a.a.SessionManager.sPayrollDecimals),null!=this.arrLstCPFields[this.iEmpIndex][2][t].ArrData&&this.arrLstCPFields[this.iEmpIndex][2][t].ArrData.length>0)){let e=[],a=0;if(this.arrLstCPFields[this.iEmpIndex][2][t].ArrData=this.arrLstCPFields[this.iEmpIndex][2][t].ArrData.TrimEnd(","),e=this.arrLstCPFields[this.iEmpIndex][2][t].ArrData.split(";"),this.arrLstCPFields[this.iEmpIndex][2][t].ArrData="",a=parseFloat(this.arrLstCPFields[this.iEmpIndex][2][t].dArrear),null!=e&&e.length>0)for(let i=0;i<e.length;i+=2)null!=new Date(e[i]).ToString("dd MMM yyyy")&&(s=e[i+1],parseFloat(s)<a?(this.arrLstCPFields[this.iEmpIndex][2][t].ArrData+=new Date(e[i]).ToString("dd MMM yyyy")+","+s+",",a-=parseFloat(s)):(this.arrLstCPFields[this.iEmpIndex][2][t].ArrData+=new Date(e[i]).ToString("dd MMM yyyy")+","+a+",",a=0))}}Logger.InfoLog("CommonMonthlyPayroll::Exiting ExecuteFormulas()")}catch(e){Logger.ErrorLog("CommonMonthlyPayroll::EXCEPTION ExecuteFormulas()\r\n"+e.Message+"\r\n"+e.stack)}}RoundOffValue(t,e){let s=!1;if(t<0&&(s=!0,t=Math.abs(t)),e>0&&t>0){let s=0,a=!1;s=t%e,s>0&&(e/s<=2&&(a=!0),t-=s,a&&(t+=e))}return s?(-1*t).ToString(a.a.SessionManager.sPayrollDecimals).Replace(",",""):t.ToString(a.a.SessionManager.sPayrollDecimals).Replace(",","")}CalculateWeeklyOffsFromDef(){let t=0;try{if(Logger.InfoLog("CommonMonthlyPayroll::Entering CalculateWeeklyOffsFromDef()"),null!=this.drcWOffDef&&this.drcWOffDef.length>0){let e,s=1,l=this.othMPField.DateOfRelieve<a.a.SessionManager.PayrollMonthEnd?this.othMPField.DateOfRelieve:a.a.SessionManager.PayrollMonthEnd,o=this.othMPField.DateOfJoining>a.a.SessionManager.PayrollMonthStart?this.othMPField.DateOfJoining:a.a.SessionManager.PayrollMonthStart;for(;o<=l;){for(e=o.AddDays(6);o<=e&&o<=l;){if(i.e.IsEmpty(this.drcWOffDef[0]["Week"+s.toString()+"_W1"])||o.getDayName().toString().toLowerCase()!=this.drcWOffDef[0]["Week"+s.toString()+"_W1"].toString().toLowerCase()){if(!i.e.IsEmpty(this.drcWOffDef[0]["Week"+s.toString()+"_W2"])&&o.getDayName().toString().toLowerCase()==this.drcWOffDef[0]["Week"+s.toString()+"_W2"].toString().toLowerCase()){if(this.lstHolidays.Contains(o)){o=o.AddDays(1);continue}if(this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.FromDate<=o.ToString("dd MMM yyyy")&&t.ToDate>=o.ToString("dd MMM yyyy")&&"LatesProcessing"!=t.PostedFrom),0==this.drcApprLeaves.length)if(null!=this.lstVacations&&this.lstVacations.length>0)for(let e=0;e<this.lstVacations.length;e++)this.lstVacations[e].IsEncashDays||this.lstWeekoff.Contains(o)||(this.oVacation=this.lstVacations[e],null!=this.oVacation&&this.oVacation.StartDate<=o&&this.oVacation.EndDate>=o?this.ExcludeWeeklyOff&&(t++,this.lstWeekoff.push(o)):(t++,this.lstWeekoff.push(o)));else t++,this.lstWeekoff.push(o);else if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>4==t.Type&&t.ComponentID==i.e.String(this.drcApprLeaves[0].ComponentID)&&t.GradeID==this.othMPField.GradeID),this.drcStructure.length>0&&""!=i.e.String(this.drcStructure[0].IncludeRExclude).Trim())switch(this.drcStructure[0].IncludeRExclude.toString()){case"ExcludeBoth":case"ExcludeWeeklyOffs":case"IncludeHolidays":t++,this.lstWeekoff.push(o)}}}else{if(this.lstHolidays.Contains(o)){o=o.AddDays(1);continue}if(this.lstWeekoff.Contains(o)){o=o.AddDays(1);continue}if(this.drcApprLeaves=this.dsAllEmpsData.Tables[9].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.FromDate<=o.ToString("dd MMM yyyy")&&t.ToDate>=o.ToString("dd MMM yyyy")&&"LatesProcessing"!=t.PostedFrom),0==this.drcApprLeaves.length)if(null!=this.lstVacations&&this.lstVacations.length>0)for(let e=0;e<this.lstVacations.length;e++)this.lstVacations[e].IsEncashDays||this.lstWeekoff.Contains(o)||(this.oVacation=this.lstVacations[e],null!=this.oVacation&&this.oVacation.StartDate<=o&&this.oVacation.EndDate>=o?this.ExcludeWeeklyOff&&(t++,this.lstWeekoff.push(o)):(t++,this.lstWeekoff.push(o)));else t++,this.lstWeekoff.push(o);else if(this.drcStructure=this.dsAllEmpsData.Tables[1].filter(t=>4==t.Type&&t.ComponentID==i.e.String(this.drcApprLeaves[0].ComponentID)&&t.GradeID==this.othMPField.GradeID),this.drcStructure.length>0&&""!=i.e.String(this.drcStructure[0].IncludeRExclude).Trim())switch(this.drcStructure[0].IncludeRExclude.toString()){case"ExcludeBoth":case"ExcludeWeeklyOffs":case"IncludeHolidays":t++,this.lstWeekoff.push(o)}}o=o.AddDays(1)}s++}}Logger.InfoLog("CommonMonthlyPayroll::Exiting CalculateWeeklyOffsFromDef()")}catch(e){Logger.ErrorLog("CommonMonthlyPayroll::EXCEPTION CalculateWeeklyOffsFromDef()\r\n"+e.Message+"\r\n"+e.stack)}return t}GetVacationAvailability(t,e){Logger.InfoLog("CommonMonthlyPayroll::Entering GetVacationAvailability()");let s=0;this.othMPField.dVacDaysUptoLastMonth=0;let i=[];i.push(t.ToString("dd/MMM/yyyy")),i.push(this.sEmpSeqNo),i.push(1),i.push(a.a.SessionManager.UserID),i.push(a.a.SessionManager.LanguageID);let l=a.a.empService.ExecuteQuery_SP(i,"spPAY_GetRemainingVacationDays");if(null!=l&&l.Tables.length>0&&l.Tables[0].length>0){let t=l.Tables[0].filter(t=>t.LeaveType==e);null!=t&&t.length>0&&(s=parseFloat(t[0].AvlblDays),this.othMPField.dVacDaysUptoLastMonth=parseFloat(t[0].VacDaysUptoLastMonth))}return Logger.InfoLog("CommonMonthlyPayroll::Exiting GetVacationAvailability()"),s.toString()}GetLeavesTaken(t,e,s,l){Logger.InfoLog("CommonMonthlyPayroll::Entering GetLeavesTaken()"),l.dTaken=l.dAvail=0;let o=[];o.push(t.ToString("dd/MMM/yyyy")),o.push(e.ToString("dd/MMM/yyyy")),o.push(this.sEmpSeqNo),o.push(s),o.push("Both"),o.push(a.a.SessionManager.UserID),o.push(a.a.SessionManager.LanguageID);let r=a.a.empService.ExecuteQuery_SP(o,"spPAY_ExtGetAvlblNoofDays");null!=r&&r.Tables.length>0&&r.Tables[0].length>0&&(i.e.IsEmpty(r.Tables[0][0].LeavesTaken)||(l.dTaken=parseFloat(r.Tables[0][0].LeavesTaken)),i.e.IsEmpty(r.Tables[0][0].AvailableLeaves)||(l.dAvail=parseFloat(r.Tables[0][0].AvailableLeaves)),t.ToString("dd/MMM/yyyy")==this.PayrollMonthStart.ToString("dd/MMM/yyyy")&&e.ToString("dd/MMM/yyyy")==this.PayrollMonthEnd.ToString("dd/MMM/yyyy")&&(0==this.dWklyoff&&0==this.dHdays&&(this.dWklyoff=parseFloat(r.Tables[0][0].Weeklyoff),this.dHdays=parseFloat(r.Tables[0][0].Holidays)),null!=r.Tables[0][0].MWeeklyoff&&null!=r.Tables[0][0].MWeeklyoff&&""!=r.Tables[0][0].MWeeklyoff.toString()&&(this.dblMWeekOffs=this.dblMWeekOffs+parseFloat(r.Tables[0][0].MWeeklyoff)),null!=r.Tables[0][0].MHolidays&&null!=r.Tables[0][0].MHolidays&&""!=r.Tables[0][0].MHolidays.toString()&&(this.dblMHolidays=this.dblMHolidays+parseFloat(r.Tables[0][0].MHolidays)))),Logger.InfoLog("CommonMonthlyPayroll::Exiting GetLeavesTaken()")}}},Saj9:function(t,e,s){"use strict";s.r(e),s.d(e,"SetPayrollDateViewModel",(function(){return r}));var a=s("Do2H"),i=s("Lp6j"),l=s("ScVY"),o=s("JIg3");class r extends l.b{constructor(){super(),this.DialogResult=!1,this.MsgVisibility=!1,this.MsgInVisibility=!1,this.PayrollMonth="",this.PayrollMonthStart="",this.PayrollMonthEnd="",this.PayDate=new o.a(0),this.PayDate.CustomFormat="MMM/yyyy",this.PayDate.Date=a.a.SessionManager.PayrollMonth,this.PayDate.Label="Date",this.MsgInVisibility=!0,this.MsgVisibility=!1}OnPreviewKeyDown(t){}OnSave(t){"OK"==t.toString()||"Cancel"==t.toString()?a.a.page.HideDialog():"Submit"==t.toString()&&(i.e.SetPayrollMonth(this.PayDate.Date,a.a.SessionManager),a.a.SessionManager.ModsTemp.split("~").Contains("13"),this.PayrollMonth=": "+a.a.SessionManager.PayrollMonth.ToString("MMMM, yyyy"),this.PayrollMonthStart=": "+a.a.SessionManager.PayrollMonthStart.ToString("dd MMM yyyy"),this.PayrollMonthEnd=": "+a.a.SessionManager.PayrollMonthEnd.ToString("dd MMM yyyy"),this.MsgInVisibility=!1,this.MsgVisibility=!0,this.DialogResult=!0)}OnMessageCallBack(){}}},"V+gx":function(t,e,s){"use strict";s.r(e),s.d(e,"SetPayrollDateComponent",(function(){return g}));var a=s("3Pt+"),i=s("fXoL"),l=s("ofXK"),o=s("q8k3"),r=s("sYmb");function n(t,e){if(1&t&&(i.Zb(0,"div",3),i.Wc(1,"\n        "),i.Zb(2,"div",4),i.Wc(3,"\n            "),i.Vb(4,5),i.Wc(5,"\n        "),i.Yb(),i.Wc(6,"\n    "),i.Yb()),2&t){const t=i.lc();i.Db(4),i.tc("obj",t.obj.PayDate)("group",t.form)}}function d(t,e){if(1&t){const t=i.ac();i.Zb(0,"div",6),i.Wc(1,"\n        "),i.Zb(2,"div"),i.Wc(3,"\n            "),i.Zb(4,"button",7),i.hc("click",(function(){return i.Ic(t),i.lc().obj.OnSave("Submit")})),i.Wc(5),i.mc(6,"translate"),i.Yb(),i.Wc(7,"\n            "),i.Zb(8,"button",8),i.hc("click",(function(){return i.Ic(t),i.lc().obj.OnSave("Cancel")})),i.Ub(9,"i",9),i.Wc(10),i.mc(11,"translate"),i.Yb(),i.Wc(12,"\n        "),i.Yb(),i.Wc(13,"\n    "),i.Yb()}2&t&&(i.Db(5),i.Xc(i.nc(6,2,"Com_OK")),i.Db(5),i.Xc(i.nc(11,4,"Cancel")))}function h(t,e){if(1&t&&(i.Zb(0,"div",3),i.Wc(1,"\n\n        "),i.Zb(2,"div",4),i.Wc(3,"\n            "),i.Zb(4,"table"),i.Wc(5,"\n                "),i.Zb(6,"tr"),i.Wc(7,"\n                    "),i.Zb(8,"td",10),i.Wc(9,"\n                        "),i.Zb(10,"div",11),i.Wc(11),i.mc(12,"translate"),i.Yb(),i.Wc(13,"\n                    "),i.Yb(),i.Wc(14,"\n                    "),i.Zb(15,"td",10),i.Wc(16,"\n                        "),i.Zb(17,"div",12),i.Wc(18),i.Yb(),i.Wc(19,"\n                    "),i.Yb(),i.Wc(20,"\n                "),i.Yb(),i.Wc(21,"\n                "),i.Zb(22,"tr"),i.Wc(23,"\n                    "),i.Zb(24,"td",10),i.Wc(25,"\n                        "),i.Zb(26,"div",11),i.Wc(27),i.mc(28,"translate"),i.Yb(),i.Wc(29,"\n                    "),i.Yb(),i.Wc(30,"\n                    "),i.Zb(31,"td",10),i.Wc(32,"\n                        "),i.Zb(33,"div",12),i.Wc(34),i.Yb(),i.Wc(35,"\n                    "),i.Yb(),i.Wc(36,"\n                "),i.Yb(),i.Wc(37,"\n                "),i.Zb(38,"tr"),i.Wc(39,"\n                    "),i.Zb(40,"td",10),i.Wc(41,"\n                        "),i.Zb(42,"div",11),i.Wc(43),i.mc(44,"translate"),i.Yb(),i.Wc(45,"\n                    "),i.Yb(),i.Wc(46,"\n                    "),i.Zb(47,"td",10),i.Wc(48,"\n                        "),i.Zb(49,"div",12),i.Wc(50),i.Yb(),i.Wc(51,"\n                    "),i.Yb(),i.Wc(52,"\n                "),i.Yb(),i.Wc(53,"\n            "),i.Yb(),i.Wc(54,"\n        "),i.Yb(),i.Wc(55,"\n    "),i.Yb()),2&t){const t=i.lc();i.Db(11),i.Yc(" ",i.nc(12,6,"PayrollMonth")," "),i.Db(7),i.Yc(" ",t.obj.PayrollMonth," "),i.Db(9),i.Yc(" ",i.nc(28,8,"PayrollStartDate")," "),i.Db(7),i.Yc(" ",t.obj.PayrollMonthStart," "),i.Db(9),i.Yc(" ",i.nc(44,10,"PayrollEndDate")," "),i.Db(7),i.Yc(" ",t.obj.PayrollMonthEnd," ")}}function c(t,e){if(1&t){const t=i.ac();i.Zb(0,"div",6),i.Wc(1,"\n        "),i.Zb(2,"div"),i.Wc(3,"\n            "),i.Zb(4,"button",7),i.hc("click",(function(){return i.Ic(t),i.lc().obj.OnSave("OK")})),i.Wc(5),i.mc(6,"translate"),i.Yb(),i.Wc(7,"\n        "),i.Yb(),i.Wc(8,"\n    "),i.Yb()}2&t&&(i.Db(5),i.Xc(i.nc(6,1,"Com_OK")))}let g=(()=>{class t{constructor(){}ngOnInit(){this.form=new a.j({})}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=i.Nb({type:t,selectors:[["app-set-payroll-date"]],decls:10,vars:5,consts:[[1,"master-screen",3,"formGroup"],["class","dialogSubBody",4,"ngIf"],["class","Pactdailogfooter",4,"ngIf"],[1,"dialogSubBody"],[1,"form-group","col-xl-12","col-md-12","col-sm-12","col-xs-12","PACTControl"],["FieldDirective","",3,"obj","group"],[1,"Pactdailogfooter"],[1,"primary-btn-wicon",3,"click"],[1,"secondary-btn-wicon",3,"click"],[1,"fa-light","fa-rectangle-xmark"],[2,"text-align","left","width","50%"],[1,"qvlabel"],[1,"qvtext"]],template:function(t,e){1&t&&(i.Zb(0,"div",0),i.Wc(1,"\n    "),i.Uc(2,n,7,2,"div",1),i.Wc(3,"\n    "),i.Uc(4,d,14,6,"div",2),i.Wc(5,"\n    "),i.Uc(6,h,56,12,"div",1),i.Wc(7,"\n    "),i.Uc(8,c,9,3,"div",2),i.Wc(9,"\n"),i.Yb()),2&t&&(i.tc("formGroup",e.form),i.Db(2),i.tc("ngIf",e.obj.MsgInVisibility),i.Db(2),i.tc("ngIf",e.obj.MsgInVisibility),i.Db(2),i.tc("ngIf",e.obj.MsgVisibility),i.Db(2),i.tc("ngIf",e.obj.MsgVisibility))},directives:[a.t,a.k,l.t,o.a],pipes:[r.d],encapsulation:2}),t})()},"dc+d":function(t,e,s){"use strict";s.d(e,"a",(function(){return n}));var a=s("3Pt+"),i=s("fXoL"),l=s("ofXK"),o=s("sYmb");function r(t,e){if(1&t){const t=i.ac();i.Xb(0,9),i.Wc(1,"\n            "),i.Zb(2,"div"),i.Wc(3,"\n              "),i.Zb(4,"input",10),i.hc("ngModelChange",(function(s){return i.Ic(t),e.$implicit.IsChecked=s}))("change",(function(s){i.Ic(t);const a=e.$implicit;return i.lc().OnCheckValue(s,a)})),i.Yb(),i.Wc(5,"\n              "),i.Zb(6,"label",11),i.hc("click",(function(){i.Ic(t);const s=e.$implicit;return i.lc().OnLblClick(s)})),i.Wc(7),i.Yb(),i.Wc(8,"\n            "),i.Yb(),i.Wc(9,"\n          "),i.Wb()}if(2&t){const t=e.$implicit,s=i.lc();i.tc("group",s.obj.form),i.Db(4),i.tc("ngModel",t.IsChecked)("disabled",!t.Enable),i.Db(3),i.Xc(t.Name)}}let n=(()=>{class t{constructor(){this.form=new a.j({})}ngOnInit(){}OnCheckValue(t,e){t.target.checked=e.IsChecked}OnLblClick(t){t.Enable&&(t.IsChecked=!t.IsChecked)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=i.Nb({type:t,selectors:[["app-arrears"]],inputs:{obj:"obj"},decls:34,vars:16,consts:[[2,"padding-bottom","4px","width","200px"],[1,"PACTHeaderFields","dialogSubBody"],[1,"form-group","col-xl-12","col-md-12","col-sm-12","col-xs-12","PACTControl"],[1,"input_cntrl_label"],[1,"form-group","PACTControl","pnl","maxwidth",2,"overflow","auto"],[3,"group",4,"ngFor","ngForOf"],[1,"Pactdailogfooter"],[1,"primary-btn-wicon",3,"click"],[1,"secondary-btn-wicon",3,"click"],[3,"group"],["type","checkbox",3,"ngModel","disabled","ngModelChange","change"],[3,"click"]],template:function(t,e){1&t&&(i.Zb(0,"div",0),i.Wc(1,"\n  "),i.Zb(2,"div",1),i.Wc(3,"\n\n\n    "),i.Wc(4,"\n    "),i.Zb(5,"div",2),i.Wc(6,"\n      "),i.Zb(7,"div"),i.Wc(8,"\n        "),i.Zb(9,"label",3),i.Wc(10,"Payroll Months "),i.Yb(),i.Wc(11,"\n        "),i.Zb(12,"div",4),i.Wc(13,"\n          "),i.Uc(14,r,10,4,"ng-container",5),i.Wc(15,"\n        "),i.Yb(),i.Wc(16,"\n      "),i.Yb(),i.Wc(17,"\n    "),i.Yb(),i.Wc(18,"\n  "),i.Yb(),i.Wc(19,"\n  "),i.Zb(20,"div",6),i.Wc(21,"\n    "),i.Zb(22,"div"),i.Wc(23,"\n      "),i.Zb(24,"button",7),i.hc("click",(function(){return e.obj.Button_Click("OK")})),i.Wc(25),i.mc(26,"translate"),i.Yb(),i.Wc(27,"\n      "),i.Zb(28,"button",8),i.hc("click",(function(){return e.obj.Button_Click("Cancel")})),i.Wc(29),i.mc(30,"translate"),i.Yb(),i.Wc(31,"\n    "),i.Yb(),i.Wc(32,"\n  "),i.Yb(),i.Wc(33,"\n"),i.Yb()),2&t&&(i.Db(7),i.Kb("c-flex",e.obj.LblWidth),i.Db(2),i.Sc("width",e.obj.LblWidth,"px"),i.Kb("quicklink",e.obj.LblClick),i.Eb("for",e.obj.DBColumnName),i.Db(3),i.Sc("height",e.obj.Height,"px"),i.Db(2),i.tc("ngForOf",e.obj.ChklstPayrollMonths),i.Db(11),i.Xc(i.nc(26,12,"Ok")),i.Db(4),i.Xc(i.nc(30,14,"Close")))},directives:[l.s,a.a,a.s,a.v],pipes:[o.d],encapsulation:2}),t})()}}]);