(window.webpackJsonp=window.webpackJsonp||[]).push([[20,215,216],{BJEe:function(t,e,s){"use strict";s.d(e,"a",(function(){return m}));var i=s("Do2H"),a=s("Lp6j"),l=s("eQJW"),o=s("MRsC"),n=s("8B8H"),r=s("ockk"),d=s("uMy8"),h=s("vTM8"),c=s("0/4Q"),u=s("ScVY"),D=s("n56n"),p=s("EQd/"),g=s("JIg3");class m extends u.b{constructor(t,e,s,l){super(),this.Title="",this.EmployeeList=new D.b(0),this.BasicMonthly=new p.d(0),this.NextAppraisal=new g.a(0),this.NetSalary=new p.d(0),this.EffectFrom=new g.a(0),this.ActAppraisalFrom=new g.a(0),this.Reason=new p.d(0),this.Remarks=new p.d(0),this.AppraisalType=new c.e(0),this.NodeID=0,this.EditSeqNo=0,this.dsData=null,this.dtDOConfirm=new Date,this.sEmpCode="",this.sEmpName="",this.dtNextAppraisalDate=null,this.sFilter="",this.sDecimalsAmount="N"+i.a.SessionManager.Preferences.DecimalsinAmount,this.isFromBulkAppraisals=!1,this.sBulkAppraisalGrade="0",this.dsMPDocView=null,this.fldDict=new h.a,this.dServiceDays=0,this.dvDependentInfo=null,this.dvApprisal=null,this.webtotEarnings=0,this.webtotDeductions=0,this.dsPayStructure=null,this.dtGrSalSalbs=null,this.oEvalPayFormulas=null,this.strUpdate="",Logger.InfoLog("AddEditAppraisalViewModel::Entering AddEditAppraisalViewModel"),null!=t&&(this.Parent=t,this.Parent.Opacity=.3),this.BasicMonthly.LostFocusCommand.Subscribe(this,"BasicMonthly_LostFocus"),this.EffectFrom.SelectedDateChanged.Subscribe(this,"EffectFrom_DateChanged"),this.ActAppraisalFrom.SelectedDateChanged.Subscribe(this,"ActAppraisalFrom_DateChanged"),this.NextAppraisal.SelectedDateChanged.Subscribe(this,"NextAppraisal_DateChanged"),this.NodeID=e,this.EditSeqNo=l,this.EmployeeList.CCID=50051,this.EmployeeList.TypeID=1,this.EmployeeList.SelectedValue=e,this.EmployeeList.Enable=!1,this.EmployeeList.Label="Employee",this.BasicMonthly.Text="0.00",this.BasicMonthly.Label="Basic",this.NetSalary.Text="0.00",null!=s&&(this.EffectFrom.Date=s),this.ActAppraisalFrom.Date=this.EffectFrom.Date,this.dtNextAppraisalDate=s,this.dsData=i.a.empService.GetQueryData(this.NodeID,"APP001",i.a.SessionManager.PayrollMonthEnd.ToString("dd/MMM/yyyy"),"","");let o=i.a.empService.LoadStructure_1(i.a.SessionManager.PayrollMonthEnd.ToString("dd/MMM/yyyy"),this.sFilter);null!=o&&o.Tables.length>0&&(this.dvCCData=o.Tables[0]);let n=i.a.empService.GetQueryData(0,"dvDimsData","","","");null!=n&&null!=n&&(this.dvDimsData=n),null!=this.dsData&&this.dsData.Tables.length>0&&(this.dsData.Tables[0].length>0&&(this.sEmpCode=this.dsData.Tables[0][0].Code.toString(),this.sEmpName=this.dsData.Tables[0][0].Name.toString(),this.dtDateOfJoining=new Date(this.dsData.Tables[0][0].DateOfJoining),this.dtDOConfirm=new Date(this.dsData.Tables[0][0].CDOC),this.dServiceDays=a.e.GetDateDifference(this.EffectFrom.Date,this.dtDateOfJoining)+1,null!=s&&(this.NextAppraisal.Date=s.Value)),this.dsData.Tables[1].length>0&&(this.drc=this.dsData.Tables[1].filter(t=>"dcAlpha1"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.EffectFrom.Label=this.drc[0].ResourceData.toString()),this.drc=this.dsData.Tables[1].filter(t=>"dcAlpha2"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.ActAppraisalFrom.Label=this.drc[0].ResourceData.toString()),this.drc=this.dsData.Tables[1].filter(t=>"dcAlpha3"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.Title=this.drc[0].ResourceData.toString()),this.drc=this.dsData.Tables[1].filter(t=>"dcAlpha4"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.NextAppraisal.Label=this.drc[0].ResourceData.toString()),this.drc=this.dsData.Tables[1].filter(t=>"dcAlpha5"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.AppraisalType.Label=this.drc[0].ResourceData.toString()),this.drc=this.dsData.Tables[1].filter(t=>"dcAlpha6"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.Reason.Label=this.drc[0].ResourceData.toString()),this.drc=this.dsData.Tables[1].filter(t=>"dcAlpha7"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.Remarks.Label=this.drc[0].ResourceData.toString())),c.e.FillComboWithDefaultOption_3(this.dsData.Tables[3],this.AppraisalType,!0),this.AppraisalType.Visible=!(!i.a.SessionManager.Preferences.ContainsKey("ShowApprslTypeLookUpFldsInApprPopup")||"True"!=i.a.SessionManager.Preferences.ShowApprslTypeLookUpFldsInApprPopup)),this.LoadGrids(),this.CheckViewForUser(0),Logger.InfoLog("AddEditAppraisalViewModel::Exiting AddEditAppraisalViewModel")}get angularGrid(){return this.dgvEarnings.angularGrid}get angularGrid1(){return this.dgvDeductions.angularGrid}SetDateToFirst(t){t.Date=new Date(t.Date.Year,t.Date.Month,1)}CheckViewForUser(t){if(this.dsMPDocView=i.a.common.GetScreenInfo(50051),null!=this.dsMPDocView&&this.dsMPDocView.Tables.length>3&&this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].length>0){let t;for(let s=0;s<this.dgvEarnings.Table.length;s++)null!=this.dgvEarnings.Table[s].EarSNo&&null!=this.dgvEarnings.Table[s].EarSNo&&""!=this.dgvEarnings.Table[s].EarSNo.toString()&&(t=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>t.CostCenterColID==3e6+parseInt(this.dgvEarnings.Table[s].EarComponentID)),null!=t&&t.length>0&&(this.dgvEarnings.Table[s].IsVisible="FALSE"==t[0].IsVisible.toString().toUpperCase()?"False":"True","FALSE"==t[0].IsEditable.toString().toUpperCase()&&(this.dgvEarnings.Table[s].Earnings_GRAY="1",this.dgvEarnings.Table[s].EarValue_GRAY="1")));for(let s=0;s<this.dgvDeductions.Table.length;s++)null!=this.dgvDeductions.Table[s].DedSNo&&null!=this.dgvDeductions.Table[s].DedSNo&&""!=this.dgvDeductions.Table[s].DedSNo.toString()&&(t=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>t.CostCenterColID==3e6+parseInt(this.dgvDeductions.Table[s].DedComponentID)),null!=t&&t.length>0&&(this.dgvDeductions.Table[s].IsVisible="FALSE"==t[0].IsVisible.toString().toUpperCase()?"False":"True","FALSE"==t[0].IsEditable.toString().toUpperCase()&&(this.dgvDeductions.Table[s].Deductions_GRAY="1",this.dgvDeductions.Table[s].DedValue_GRAY="1")));if(0==this.dgvEarnings.Table.filter(t=>"False"!=t.IsVisible).length){let t=this.dgvEarnings.NewRow();this.dgvEarnings.addRow(t)}if(0==this.dgvDeductions.Table.filter(t=>"False"!=t.IsVisible).length){let t=this.dgvDeductions.NewRow();this.dgvDeductions.addRow(t)}this.drc=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>"CEffectFrom"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.EffectFrom.Visible=Object(l.j)(this.drc[0].IsVisible.toString())),this.drc=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>"CApplyFrom"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.ActAppraisalFrom.Visible=Object(l.j)(this.drc[0].IsVisible.toString())),this.drc=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>"NextAppraisalDate"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.NextAppraisal.Visible=Object(l.j)(this.drc[0].IsVisible.toString())),this.drc=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>"BasicMonthly"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.BasicMonthly.Visible=Object(l.j)(this.drc[0].IsVisible.toString())),this.drc=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>"NetSalary"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.NetSalary.Visible=Object(l.j)(this.drc[0].IsVisible.toString())),this.drc=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>"Reason"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.Reason.Visible=Object(l.j)(this.drc[0].IsVisible.toString())),this.drc=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2].filter(t=>"Remarks"==t.SysColumnName),null!=this.drc&&this.drc.length>0&&(this.Remarks.Visible=Object(l.j)(this.drc[0].IsVisible.toString()));let e=this.dsMPDocView.Tables[this.dsMPDocView.Tables.length-2];e.RowFilter=" CostCenterColID=3100005 ",null!=e&&e.length>0&&(this.dgvEarnings.Visible=Object(l.j)(e[0].IsVisible.toString())),e.RowFilter=" CostCenterColID=3100015 ",null!=e&&e.length>0&&(this.dgvDeductions.Visible=Object(l.j)(e[0].IsVisible.toString()))}this.NetSalary.Label=this.dgvDeductions.Visible?"Net Salary":"Gross Salary"}EffectFrom_DateChanged(t){null!=this.dtDateOfJoining&&this.dtDateOfJoining.getFullYear()==this.EffectFrom.Date.getFullYear()&&this.dtDateOfJoining.getMonth()==this.EffectFrom.Date.getMonth()?(this.EffectFrom.Date=this.dtDateOfJoining,this.ActAppraisalFrom.Date=this.EffectFrom.Date):(this.EffectFrom.Date=new Date(this.EffectFrom.Date.getFullYear(),this.EffectFrom.Date.getMonth(),1),this.ActAppraisalFrom.Date=this.EffectFrom.Date)}ActAppraisalFrom_DateChanged(t){this.ActAppraisalFrom.Date=null!=this.dtDateOfJoining&&this.dtDateOfJoining.getFullYear()==this.ActAppraisalFrom.Date.getFullYear()&&this.dtDateOfJoining.getMonth()==this.ActAppraisalFrom.Date.getMonth()?this.dtDateOfJoining:new Date(this.ActAppraisalFrom.Date.getFullYear(),this.ActAppraisalFrom.Date.getMonth(),1)}NextAppraisal_DateChanged(t){this.NextAppraisal.Date=new Date(this.NextAppraisal.Date.getFullYear(),this.NextAppraisal.Date.getMonth(),1)}BasicMonthly_LostFocus(t){try{let t=parseFloat(this.BasicMonthly.Text.Trim());this.BasicMonthly.Text=t.ToString("0.00")}catch(e){this.BasicMonthly.Text="0.00"}this.ExecuteFormulas()}ExecuteFormulas(){let t=30;t="Actual Days"==i.a.SessionManager.Preferences.EmpMasterPayDays?i.a.SessionManager.PayrollMonthEnd.Subtract(i.a.SessionManager.PayrollMonthStart).Days+1:parseInt(i.a.SessionManager.Preferences.EmpMasterPayDays);let e,s=0,l=0,o=(0).ToString(this.sDecimalsAmount),n=new Date(a.e.IsEmpty(this.dsData.Tables[0][0].CDOJ)?new Date("01-Jan-9000"):new Date(this.dsData.Tables[0][0].CDOJ));this.dServiceDays=a.e.GetDateDifference(new Date,n)+1,this.fldDict=new h.a,e=new d.c("Basic",""),this.fldDict.push("Basic",e),this.fldDict.Basic.setFieldValue(this.BasicMonthly.Text),e=new d.c("ServiceDays",""),this.fldDict.push("ServiceDays",e),this.fldDict.ServiceDays.setFieldValue(this.dServiceDays),e=new d.c("WeeklyOffs",""),this.fldDict.push("WeeklyOffs",e),this.fldDict.WeeklyOffs.setFieldValue(0),e=new d.c("LeavesTaken",""),this.fldDict.push("LeavesTaken",e),this.fldDict.LeavesTaken.setFieldValue(0),e=new d.c("VacDaysTaken",""),this.fldDict.push("VacDaysTaken",e),this.fldDict.VacDaysTaken.setFieldValue(0),e=new d.c("VacDays",""),this.fldDict.push("VacDays",e),this.fldDict.VacDays.setFieldValue(0),e=new d.c("VacAmount",""),this.fldDict.push("VacAmount",e),this.fldDict.VacAmount.setFieldValue(0),e=new d.c("VacEncashDays",""),this.fldDict.push("VacEncashDays",e),this.fldDict.VacEncashDays.setFieldValue(0),e=new d.c("VacEncashAmount",""),this.fldDict.push("VacEncashAmount",e),this.fldDict.VacEncashAmount.setFieldValue(0),e=new d.c("VacExcessDays",""),this.fldDict.push("VacExcessDays",e),this.fldDict.VacExcessDays.setFieldValue(0),e=new d.c("VacExcessAmount",""),this.fldDict.push("VacExcessAmount",e),this.fldDict.VacExcessAmount.setFieldValue(0),e=new d.c("VacNetAmount",""),this.fldDict.push("VacNetAmount",e),this.fldDict.VacNetAmount.setFieldValue(0),e=new d.c("TotalDays",""),this.fldDict.push("TotalDays",e),this.fldDict.TotalDays.setFieldValue(t),e=new d.c("DaysAttended",""),this.fldDict.push("DaysAttended",e),this.fldDict.DaysAttended.setFieldValue(t),e=new d.c("UnpaidDays",""),this.fldDict.push("UnpaidDays",e),(this.Parent.ClassName="AddEditEmpMasterViewModel")?this.fldDict.UnpaidDays.setFieldValue(this.Parent.GetUnpaidDays()):this.fldDict.UnpaidDays.setFieldValue(0),e=new d.c("LOPDays",""),this.fldDict.push("LOPDays",e),this.fldDict.LOPDays.setFieldValue(0),e=new d.c("Holidays",""),this.fldDict.push("Holidays",e),this.fldDict.Holidays.setFieldValue(0),e=new d.c("AdjDays",""),this.fldDict.push("AdjDays",e),this.fldDict.AdjDays.setFieldValue(0),e=new d.c("EmpType",""),this.fldDict.push("EmpType",e),this.fldDict.EmpType.setFieldValue(this.dsData.Tables[0][0].sEmpType.toString()),e=new d.c("Gender",""),this.fldDict.push("Gender",e),this.fldDict.Gender.setFieldValue(this.dsData.Tables[0][0].sGender.toString()),e=new d.c("MaritalStatus",""),this.fldDict.push("MaritalStatus",e),this.fldDict.MaritalStatus.setFieldValue(this.dsData.Tables[0][0].sMaritalStatus.toString()),e=new d.c("Nationality",""),this.fldDict.push("Nationality",e),this.fldDict.Nationality.setFieldValue(this.dsData.Tables[0][0].sNationality.toString()),e=new d.c("Religion",""),this.fldDict.push("Religion",e),this.fldDict.Religion.setFieldValue(this.dsData.Tables[0][0].sReligion.toString()),e=new d.c("ChildrenCount",""),this.fldDict.push("ChildrenCount",e),this.dvDependentInfo=this.dsData.Tables[2],null!=this.dvDependentInfo?(this.dvDependentInfo.RowFilter="EmpSeqNo="+this.NodeID+" AND Relation='Children'",this.fldDict.ChildrenCount.setFieldValue(this.dvDependentInfo.length)):this.fldDict.ChildrenCount.setFieldValue(0),e=new d.c("ChildrenDays",""),this.fldDict.push("ChildrenDays",e);let r=0;if(this.dvDependentInfo.RowFilter="EmpSeqNo="+this.NodeID+" AND Relation='Children'",this.dvDependentInfo.length>0){let t=this.dvDependentInfo;for(let e=0;e<t.length;e++)if(new Date(t[e].ChildDOB)>=i.a.SessionManager.PayrollMonthStart&&new Date(t[e].ChildDOB)<=i.a.SessionManager.PayrollMonthEnd)r+=a.e.GetDateDifference(i.a.SessionManager.PayrollMonthEnd,new Date(t[e].ChildDOB))+1;else{let s=0,l=0,o=0,n={iY:s,iM:l,iD:o};a.e.GetYearsMonthsDays(new Date(t[e].ChildDOB),i.a.SessionManager.PayrollMonthEnd,n),s=n.iY,l=n.iM,o=n.iD,18==s&&0==l?r+=i.a.SessionManager.PayrollMonthEnd.Subtract(i.a.SessionManager.PayrollMonthStart).Days+1-o:s<18&&(r+=i.a.SessionManager.PayrollMonthEnd.Subtract(i.a.SessionManager.PayrollMonthStart).Days+1)}}this.fldDict.ChildrenDays.setFieldValue(r),e=new d.c("PayrollMonthNo",""),this.fldDict.push("PayrollMonthNo",e),this.fldDict.PayrollMonthNo.setFieldValue(i.a.SessionManager.PayrollMonth.iMonth()),e=new d.c("PayrollYearNo",""),this.fldDict.push("PayrollYearNo",e),this.fldDict.PayrollYearNo.setFieldValue(i.a.SessionManager.PayrollMonth.getFullYear()),e=new d.c("DOJMonth",""),this.fldDict.push("DOJMonth",e),this.fldDict.DOJMonth.setFieldValue(n.iMonth()),e=new d.c("DOJYear",""),this.fldDict.push("DOJYear",e),this.fldDict.DOJYear.setFieldValue(n.getFullYear()),e=new d.c("DORMonth",""),this.fldDict.push("DORMonth",e),null!=this.dsData&&this.dsData.Tables.length>0&&this.dsData.Tables[0].length>0&&!a.e.IsEmpty(this.dsData.Tables[0][0].CDORelieve)?this.fldDict.DORMonth.setFieldValue(new Date(this.dsData.Tables[0][0].CDORelieve).iMonth()):this.fldDict.DORMonth.setFieldValue(1),e=new d.c("DORYear",""),this.fldDict.push("DORYear",e),null!=this.dsData&&this.dsData.Tables.length>0&&this.dsData.Tables[0].length>0&&!a.e.IsEmpty(this.dsData.Tables[0][0].CDORelieve)?this.fldDict.DORYear.setFieldValue(new Date(this.dsData.Tables[0][0].CDORelieve).getFullYear()):this.fldDict.DORYear.setFieldValue(2200),e=new d.c("EmpConfirmationDate",""),this.fldDict.push("EmpConfirmationDate",e),this.fldDict.EmpConfirmationDate.setFieldValue(this.dtDOConfirm.Date),e=new d.c("LeaveFromDate",""),this.fldDict.push("LeaveFromDate",e),this.fldDict.LeaveFromDate.setFieldValue(new Date),e=new d.c("LeaveNoOfDays",""),this.fldDict.push("LeaveNoOfDays",e),this.fldDict.LeaveNoOfDays.setFieldValue(0),e=new d.c("EmpVacationDays",""),this.fldDict.push("EmpVacationDays",e),this.fldDict.EmpVacationDays.setFieldValue(this.dsData.Tables[0][0].VacDaysPerMonth.toString()),e=new d.c("AppraisalMonthNo",""),this.fldDict.push("AppraisalMonthNo",e),this.dvApprisal=this.dsData.Tables[4],this.dvApprisal=this.dvApprisal.filter(t=>t.EmpSeqNo==this.NodeID&&t.CEffectFrom<=this.EffectFrom.Date.ToString("dd/MMM/yyyy")),this.dvApprisal.sort((t,e)=>e.CEffectFrom-t.CEffectFrom),null!=this.dvApprisal&&this.dvApprisal.length>1?0==this.EditSeqNo||new Date(this.dvApprisal[0].CEffectFrom)!=this.EffectFrom.Date?this.fldDict.AppraisalMonthNo.setFieldValue(this.EffectFrom.Date.iMonth()):this.fldDict.AppraisalMonthNo.setFieldValue(new Date(this.dvApprisal[0].CEffectFrom).iMonth()):this.dvApprisal.length>0&&new Date(this.dvApprisal[0].CEffectFrom)!=this.EffectFrom.Date?this.fldDict.AppraisalMonthNo.setFieldValue(this.EffectFrom.Date.iMonth()):this.fldDict.AppraisalMonthNo.setFieldValue(0),e=new d.c("VacDaysPayYes",""),this.fldDict.push("VacDaysPayYes",e),this.fldDict.VacDaysPayYes.setFieldValue(0),e=new d.c("VacDaysPayNo",""),this.fldDict.push("VacDaysPayNo",e),this.fldDict.VacDaysPayNo.setFieldValue(0),this.dvApprisal=this.dsData.Tables[4],this.dvApprisal=this.dvApprisal.filter(t=>t.EmpSeqNo==this.NodeID&&t.CEffectFrom<=this.EffectFrom.Date.ToString("dd/MMM/yyyy"));let c=null,u=0;if(null!=this.dsPayStructure&&(c=this.dsPayStructure.Tables[0].DefaultView),null!=this.dvApprisal&&this.dvApprisal.length>0&&(this.dvApprisal.sort((t,e)=>e.CEffectFrom-t.CEffectFrom),null!=this.dvApprisal&&this.dvApprisal.length>1&&(c=c.filter(t=>1==t.Type&&"Yes"==t.Applicable),null!=c&&c.length>0)))for(let d=0;d<c.length;d++)a.e.IsEmpty(i.a.SessionManager.Preferences.GosiComponent)||i.a.SessionManager.Preferences.GosiComponent!=c[d].ComponentID.toString()||(u=new Date(this.dvApprisal[0].CEffectFrom)!=this.EffectFrom.Date?parseFloat(this.dvApprisal[0]["Earning"+parseInt(c[d].SNo)]):parseFloat(this.dvApprisal[1]["Earning"+parseInt(c[d].SNo)]));e=new d.c("PreviousGosiValue",""),this.fldDict.push("PreviousGosiValue",e),this.fldDict.PreviousGosiValue.setFieldValue(u),e=new d.c("TotCheckInLateMins",""),this.fldDict.push("TotCheckInLateMins",e),this.fldDict.TotCheckInLateMins.setFieldValue(0),e=new d.c("TotCheckOutEarlyMins",""),this.fldDict.push("TotCheckOutEarlyMins",e),this.fldDict.TotCheckOutEarlyMins.setFieldValue(0),e=new d.c("TotBreak1MoreMins",""),this.fldDict.push("TotBreak1MoreMins",e),this.fldDict.TotBreak1MoreMins.setFieldValue(0),e=new d.c("TotBreak2MoreMins",""),this.fldDict.push("TotBreak2MoreMins",e),this.fldDict.TotBreak2MoreMins.setFieldValue(0),e=new d.c("TotBreak3MoreMins",""),this.fldDict.push("TotBreak3MoreMins",e),this.fldDict.TotBreak3MoreMins.setFieldValue(0),e=new d.c("TotBreak4MoreMins",""),this.fldDict.push("TotBreak4MoreMins",e),this.fldDict.TotBreak4MoreMins.setFieldValue(0),e=new d.c("TotBreak5MoreMins",""),this.fldDict.push("TotBreak5MoreMins",e),this.fldDict.TotBreak5MoreMins.setFieldValue(0),e=new d.c("TotLateHrsToDeduct",""),this.fldDict.push("TotLateHrsToDeduct",e),this.fldDict.TotLateHrsToDeduct.setFieldValue(0),e=new d.c("TotLateLeavesToDeduct",""),this.fldDict.push("TotLateLeavesToDeduct",e),this.fldDict.TotLateLeavesToDeduct.setFieldValue(0),e=new d.c("TotWorkingMinsLessBy",""),this.fldDict.push("TotWorkingMinsLessBy",e),this.fldDict.TotWorkingMinsLessBy.setFieldValue(0),e=new d.c("TotAbsentMinsLessBy",""),this.fldDict.push("TotAbsentMinsLessBy",e),this.fldDict.TotAbsentMinsLessBy.setFieldValue(0),this.dvCCData.RowFilter="EmpSeqNo="+this.NodeID;let D="",p="";if(e=new d.c("RptManagerCode",""),this.fldDict.push("RptManagerCode",e),e=new d.c("RptManagerName",""),this.fldDict.push("RptManagerName",e),this.dvCCData.length>0&&!a.e.IsEmpty(this.dvCCData[0].RptManager)){let t=this.dvDimsData.filter(t=>"RptManager"==t.SysColName&&t.NodeID==this.dvCCData[0].RptManager.toString());t.length>0&&(D=t[0].Code.toString(),p=t[0].Name.toString())}if(this.fldDict.RptManagerCode.setFieldValue(D),this.fldDict.RptManagerName.setFieldValue(p),this.dvCCData.length>0)for(let i=0;i<Object.keys(this.dvCCData[0]).length;i++){const t=Object.keys(this.dvCCData[0])[i];if(!t.Contains("CCNID"))continue;let s=this.dvDimsData.filter(e=>e.SysColName==t);s.length>0&&(e=new d.c(s[0].UserColumnName.toString()+"Code",""),this.fldDict.push(s[0].UserColumnName.toString()+"Code",e),e=new d.c(s[0].UserColumnName.toString()+"Name",""),this.fldDict.push(s[0].UserColumnName.toString()+"Name",e),s=this.dvDimsData.filter(e=>e.SysColName==t&&e.NodeID==this.dvCCData[0][t].toString()),this.fldDict[s[0].UserColumnName.toString()+"Code"].setFieldValue(s[0].Code.toString()),this.fldDict[s[0].UserColumnName.toString()+"Name"].setFieldValue(s[0].Name.toString()))}for(let i=0;i<this.dgvEarnings.Table.length;i++)a.e.IsEmpty(this.dgvEarnings.Table[i].EarSNo)||(e=new d.c(this.dgvEarnings.Table[i].Earnings.toString(),""),this.fldDict.push(this.dgvEarnings.Table[i].Earnings.toString(),e),this.fldDict[this.dgvEarnings.Table[i].Earnings.toString()].setFieldValue(this.dgvEarnings.Table[i].EarValue.toString()),e=new d.c("Calc"+this.dgvEarnings.Table[i].Earnings.toString(),""),this.fldDict.push("Calc"+this.dgvEarnings.Table[i].Earnings.toString(),e),this.fldDict["Calc"+this.dgvEarnings.Table[i].Earnings.toString()].setFieldValue(this.dgvEarnings.Table[i].EarValue.toString()),e=new d.c("Arr_"+this.dgvEarnings.Table[i].Earnings.toString(),""),this.fldDict.push("Arr_"+this.dgvEarnings.Table[i].Earnings.toString(),e),this.fldDict["Arr_"+this.dgvEarnings.Table[i].Earnings.toString()].setFieldValue(0),e=new d.c("Adj_"+this.dgvEarnings.Table[i].Earnings.toString(),""),this.fldDict.push("Adj_"+this.dgvEarnings.Table[i].Earnings.toString(),e),this.fldDict["Adj_"+this.dgvEarnings.Table[i].Earnings.toString()].setFieldValue(0));for(let i=0;i<this.dgvDeductions.Table.length;i++)a.e.IsEmpty(this.dgvDeductions.Table[i].DedSNo)||(e=new d.c(this.dgvDeductions.Table[i].Deductions.toString(),""),this.fldDict.push(this.dgvDeductions.Table[i].Deductions.toString(),e),this.fldDict[this.dgvDeductions.Table[i].Deductions.toString()].setFieldValue(this.dgvDeductions.Table[i].DedValue.toString()),e=new d.c("Calc"+this.dgvDeductions.Table[i].Deductions.toString(),""),this.fldDict.push("Calc"+this.dgvDeductions.Table[i].Deductions.toString(),e),this.fldDict["Calc"+this.dgvDeductions.Table[i].Deductions.toString()].setFieldValue(this.dgvDeductions.Table[i].DedValue.toString()),e=new d.c("Arr_"+this.dgvDeductions.Table[i].Deductions.toString(),""),this.fldDict.push("Arr_"+this.dgvDeductions.Table[i].Deductions.toString(),e),this.fldDict["Arr_"+this.dgvDeductions.Table[i].Deductions.toString()].setFieldValue(0),e=new d.c("Adj_"+this.dgvDeductions.Table[i].Deductions.toString(),""),this.fldDict.push("Adj_"+this.dgvDeductions.Table[i].Deductions.toString(),e),this.fldDict["Adj_"+this.dgvDeductions.Table[i].Deductions.toString()].setFieldValue(0));let g=this.fldDict;for(let d=0;d<this.dgvEarnings.Table.length;d++)if(null!=this.dgvEarnings.Table[d].EarSNo&&null!=this.dgvEarnings.Table[d].EarSNo&&""!=this.dgvEarnings.Table[d].EarSNo.toString()){if(null!=this.dgvEarnings.Table[d].EarFormula&&null!=this.dgvEarnings.Table[d].EarFormula&&""!=this.dgvEarnings.Table[d].EarFormula.toString())try{o=parseFloat(i.a.eval.EvaluateExpression(this.dgvEarnings.Table[d].EarFormula.toString(),g)).ToString(this.sDecimalsAmount),this.dgvEarnings.Table[d].EarValue=this.RoundOffValue(parseFloat(o),parseFloat(this.dgvEarnings.Table[d].EarROff)),this.fldDict[this.dgvEarnings.Table[d].Earnings.toString()].setFieldValue(this.dgvEarnings.Table[d].EarValue.toString()),this.fldDict["Calc"+this.dgvEarnings.Table[d].Earnings.toString()].setFieldValue(this.dgvEarnings.Table[d].EarValue.toString())}catch(m){}a.e.IsEmpty(this.dgvEarnings.Table[d].EarAddToNet)||"Net"!=this.dgvEarnings.Table[d].EarAddToNet.toString()&&"NetAndTax"!=this.dgvEarnings.Table[d].EarAddToNet.toString()||(s+=parseFloat(this.dgvEarnings.Table[d].EarValue))}for(let d=0;d<this.dgvDeductions.Table.length;d++)if(!a.e.IsEmpty(this.dgvDeductions.Table[d].DedSNo)){if(!a.e.IsEmpty(this.dgvDeductions.Table[d].DedFormula))try{if(o=i.a.eval.EvaluateExpression(this.dgvDeductions.Table[d].DedFormula.toString(),g).toString(),o=parseFloat(o).ToString(this.sDecimalsAmount),"ESI"==this.dgvDeductions.Table[d].Deductions.toString().toUpperCase())o=Math.ceil(parseFloat(o)).ToString(this.sDecimalsAmount);else if("PT"==this.dgvDeductions.Table[d].Deductions.toString().toUpperCase()){let t=o.Replace(",","");o=(0).ToString(this.sDecimalsAmount);let e=this.dsPayStructure.Tables[0];if(e.length>0){let s=new Date(e[0].PayrollMonth),l=new Date,n=new Date,r=new Date,d={PayrollMonth:l,PayrollMonthStart:n,PayrollMonthEnd:r};a.e.SetPayrollDate(s,d),l=d.PayrollMonth,n=d.PayrollMonthStart,r=d.PayrollMonthEnd;let h=i.a.empService.GetQueryData(this.NodeID,"APP009",l.ToString("dd/MMM/yyyy"),l.ToString("dd/MMM/yyyy"),l.ToString("dd/MMM/yyyy"));if(null!=h&&h.Tables.length>0){let e="1";h.Tables[0].length>0?e=h.Tables[0][0].PTDimension.toString():h.Tables[1].length>0&&(e=h.Tables[1][0].PTDimension.toString());let s=h.Tables[2];if(h.Tables[0].length>0||h.Tables[1].length>0){let l=h.Tables[2];if(l=l.filter(t=>t.NodeID==e&&""!=t.Formula),null!=l&&l.length>0&&!a.e.IsEmpty(l[0].Formula)){let t=this.fldDict;o=parseFloat(i.a.eval.EvaluateExpression(l[0].Formula.toString(),t)).toString()}else s=s.filter(s=>s.NodeID==e&&s.FromSlab<=t&&s.ToSlab>=t),s.length>0&&(o=a.e.String(s[0].Amount))}}}}this.dgvDeductions.Table[d].DedValue=this.RoundOffValue(parseFloat(o),parseFloat(this.dgvDeductions.Table[d].DedROff)),this.fldDict[this.dgvDeductions.Table[d].Deductions.toString()].setFieldValue(this.dgvDeductions.Table[d].DedValue.toString()),this.fldDict["Calc"+this.dgvDeductions.Table[d].Deductions.toString()].setFieldValue(this.dgvDeductions.Table[d].DedValue.toString())}catch(F){}null==this.dgvDeductions.Table[d].DedAddToNet||null==this.dgvDeductions.Table[d].DedAddToNet||""==this.dgvDeductions.Table[d].DedAddToNet.toString()||"Net"!=this.dgvDeductions.Table[d].DedAddToNet.toString()&&"NetAndTax"!=this.dgvDeductions.Table[d].DedAddToNet.toString()||(l+=parseFloat(this.dgvDeductions.Table[d].DedValue))}this.dgvEarnings.Columns[2].footer=s.ToString("0.00"),this.dgvDeductions.Columns[2].footer=l.ToString("0.00"),this.dgvEarnings.UpdateFooter(),this.dgvDeductions.UpdateFooter(),this.dgvEarnings.refreshDataView(),this.dgvDeductions.refreshDataView(),this.NetSalary.Text=(s-l).ToString("0.00"),this.webtotEarnings=s,this.webtotDeductions=l}RoundOffValue(t,e){if(e>0&&t>0){let s=0,i=!1;s=t%e,s>0&&(e/s<=2&&(i=!0),t-=s,i&&(t+=e))}return t.ToString(this.sDecimalsAmount).Replace(",","")}LoadGrids(){Logger.InfoLog("AddEditAppraisalViewModel::Entering LoadGrids()"),this.dgvEarnings=new n.a,this.dgvEarnings.BeginEdit.Subscribe(this,"dgvEarnings_BeginEdit"),this.dgvEarnings.OnCellEditEnding.Subscribe(this,"dgvEarnings_EndEdit"),this.dgvEarnings.Columns=[],this.dgvEarnings.Height=200,this.dgvEarnings.Width="";let t,e=new r.a;if(e.Header="#",e.DisplayMember="SlNo",e.ID="SlNo",e.Width=45,e.ReadOnly=!0,this.dgvEarnings.Columns.push(e),e=new r.a,e.Header="Earnings",e.DisplayMember="Earnings",e.ID="Earnings",e.Width=150,e.ReadOnly=!0,this.dgvEarnings.Columns.push(e),e=new r.a,e.Header="Value",e.DisplayMember="EarValue",e.ID="EarValue",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="2",this.dgvEarnings.Columns.push(e),this.dgvDeductions=new n.a,this.dgvDeductions.BeginEdit.Subscribe(this,"dgvDeductions_BeginEdit"),this.dgvDeductions.OnCellEditEnding.Subscribe(this,"dgvDeductions_EndEdit"),this.dgvDeductions.Columns=[],this.dgvDeductions.Height=200,this.dgvDeductions.Width="",e=new r.a,e.Header="#",e.DisplayMember="SlNo",e.ID="SlNo",e.Width=45,e.ReadOnly=!0,this.dgvDeductions.Columns.push(e),e=new r.a,e.Header="Deductions",e.DisplayMember="Deductions",e.ID="Deductions",e.Width=150,e.ReadOnly=!0,this.dgvDeductions.Columns.push(e),e=new r.a,e.Header="Value",e.DisplayMember="DedValue",e.ID="DedValue",e.Width=100,e.ReadOnly=!1,e.DataType="FLOAT",e.ShowTotal=!0,e.IsCalculated=1,e.DecimalPoints="2",this.dgvDeductions.Columns.push(e),this.dsPayStructure=i.a.empService.GetQueryData(this.NodeID,"APP008","","",""),this.dgvEarnings.Clear(),this.dgvEarnings.TableColumns.push("SlNo"),this.dgvEarnings.TableColumns.push("Earnings"),this.dgvEarnings.TableColumns.push("EarValue"),this.dgvEarnings.TableColumns.push("EarAddToNet"),this.dgvEarnings.TableColumns.push("EarFType"),this.dgvEarnings.TableColumns.push("Earnings_GRAY"),this.dgvEarnings.TableColumns.push("EarValue_GRAY"),this.dgvEarnings.TableColumns.push("EarSNo"),this.dgvEarnings.TableColumns.push("EarFormula"),this.dgvEarnings.TableColumns.push("EarROff"),this.dgvEarnings.TableColumns.push("EarComponentID"),this.dgvEarnings.TableColumns.push("IsVisible"),this.dgvDeductions.TableColumns.push("SlNo"),this.dgvDeductions.TableColumns.push("Deductions"),this.dgvDeductions.TableColumns.push("DedValue"),this.dgvDeductions.TableColumns.push("DedAddToNet"),this.dgvDeductions.TableColumns.push("DedFType"),this.dgvDeductions.TableColumns.push("Deductions_GRAY"),this.dgvDeductions.TableColumns.push("DedValue_GRAY"),this.dgvDeductions.TableColumns.push("DedSNo"),this.dgvDeductions.TableColumns.push("DedFormula"),this.dgvDeductions.TableColumns.push("DedROff"),this.dgvDeductions.TableColumns.push("DedComponentID"),this.dgvDeductions.TableColumns.push("IsVisible"),this.dgvEarnings.Clear(),this.dgvDeductions.Clear(),this.EditSeqNo>0){t=this.dsPayStructure.Tables[1].filter(t=>t.SeqNo==this.EditSeqNo)[0],null!=t&&null!=t&&(this.BasicMonthly.Text=parseFloat(t.BasicMonthly).ToString("0.00"),this.EffectFrom.Date=new Date(t.ApraisalDate),this.ActAppraisalFrom.Date=new Date(t.CApplyFrom),this.Reason.Text=a.e.String(t.Reason),this.Remarks.Text=a.e.String(t.Remarks),this.AppraisalType.SelectedValue=a.e.String(t.AppraisalType));let e=i.a.empService.GetQueryData(this.NodeID,"APP002","","","");if(null!=e&&e.length>0)if(0==e.length)null!=this.dtNextAppraisalDate&&(this.NextAppraisal.Date=this.dtNextAppraisalDate);else if(a.e.String(e[e.length-1].SeqNo)==this.EditSeqNo.toString())null!=this.dtNextAppraisalDate&&(this.NextAppraisal.Date=this.dtNextAppraisalDate);else{let t=e.filter(t=>t.CApplyFrom>"'"+this.ActAppraisalFrom.Date.ToString("dd/MMM/yyyy")+"'");null!=t&&t.length>0&&(this.NextAppraisal.Date=new Date(t[0].CApplyFrom))}}else t=this.dsPayStructure.Tables[1][0],null!=t&&(this.BasicMonthly.Text=parseFloat(t.BasicMonthly).ToString("0.00")),this.NextAppraisal.Date=new Date;if(null!=this.dsPayStructure&&this.dsPayStructure.Tables.length>0&&this.dsPayStructure.Tables[0].length>0&&null!=t){let e,s,i=this.dsPayStructure.Tables[0];s=i.filter(t=>1==t.Type&&"Yes"==t.Applicable&&"OverTime"!=t.FieldType);for(let l=0;l<s.length;l++)(a.e.IsEmpty(s[l].Behaviour)||"Accruals"!=s[l].Behaviour.toString()&&"Accruals-AccumulateForPreviousYears"!=s[l].Behaviour.toString())&&(e=this.dgvEarnings.NewRow(),e.SlNo=(l+1).toString(),e.Earnings=a.e.String(s[l].ComponentName),e.EarComponentID=a.e.String(s[l].ComponentID),e.EarSNo=a.e.String(s[l].SNo),e.EarFormula=a.e.String(s[l].Formula),e.EarROff=a.e.String(s[l].ROff),e.EarValue=parseFloat(t["Earning"+e.EarSNo]).ToString("0.00"),e.EarAddToNet=a.e.String(s[l].AddToNet),e.EarFType=a.e.String(s[l].FieldType),"EmployeeMaster"!=a.e.String(e.EarFType)&&(e.Earnings_GRAY="1",e.EarValue_GRAY="1"),this.dgvEarnings.addRow(e));s=i.filter(t=>2==t.Type&&"Yes"==t.Applicable&&"NetSalary"!=t.FieldType&&"OverTime"!=t.FieldType);for(let l=0;l<s.length;l++)e=this.dgvDeductions.NewRow(),e.SlNo=(l+1).toString(),e.Deductions=a.e.String(s[l].ComponentName),e.DedComponentID=a.e.String(s[l].ComponentID),e.DedSNo=a.e.String(s[l].SNo),e.DedFormula=a.e.String(s[l].Formula),e.DedROff=a.e.String(s[l].ROff),e.DedValue=parseFloat(t["Deduction"+e.DedSNo]).ToString("0.00"),e.DedAddToNet=a.e.String(s[l].AddToNet),e.DedFType=a.e.String(s[l].FieldType),"EmployeeMaster"!=a.e.String(e.DedFType)&&(e.Deductions_GRAY="1",e.DedValue_GRAY="1"),this.dgvDeductions.addRow(e)}this.BasicMonthly_LostFocus(this.BasicMonthly),Logger.InfoLog("AddEditAppraisalViewModel::Exiting LoadGrids()")}GetDtGrSalSalbs(){this.dtGrSalSalbs=i.a.empService.GetQueryData(this.NodeID,"APP007","","","")}dgvEarnings_EndEdit(t,e,s){if("EarValue"==e){if(""==t[e].toString().Trim()&&(t[e]="0.00"),i.a.SessionManager.Preferences.ContainsKey("ConsiderGradeWiseSalarySlabs")&&"True"==i.a.SessionManager.Preferences.ConsiderGradeWiseSalarySlabs&&(null==this.dtGrSalSalbs&&this.GetDtGrSalSalbs(),null!=this.dtGrSalSalbs&&this.dtGrSalSalbs.length>0)){let s=null;if(s=this.dtGrSalSalbs.filter("EarValue"==e?e=>e.ComponentID==t.EarComponentID.toString():e=>e.ComponentID==t.DedComponentID.toString()),null!=s&&s.length>0&&this.ValidateGradeWiseSalarySlabsApplicableFormula(s[0])){let i=0,l=0,o=0;i=a.e.Double(t[e]),l=a.e.Double(s[0].MinAmount),o=a.e.Double(s[0].MaxAmount),i>=l&&i<=o||("Stop"==s[0].AlertType.toString()?(alert('"'+s[0].ComponentName.toString()+'" Amount should be in between '+l+"  and  "+o),t[e]=(0).ToString(this.sDecimalsAmount)):confirm('"'+s[0].ComponentName.toString()+'" Amount should be in between '+l+"  and  "+o+"\r\nDo you want to proceed.?")||(t[e]=(0).ToString(this.sDecimalsAmount)))}}this.ExecuteFormulas()}}ValidateGradeWiseSalarySlabsApplicableFormula(t){if(null!=t&&null!=t.ApplicableFormula&&null!=t.ApplicableFormula&&""!=t.ApplicableFormula.toString().Trim()){this.oEvalPayFormulas=new o.b,this.oEvalPayFormulas.sEmpSeqNo=this.NodeID.toString();let e={PayrollMonth:this.oEvalPayFormulas.PayrollMonth,PayrollMonthStart:this.oEvalPayFormulas.PayrollMonthStart,PayrollMonthEnd:this.oEvalPayFormulas.PayrollMonthEnd};if(a.e.SetPayrollDate(new Date,e),this.oEvalPayFormulas.PayrollMonth=e.PayrollMonth,this.oEvalPayFormulas.PayrollMonthStart=e.PayrollMonthStart,this.oEvalPayFormulas.PayrollMonthEnd=e.PayrollMonthEnd,this.oEvalPayFormulas.arrLstCPFields[6].Clear(),this.oCPF=new o.a,this.oCPF.ComponentName="GrdWiseSalSlabsFormula",this.oCPF.SNo=1,this.oCPF.Formula=t.ApplicableFormula.toString(),this.oCPF.dEarned=this.oCPF.dActual="0",this.oEvalPayFormulas.arrLstCPFields[6].push(this.oCPF),this.oEvalPayFormulas.Intialize(),this.oEvalPayFormulas.othMPField.BasicMonthly=""==this.BasicMonthly.Text?0:parseFloat(this.BasicMonthly.Text),this.oEvalPayFormulas.othMPField.TotalLeaves=0,this.oEvalPayFormulas.othMPField.DaysAttended=this.oEvalPayFormulas.othMPField.TotalDays,this.oEvalPayFormulas.ExecuteAllFormulas(),"GrdWiseSalSlabsFormula"==this.oEvalPayFormulas.arrLstCPFields[6][0].ComponentName)return 0!=parseFloat(this.oEvalPayFormulas.arrLstCPFields[6][0].dEarned)}return!0}dgvDeductions_EndEdit(t,e,s){if("DedValue"==e){if(""==t[e].toString().Trim()&&(t[e]="0.00"),i.a.SessionManager.Preferences.ContainsKey("ConsiderGradeWiseSalarySlabs")&&"True"==i.a.SessionManager.Preferences.ConsiderGradeWiseSalarySlabs&&(null==this.dtGrSalSalbs&&this.GetDtGrSalSalbs(),null!=this.dtGrSalSalbs&&this.dtGrSalSalbs.length>0)){let s=null;if(s=this.dtGrSalSalbs.filter("EarValue"==e?e=>e.ComponentID==t.EarComponentID.toString():e=>e.ComponentID==t.DedComponentID.toString()),null!=s&&s.length>0&&this.ValidateGradeWiseSalarySlabsApplicableFormula(s[0])){let i=0,l=0,o=0;i=a.e.Double(t[e]),l=a.e.Double(s[0].MinAmount),o=a.e.Double(s[0].MaxAmount),i>=l&&i<=o||("Stop"==s[0].AlertType.toString()?(alert('"'+s[0].ComponentName.toString()+'" Amount should be in between '+l+"  and  "+o),t[e]=(0).ToString(this.sDecimalsAmount)):confirm('"'+s[0].ComponentName.toString()+'" Amount should be in between '+l+"  and  "+o+"\r\nDo you want to proceed.?")||(t[e]=(0).ToString(this.sDecimalsAmount)))}}this.ExecuteFormulas()}}dgvEarnings_BeginEdit(t,e,s){return"EarValue"==t.args.column.field&&"1"==a.e.String(t.args.item.EarValue_GRAY)?(t.args.Cancel=!0,!0):(t.args.Cancel=!1,!1)}dgvDeductions_BeginEdit(t,e,s){return"DedValue"==t.args.column.field&&"1"==a.e.String(t.args.item.DedValue_GRAY)?(t.args.Cancel=!0,!0):(t.args.Cancel=!1,!1)}OnButtonClick(t){if("Save"==t.toString()){if(null!=this.dtDateOfJoining&&(this.EffectFrom.Date<this.dtDateOfJoining||this.ActAppraisalFrom.Date<this.dtDateOfJoining)){let t=i.a.empService.GetQueryData(this.NodeID,"APP010",this.EditSeqNo,this.EffectFrom.Date.ToString("dd/MMM/yyyy"),"").Table[0];if(!(null!=t&&t.length>0))return this.DisplayMessage="EffectFrom and ApplyFrom should be Grater than or Equal to the Date of Joining.",void(this.MessageVisibility=!0);this.EffectFrom.Date=this.dtDateOfJoining,this.ActAppraisalFrom.Date=this.EffectFrom.Date}let t=i.a.empService.GetQueryData(this.NodeID,"APP011","","","");if(null!=t&&t.length>0&&parseInt(t[0].SeqNo)==this.EditSeqNo&&null!=this.dtDateOfJoining&&(this.EffectFrom.Date!=this.dtDateOfJoining||this.ActAppraisalFrom.Date!=this.dtDateOfJoining))return this.DisplayMessage="EffectFrom and ApplyFrom should be Equal to the Date of Joining.",void(this.MessageVisibility=!0);let e=i.a.empService.GetQueryData(this.NodeID,"APP003",this.EditSeqNo,this.EffectFrom.Date.ToString("dd/MMM/yyyy"),"").Table[0];if(null!=e&&e.length>0)return this.DisplayMessage="Appraisals already defined for this Month, Can't allow More than once.",void(this.MessageVisibility=!0);if("False"==i.a.SessionManager.Preferences.AllowAppraisalIfProcessed){let t;if(this.EditSeqNo>0){if(i.a.empService.GetQueryData(this.NodeID,"APP004",this.EditSeqNo,"",""),null!=t&&t.Tables.length>0&&t.Tables[0].length>0)return this.DisplayMessage="Appraisal can not be processed. Because already processed payrolls exists.",void(this.MessageVisibility=!0)}else if(t=i.a.empService.GetQueryData(this.NodeID,"APP005",this.EffectFrom.Date,"",""),null!=t&&t.Tables.length>0&&t.Tables[0].length>0)return this.DisplayMessage="Appraisal can not be processed. Because already processed payrolls exists.",void(this.MessageVisibility=!0)}if(i.a.SessionManager.Preferences.ContainsKey("ConsiderGradeWiseSalarySlabs")&&"True"==i.a.SessionManager.Preferences.ConsiderGradeWiseSalarySlabs&&(this.dtGrSalSalbs=i.a.empService.GetQueryData(this.NodeID,"APP006",this.isFromBulkAppraisals,this.sBulkAppraisalGrade,""),null!=this.dtGrSalSalbs&&this.dtGrSalSalbs.length>0)){let t="",e=!1,s=null;for(let i=0;i<this.dgvEarnings.Table.length;i++)if(!a.e.IsEmpty(this.dgvEarnings.Table[i].EarFType)&&"EmployeeMaster"==this.dgvEarnings.Table[i].EarFType.toString()&&(s=this.dtGrSalSalbs.filter(t=>t.ComponentID==this.dgvEarnings.Table[i].EarComponentID.toString()),null!=s&&s.length>0&&this.ValidateGradeWiseSalarySlabsApplicableFormula(s[0]))){let l=0,o=0,n=0;l=a.e.Double(this.dgvEarnings.Table[i].EarValue),o=a.e.Double(s[0].MinAmount),n=a.e.Double(s[0].MaxAmount),l>=o&&l<=n||("Stop"==s[0].AlertType.toString()?(e=!0,t+='\r\n"'+s[0].ComponentName.toString()+'" Amount should be in between '+o+"  and  "+n):t+='\r\n"'+s[0].ComponentName.toString()+'" Amount should be in between '+o+"  and  "+n)}for(let i=0;i<this.dgvDeductions.Table.length;i++)if(!a.e.IsEmpty(this.dgvDeductions.Table[i].DedFType)&&"EmployeeMaster"==this.dgvDeductions.Table[i].DedFType.toString()&&(s=this.dtGrSalSalbs.filter(t=>t.ComponentID==this.dgvDeductions.Table[i].DedComponentID.toString()),null!=s&&s.length>0&&this.ValidateGradeWiseSalarySlabsApplicableFormula(s[0]))){let l=0,o=0,n=0;l=a.e.Double(this.dgvDeductions.Table[i].DedValue),o=a.e.Double(s[0].MinAmount),n=a.e.Double(s[0].MaxAmount),l>=o&&l<=n||("Stop"==s[0].AlertType.toString()?(e=!0,t+='\r\n"'+s[0].ComponentName.toString()+'" Amount should be in between '+o+"  and  "+n):t+='\r\n"'+s[0].ComponentName.toString()+'" Amount should be in between '+o+"  and  "+n)}if(t.length>0){if(e)return this.isFromBulkAppraisals&&(t="Emp.Code : "+this.sEmpCode+"-"+t,this.DisplayMessage=t),void alert(t);if(this.isFromBulkAppraisals&&(t="Emp.Code : "+this.sEmpCode+"-"+t),!confirm(t+"\r\nDo you want to proceed.?"))return void(this.isFromBulkAppraisals&&(this.DisplayMessage=t))}}if(this.strUpdate="",this.strUpdate=this.GetPayStructure(),this.isFromBulkAppraisals)return void(this.strUpdate="  "+this.strUpdate+"  ");let s=[];s.push(this.NodeID),s.push(this.EditSeqNo),s.push(this.EffectFrom.Date.ToString("dd/MMM/yyyy")),s.push(this.strUpdate),s.push(1),s.push(i.a.SessionManager.UserID),s.push(i.a.SessionManager.LanguageID),i.a.empService.ExecuteQuery_SP(s,"spPAY_ExecuteQuery"),null!=this.Parent&&(this.Parent.ClearScreen(),this.Parent.Opacity=1,this.Parent.DialogResult=!0)}else"Cancel"==t.toString()&&null!=this.Parent&&(this.Parent.Opacity=1,this.Parent.DialogResult=!1);i.a.page.HideDialog()}GetPayStructure(){let t="";if(0==this.EditSeqNo){let e="";t+="INSERT INTO PAY_EmpPay(EmployeeID,EffectFrom,ApplyFrom,NetSalary,BasicMonthly,Remarks,Reason,CreatedBy,CreatedDate,ModifiedDate,AppraisalType",e+="VALUES("+this.NodeID+",CONVERT(INT,CONVERT(DATETIME,'"+this.EffectFrom.Date.ToString("dd/MMM/yyyy")+"')),CONVERT(INT,CONVERT(DATETIME, '"+this.ActAppraisalFrom.Date.ToString("dd/MMM/yyyy")+"')),",e+=this.NetSalary.Text,e+=","+this.BasicMonthly.Text,e+=",'"+this.Remarks.Text+"'",e+=",'"+this.Reason.Text+"'",e+=",'"+i.a.SessionManager.UserName+"'",e+=",CONVERT(FLOAT,GETDATE())",e+=",CONVERT(FLOAT,GETDATE())",e+=null==this.AppraisalType.SelectedValue||""==this.AppraisalType.SelectedValue?",0":","+this.AppraisalType.SelectedValue;for(let s=0;s<this.dgvEarnings.Table.length;s++)a.e.IsEmpty(this.dgvEarnings.Table[s].EarSNo)||a.e.IsEmpty(this.dgvEarnings.Table[s].EarValue)||""==this.dgvEarnings.Table[s].EarValue.toString().Trim()||(t+=",Earning"+this.dgvEarnings.Table[s].EarSNo.toString(),e+=","+this.dgvEarnings.Table[s].EarValue.toString());for(let s=0;s<this.dgvDeductions.Table.length;s++)a.e.IsEmpty(this.dgvDeductions.Table[s].DedSNo)||a.e.IsEmpty(this.dgvDeductions.Table[s].DedValue)||""==this.dgvDeductions.Table[s].DedValue.toString().Trim()||(t+=",Deduction"+this.dgvDeductions.Table[s].DedSNo.toString(),e+=","+this.dgvDeductions.Table[s].DedValue.toString());return t+=")"+e.toString()+")",t+=" UPDATE COM_CC50051 SET NextAppraisalDate=CONVERT(INT,CONVERT(DATETIME, '"+this.NextAppraisal.Date.ToString("dd/MMM/yyyy")+"')) WHERE NodeID="+this.NodeID,t.toString()}t+="UPDATE PAY_EmpPay SET EffectFrom=CONVERT(INT,CONVERT(DATETIME, '"+this.EffectFrom.Date.ToString("dd/MMM/yyyy")+"')),ApplyFrom=CONVERT(INT,CONVERT(DATETIME, '"+this.ActAppraisalFrom.Date.ToString("dd/MMM/yyyy")+"')),NetSalary="+this.NetSalary.Text+",BasicMonthly="+this.BasicMonthly.Text+",Remarks='"+this.Remarks.Text+"',Reason='"+this.Reason.Text+"',ModifiedBy='"+i.a.SessionManager.UserName+"',ModifiedDate=CONVERT(FLOAT,GETDATE())",a.e.IsEmpty(this.AppraisalType.SelectedValue)?t+=",AppraisalType="+this.AppraisalType.SelectedValue:t+=",AppraisalType=0";for(let e=0;e<this.dgvEarnings.Table.length;e++)a.e.IsEmpty(this.dgvEarnings.Table[e].EarSNo)||a.e.IsEmpty(this.dgvEarnings.Table[e].EarValue)||""==this.dgvEarnings.Table[e].EarValue.toString().Trim()||(t+=",Earning"+this.dgvEarnings.Table[e].EarSNo.toString()+"="+this.dgvEarnings.Table[e].EarValue.toString());for(let e=0;e<this.dgvDeductions.Table.length;e++)a.e.IsEmpty(this.dgvDeductions.Table[e].DedSNo)||""==this.dgvDeductions.Table[e].DedSNo.toString()||a.e.IsEmpty(this.dgvDeductions.Table[e].DedValue)||""==this.dgvDeductions.Table[e].DedValue.toString().Trim()||(t+=",Deduction"+this.dgvDeductions.Table[e].DedSNo.toString()+"="+this.dgvDeductions.Table[e].DedValue.toString());return t+=" WHERE SeqNo="+this.EditSeqNo,t.toString()}}},MRsC:function(t,e,s){"use strict";s.d(e,"a",(function(){return r})),s.d(e,"c",(function(){return d})),s.d(e,"d",(function(){return h})),s.d(e,"b",(function(){return u}));var i=s("Do2H"),a=s("Lp6j"),l=s("vTM8"),o=s("uMy8"),n=s("n56n");class r{constructor(){this.ComponentID=0,this.TaxMap=0,this.DrAccount=0,this.CrAccount=0,this.Type=0,this.SNo=0,this.IsEditable=1,this.IsReadOnly=0,this.IsVisible=1,this.Decimals=0,this.ComponentName="",this.Formula="",this.AddToNet="",this.FieldType="",this.Applicable="",this.Behaviour="",this.Expression="",this.CarryForward="",this.IncludeRExclude="",this.Message="",this.Action="",this.CalculateArrears="",this.CalculateAdjustments="",this.MaxOTHrs=0,this.ROff=0,this.Percentage=0,this.MaxLeaves=0,this.AtATime=0,this.MaxCarryForwardDays=0,this.MaxEncashDays=0,this.dOTDailyValue=0,this.dActual="0",this.dEarned="0",this.dArrear="0",this.dAdjusted="0",this.LoanSlNo="",this.LoanDocNo="",this.LoanInvDocDetailsID="",this.LoanApprovedAmt="",this.LoanInstNo="",this.LoanActInstNo="",this.LoanActInstAmt="",this.LoanInstAmt="",this.LoanBalAmt="",this.LoanPayStatus="",this.LoanNodeNo="",this.LeaveTotOPBal="",this.LeaveMonOPBal="",this.ActLeaveTaken="",this.LeaveTaken="",this.LeaveNetBal="",this.ExtraFieldSNo="",this.ExtraFieldDataType="",this.ExtraFieldUserColumnType="",this.ExtraFieldName="",this.ExtraFieldCaption="",this.ExtraFieldValue="",this.sEarDedType="0",this.IsAccrualType=!1,this.isArrCalculated=!1}}class d{constructor(){this.GradeID=1,this.EmpGradeID=1,this.CurrencyID=1,this.DocID=0,this.StatusID=0,this.VacationComponentID=-1,this.EmpSeqNo="",this.EmpCode="",this.EmpName="",this.DocNo="",this.DocStatus="",this.sErrorMessage="",this.totOTHours="0.00",this.sRemarks="",this.sResignType="",this.sEmpWorkingCountry="",this.sArrCalcMonthPaydays="",this.sArrsCalcMonths="",this.DaysAttended=0,this.PaidLeaves=0,this.TotalLeaves=0,this.WeeklyOffs=0,this.Holidays=0,this.LOPDays=0,this.UnpaidDays=0,this.PaidDays=0,this.TotalDays=0,this.MonthDays=0,this.dServiceDays=0,this.dServiceYears=0,this.dblLeavesLOP=0,this.dblTotVacDays=0,this.dblTotMVacDays=0,this.dblTotVacAmount=0,this.dblTotVacEncashDays=0,this.dblTotVacEncashAmount=0,this.dblTotVacExcessDays=0,this.dblTotVacExcessAmount=0,this.dblTotVacNetAmount=0,this.GratuityAmount=0,this.NetSalary=0,this.dPTApplicableAmt=0,this.BasicMonthly=0,this.dblGrossSalary=0,this.totEarnings=0,this.totEarArrears=0,this.totEarAdjustments=0,this.totOTAmount=0,this.totDeductions=0,this.totDedArrears=0,this.totDedAdjustments=0,this.totActEarnings=0,this.totActDeductions=0,this.totLoans=0,this.totOPBalLeaves=0,this.totLeavesTaken=0,this.totNetBalLeaves=0,this.totAccrualsAct=0,this.totAccrualsEar=0,this.totAccrualsArr=0,this.totAccrualsAdj=0,this.dVacDaysUptoLastMonth=0,this.dGosi=0,this.PTIndex=-1,this.WID=0,this.iExtLoansCnt=0,this.DateOfJoining=a.e.GetEmptyDate(),this.DateOfRelieve=a.e.GetEmptyDate(),this.AppraisalMonth=a.e.GetEmptyDate(),this.IsAlreadyProcessed=!1,this.IsAllowOT=!1,this.IsFinalSettlement=!1}}class h{constructor(){this.EmpSeqNo=0,this.AppliedDays=0,this.NotAttendedDays=0,this.Salary=0,this.Encash=0,this.LOP=0,this.Deductions=0,this.Loans=0,this.OpSalary=0,this.NetSalary=0,this.LOPDays=0,this.EncashDays=0,this.ClosingBalance=0,this.PaidDays=0,this.CreditDays=0,this.ExcessDays=0,this.IsEncashDays=!1,this.PayExcessDaysboolean=!1,this.IsEncashVacationboolean=!1,this.IsLeaveboolean=!1,this.ActRejoinDate=""}}class c{constructor(){this.ID=0,this.SNo=0,this.EmpNode=0,this.TypeId=0,this.ComponentID=0,this.EnCash=0,this.ExcessdaysSalary=0,this.SName="",this.TypeName="",this.ComponentName="",this.Formula="",this.Percentage="",this.Amount="",this.ActualAmount="",this.PercActualAmount=""}}class u{constructor(){this.fldDict=new l.a,this.arrLstCPFields=Array(),this.sEmpSeqNo="0",this.dtAsonDate=new Date,this.dAdjDays=0,this.dsAllEmpsData=null,this.oVacAmountField=null,this.iDocID=0,this.lstAccrAccumulateSNos=new Array,this.isValidGWSlabs=!1,this.isValidBulkAppraisal=!1,this.sEmpType="",this.sGender="",this.sMaritalStatus="",this.sNationality="",this.sReligion="",this.oCPField=null,this.lstHolidays=new Array,this.sFilter="",this.dGosi=0,this.dtHolidayDef=null,this.arrLstOthMPFields=new Array,this.arrLstCPFields=Array(7),this.arrLstCPFields[0]=Array(),this.arrLstCPFields[1]=Array(),this.arrLstCPFields[2]=Array(),this.arrLstCPFields[3]=Array(),this.arrLstCPFields[4]=Array(),this.arrLstCPFields[5]=Array(),this.arrLstCPFields[6]=Array(),this.othMPField=new d,this.arrLstOthMPFields.push(this.othMPField)}Intialize(){this.LoadStructure()}LoadStructure(){if(""!=this.sEmpSeqNo&&parseInt(this.sEmpSeqNo)>0){this.LeaveYearStartmonth=new Date(this.PayrollMonthStart.getFullYear(),parseInt(i.a.SessionManager.Preferences.LeaveYear.toString()),1),this.LeaveYearEndmonth=this.LeaveYearStartmonth.AddMonths(12).AddDays(-1),this.dsAllEmpsData=i.a.empService.LoadStructure(this.sEmpSeqNo,this.PayrollMonth.ToString("dd/MMM/yyyy"),this.PayrollMonthStart.ToString("dd/MMM/yyyy"),this.PayrollMonthEnd.ToString("dd/MMM/yyyy"));let t=i.a.empService.LoadStructure_1(this.PayrollMonthEnd.ToString("dd/MMM/yyyy"),this.sFilter);null!=t&&t.Tables.length>0&&(this.dvCCData=t.Tables[0]);let e=i.a.empService.GetQueryData(0,"dvDimsData","","","");if(null!=e&&null!=e&&(this.dvDimsData=e),null!=this.dsAllEmpsData&&this.dsAllEmpsData.Tables.length>0&&this.dsAllEmpsData.Tables[0].length>0){this.dvAllEmpsData=this.dsAllEmpsData.Tables[0],this.dvStructure=this.othMPField.IsFinalSettlement?this.dsAllEmpsData.Tables[37]:this.dsAllEmpsData.Tables[1],this.dvEmpPay=this.dsAllEmpsData.Tables[2],this.dvEmpPay.length>0&&(this.othMPField.BasicMonthly=a.e.StringIsNullOrEmpty(this.dvEmpPay[0].BasicMonthly)?0:parseFloat(this.dvEmpPay[0].BasicMonthly)),this.dvEmpGrades=this.dsAllEmpsData.Tables[12],this.dvEmpGrades=this.dvEmpGrades.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.dvPTDimension=this.dsAllEmpsData.Tables[13],this.dvPTDimension=this.dvPTDimension.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.dvAssLeaves=this.dsAllEmpsData.Tables[8],this.dvAssLeaves=this.dvAssLeaves.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.dvWOffDef=this.dsAllEmpsData.Tables[4];let t,e=i.a.SessionManager.Preferences.WeeklyOffsDefBasedOn.split(","),s=" 1=1 ",l="";if(t=this.dvWOffDef,null!=e&&e.length>0)for(let i=0;i<e.length;i++)null!=e[i]&&""!=e[i]&&(l="CCNID"+(parseInt(e[i])-5e4),this.dvCCData=this.dvCCData.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),null!=this.dvCCData&&this.dvCCData.length>0&&(l.Contains("CCNID51")?(s+=" AND ( "+l+"="+this.dvCCData[0].EmpSeqNo+" OR "+l+"= 1)",t=t.filter(t=>t[l]==this.dvCCData[0].EmpSeqNo||1==t[l])):(s+=" AND ( "+l+"="+this.dvCCData[0][l]+" OR "+l+"= 1)",t=t.filter(t=>t[l]==this.dvCCData[0][l]||1==t[l]))));" 1=1 "!=s&&(this.dvWOffDef=t),this.dvHolidayDef=this.dsAllEmpsData.Tables[5];let o=this.dvHolidayDef;if(e=i.a.SessionManager.Preferences.HolidaysBasedOn.split(","),s=" 1=1 ",l="",null!=e&&e.length>0)for(let i=0;i<e.length;i++)null!=e[i]&&""!=e[i]&&(l="CCNID"+(parseInt(e[i])-5e4),this.dvCCData=this.dvCCData.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),null!=this.dvCCData&&this.dvCCData.length>0&&(l.Contains("CCNID51")?(s+=" AND ( "+l+"="+this.dvCCData[0].EmpSeqNo+" OR "+l+"= 1)",o=o.filter(t=>t[l]==this.dvCCData[0].EmpSeqNo||1==t[l])):(s+=" AND ( "+l+"="+this.dvCCData[0][l]+" OR "+l+"= 1)",o=o.filter(t=>t[l]==this.dvCCData[0][l]||1==t[l]))));if(" 1=1 "!=s&&(this.dvHolidayDef=o),this.dvDependentInfo=this.dsAllEmpsData.Tables[23],this.dvDependentInfo=this.dvDependentInfo.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.dvLatesProc=this.dsAllEmpsData.Tables[31],this.dvLatesProc=this.dvLatesProc.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.dvApprisal=this.dsAllEmpsData.Tables[34],this.dvApprisal=this.dvApprisal.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.dvApprisal.length>0&&(this.AppraisalMonth=new Date(this.dvApprisal[0].CEffectFrom)),this.dvAllApprisal=this.dsAllEmpsData.Tables[35],this.dvAllApprisal=this.dvAllApprisal.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),null!=this.dvAllApprisal&&this.dvAllApprisal.length>0&&(this.dvAllApprisal=this.dvAllApprisal.filter(t=>t.CEffectFrom<=this.PayrollMonthEnd.ToString("dd MMM yyyy")),null!=this.dvAllApprisal&&this.dvAllApprisal.length>1&&(this.dvAllApprisal.sort((t,e)=>e.CEffectFrom-t.CEffectFrom),this.dvStructure=this.dvStructure.filter(t=>1==t.Type&&"Yes"==t.Applicable&&t.GradeID==this.othMPField.GradeID),null!=this.dvStructure&&this.dvStructure.length>0)))for(let r=0;r<this.dvStructure.length;r++)a.e.IsEmpty(i.a.SessionManager.Preferences.GosiComponent)||i.a.SessionManager.Preferences.GosiComponent!=this.dvStructure[r].ComponentID.toString()||(this.dGosi=parseFloat(this.dvAllApprisal[1]["Earning"+parseInt(this.dvStructure[r].SNo)]));let n=0,d=0,h=0;this.lstAccrAccumulateSNos=new Array;let c,u=0,D=0,p=0,g=0,m=0,F=0,S=0;if(this.othMPField.dPTApplicableAmt=this.othMPField.dblGrossSalary=0,"Actual Days"==i.a.SessionManager.Preferences.PayDays){let t=a.e.GetDateDifference(this.PayrollMonthEnd,this.PayrollMonthStart);n=parseInt(t.toString())+1}else n=parseInt(i.a.SessionManager.Preferences.PayDays);if(this.othMPField.MonthDays=n,this.othMPField.DateOfJoining=new Date(this.dvAllEmpsData[0].CDOJ),this.othMPField.DateOfRelieve=null==this.dvAllEmpsData[0].CDORelieve||null==this.dvAllEmpsData[0].CDORelieve?new Date("01-Jan-9000"):new Date(this.dvAllEmpsData[0].CDORelieve),this.othMPField.dServiceDays=a.e.GetDateDifference(this.dtAsonDate,this.othMPField.DateOfJoining)+1,this.othMPField.IsAllowOT=null!=this.dvAllEmpsData[0].IsAllowOT&&null!=this.dvAllEmpsData[0].IsAllowOT&&"No"!=this.dvAllEmpsData[0].IsAllowOT.toString(),this.othMPField.GradeID="True"==i.a.SessionManager.Preferences.GradeWiseMonthlyPayroll.toString()&&null!=this.dvEmpGrades&&this.dvEmpGrades.length>0?parseInt(this.dvEmpGrades[0].GradeID):1,this.dvStructure=this.dvStructure.filter(t=>t.GradeID==this.othMPField.GradeID),c=this.dvStructure,this.dvStructure=this.dvStructure.filter(t=>1==t.Type&&"Yes"==t.Applicable&&"OverTime"!=t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.dvStructure&&this.dvStructure.length>0)for(let M=0;M<this.dvStructure.length;M++)this.oCPField=new r,this.oCPField.SNo=parseInt(this.dvStructure[M].SNo),this.oCPField.ComponentID=parseInt(this.dvStructure[M].ComponentID),this.oCPField.ComponentName=this.dvStructure[M].ComponentName.toString(),this.oCPField.Formula=this.dvStructure[M].Formula.toString(),this.oCPField.AddToNet=this.dvStructure[M].AddToNet.toString(),this.oCPField.FieldType=this.dvStructure[M].FieldType.toString(),this.oCPField.ROff=parseFloat(this.dvStructure[M].ROff),this.oCPField.Behaviour=a.e.IsEmpty(this.dvStructure[M].Behaviour)?"":this.dvStructure[M].Behaviour.toString(),"Accruals"!=this.oCPField.Behaviour&&"Accruals-AccumulateForPreviousYears"!=this.oCPField.Behaviour||(this.oCPField.IsAccrualType=!0,"Accruals-AccumulateForPreviousYears"==this.oCPField.Behaviour&&this.lstAccrAccumulateSNos.push(this.oCPField.SNo)),"EmployeeMaster"==this.oCPField.FieldType?(this.oCPField.dActual=this.dvEmpPay.length>0?parseFloat(this.dvEmpPay[0]["Earning"+this.oCPField.SNo]).ToString(i.a.SessionManager.sPayrollDecimals):i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=this.oCPField.dActual):(this.oCPField.dActual=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals)),this.oCPField.dArrear=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[0].push(this.oCPField);if(this.dvStructure=c,this.dvStructure=this.dvStructure.filter(t=>1==t.Type&&"Yes"==t.Applicable&&"OverTime"==t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.dvStructure&&this.dvStructure.length>0)for(let M=0;M<this.dvStructure.length;M++){if(this.oCPField=new r,this.oCPField.SNo=parseInt(this.dvStructure[M].SNo),this.oCPField.ComponentID=parseInt(this.dvStructure[M].ComponentID),this.oCPField.ComponentName=this.dvStructure[M].ComponentName.toString(),this.oCPField.Formula=this.dvStructure[M].Formula.toString(),this.oCPField.AddToNet=this.dvStructure[M].AddToNet.toString(),this.oCPField.FieldType=this.dvStructure[M].FieldType.toString(),this.oCPField.ROff=parseFloat(this.dvStructure[M].ROff),this.othMPField.IsAllowOT)if("True"==i.a.SessionManager.Preferences.GetDailyAttendanceDataInMonthlyPayroll){let t=a.e.DTComputeSUM(this.dsAllEmpsData.Tables[14].filter(t=>t.EmpSeqNo==+this.sEmpSeqNo),"OT"+(M+1),!0);this.oCPField.dActual=t.ToString(i.a.SessionManager.sPayrollDecimals2)}else this.oCPField.dActual=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals);else this.oCPField.dActual=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals);this.oCPField.dArrear=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[1].push(this.oCPField)}if(this.dvStructure=c,this.dvStructure=this.dvStructure.filter(t=>2==t.Type&&"Yes"==t.Applicable&&"OverTime"!=t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.dvStructure&&this.dvStructure.length>0)for(let a=0;a<this.dvStructure.length;a++)this.oCPField=new r,this.oCPField.SNo=parseInt(this.dvStructure[a].SNo),this.oCPField.ComponentID=parseInt(this.dvStructure[a].ComponentID),this.oCPField.ComponentName=this.dvStructure[a].ComponentName.toString(),this.oCPField.Formula=this.dvStructure[a].Formula.toString(),this.oCPField.AddToNet=this.dvStructure[a].AddToNet.toString(),this.oCPField.FieldType=this.dvStructure[a].FieldType.toString(),this.oCPField.ROff=parseFloat(this.dvStructure[a].ROff),"PT"==this.oCPField.ComponentName&&(this.othMPField.PTIndex=a),"EmployeeMaster"==this.oCPField.FieldType?(this.oCPField.dActual=i.a.SessionManager.Round(this.dvEmpPay.length>0?parseFloat(this.dvEmpPay[0]["Deduction"+this.oCPField.SNo]):0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=this.oCPField.dActual):(this.oCPField.dActual=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals)),this.oCPField.dArrear=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[2].push(this.oCPField);if(this.dvStructure=c,this.dvStructure=this.dvStructure.filter(t=>2==t.Type&&"Yes"==t.Applicable&&"OverTime"==t.FieldType&&t.GradeID==this.othMPField.GradeID),null!=this.dvStructure&&this.dvStructure.length>0)for(let a=0;a<this.dvStructure.length;a++)this.oCPField=new r,this.oCPField.SNo=parseInt(this.dvStructure[a].SNo),this.oCPField.ComponentID=parseInt(this.dvStructure[a].ComponentID),this.oCPField.ComponentName=this.dvStructure[a].ComponentName.toString(),this.oCPField.Formula=this.dvStructure[a].Formula.toString(),this.oCPField.AddToNet=this.dvStructure[a].AddToNet.toString(),this.oCPField.FieldType=this.dvStructure[a].FieldType.toString(),this.oCPField.ROff=parseFloat(this.dvStructure[a].ROff),this.oCPField.dActual=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dArrear=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[3].push(this.oCPField);this.othMPField.iExtLoansCnt=0;let y,P=0,f=0,C=0;if(this.dvStructure=c,this.dvStructure=this.dvStructure.filter(t=>3==t.Type&&t.GradeID==this.othMPField.GradeID),null!=this.dvStructure&&null!=this.dvStructure&&this.dvStructure.length>0){let t=0;for(let e=0;e<this.dvStructure.length;e++){if(this.oCPField=new r,this.oCPField.SNo=parseInt(this.dvStructure[e].SNo),this.oCPField.ComponentID=parseInt(this.dvStructure[e].ComponentID),this.oCPField.ComponentName=this.dvStructure[e].ComponentName.toString(),this.oCPField.Formula=this.dvStructure[e].Formula,this.oCPField.AddToNet=this.dvStructure[e].AddToNet,this.oCPField.FieldType=this.dvStructure[e].FieldType,this.oCPField.ROff=null==this.dvStructure[e].ROff||null==this.dvStructure[e].ROff||""==this.dvStructure[e].ROff.toString()?0:parseFloat(this.dvStructure[e].ROff),this.oCPField.IsEditable=0,this.oCPField.IsReadOnly=1,this.oCPField.IsVisible=1,y=this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.InstBalance>0&&t.DeductionMonth<=this.PayrollMonth.ToString("dd/MMM/yyyy")),null!=y&&null!=y&&y.length>0){t++,f=C=0,this.oCPField.LoanSlNo=t.toString(),this.oCPField.LoanDocNo=y[0].DocNo.toString(),this.oCPField.LoanInvDocDetailsID=y[0].InvDocDetailsID.toString(),this.oCPField.LoanApprovedAmt=y[0].ApprovedAmt.toString();let e="";1==y.length?(this.oCPField.LoanInstNo=y[0].InstallmentNo.toString()+"/"+y[0].NoOfInstallments.toString(),this.oCPField.LoanActInstNo=y[0].InstallmentNo.toString(),e=y[0].InstallmentNo.toString()):(this.oCPField.LoanInstNo=y[y.length-1].InstallmentNo.toString()+"/"+y[0].NoOfInstallments.toString(),this.oCPField.LoanActInstNo=y[y.length-1].InstallmentNo.toString(),e=y[y.length-1].InstallmentNo.toString());let s=this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.InstallmentNo<=e).Compute("sum","Paid");null!=s&&null!=s&&(f=parseFloat(s)),P=parseFloat(this.oCPField.LoanApprovedAmt)-f,s=this.dsAllEmpsData.Tables[10].filter(t=>t.EmpSeqNo==this.sEmpSeqNo&&t.LoanCompID==this.oCPField.ComponentID&&t.InstallmentNo<=e).Compute("sum","InstBalance"),null!=s&&null!=s&&(C=parseFloat(s)),this.oCPField.LoanActInstAmt=C.toString(),this.oCPField.LoanInstAmt=C.ToString(i.a.SessionManager.sPayrollDecimals),this.oCPField.LoanBalAmt=P.ToString(i.a.SessionManager.sPayrollDecimals),this.oCPField.LoanPayStatus="0",this.oCPField.dActual=parseFloat(this.oCPField.LoanActInstAmt).ToString(i.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=parseFloat(this.oCPField.LoanInstAmt).ToString(i.a.SessionManager.sPayrollDecimals),this.othMPField.iExtLoansCnt++}else this.oCPField.IsVisible=0,this.oCPField.dActual=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals);this.oCPField.dArrear=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oCPField.dAdjusted=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[4].push(this.oCPField)}}if(this.dvStructure=c,this.dvStructure=this.dvStructure.filter(t=>4==t.Type&&t.GradeID==+this.othMPField.GradeID),null!=this.dvStructure&&this.dvStructure.length>0){let t=0,e=0,s=0,a=0;for(let l=0;l<this.dvStructure.length;l++){this.oCPField=new r,this.oCPField.SNo=parseInt(this.dvStructure[l].SNo),this.oCPField.ComponentID=parseInt(this.dvStructure[l].ComponentID),this.oCPField.ComponentName=this.dvStructure[l].ComponentName.toString(),this.oCPField.Formula=this.dvStructure[l].Formula,this.oCPField.AddToNet=this.dvStructure[l].AddToNet,this.oCPField.FieldType=this.dvStructure[l].FieldType,this.oCPField.ROff=null==this.dvStructure[l].ROff||null==this.dvStructure[l].ROff||""==this.dvStructure[l].ROff.toString()?0:parseFloat(this.dvStructure[l].ROff),this.oCPField.Percentage=parseFloat(this.dvStructure[l].Percentage),this.dvAssLeaves.RowFilter="EmpSeqNo="+this.sEmpSeqNo+" AND LeaveType='"+this.oCPField.ComponentName+"'",this.dvAssLeaves.length>0&&(t=parseFloat(this.dvAssLeaves[0].Total));let o={dTaken:s,dAvail:a};new Date(this.PayrollMonthStart)<=new Date(this.LeaveYearEndmonth)&&new Date(this.PayrollMonthStart)!=new Date(this.LeaveYearStartmonth)&&(this.GetLeavesTaken(this.LeaveYearStartmonth.ToString("dd/MMM/yyyy"),this.PayrollMonthStart.AddDays(-1).ToString("dd/MMM/yyyy"),this.oCPField.ComponentID.toString(),o),s=o.dTaken,a=o.dAvail),o={dTaken:e,dAvail:a},this.GetLeavesTaken(this.PayrollMonthStart.ToString("dd/MMM/yyyy"),this.PayrollMonthEnd.ToString("dd/MMM/yyyy"),this.oCPField.ComponentID.toString(),o),e=o.dTaken,a=o.dAvail,-1!=this.oCPField.MaxLeaves?(this.oCPField.LeaveTotOPBal=(t-s).ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveMonOPBal=a.ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveTaken=e.ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveNetBal=(t-s-e).ToString(i.a.SessionManager.sPayrollDecimals2)):(this.oCPField.LeaveTotOPBal=(0).ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveMonOPBal=(0).ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveTaken=e.ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.LeaveNetBal=(0).ToString(i.a.SessionManager.sPayrollDecimals2)),m+=parseFloat(this.oCPField.LeaveTaken),this.oCPField.dActual=(0).ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.dEarned=(0).ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.dArrear=(0).ToString(i.a.SessionManager.sPayrollDecimals2),this.oCPField.dAdjusted=(0).ToString(i.a.SessionManager.sPayrollDecimals2),parseFloat(this.oCPField.LeaveTaken)>0&&this.oCPField.Percentage>0&&(F+=parseFloat(this.oCPField.LeaveTaken)*this.oCPField.Percentage/100),this.arrLstCPFields[5].push(this.oCPField)}}if(this.lstHolidays.Clear(),null!=this.dtHolidayDef&&this.dtHolidayDef.length>0)for(let i=0;i<this.dtHolidayDef.length;i++)this.lstHolidays.push(new Date(this.dtHolidayDef[i].HolidayDate));p+=this.GetUnpaidDays();let T=this.othMPField.DateOfJoining>this.PayrollMonthStart?this.othMPField.DateOfJoining:this.PayrollMonthStart,E=this.othMPField.DateOfRelieve<this.PayrollMonthEnd?this.othMPField.DateOfRelieve:this.PayrollMonthEnd;if(d=-1,h=-1,this.dvWOffDef.length>0)u=this.CalculateWeeklyOffsFromDef();else{let t="",e="";switch(t="NONE"!=this.dvAllEmpsData[0].WeeklyOff1.toString().toUpperCase()?this.dvAllEmpsData[0].WeeklyOff1.toString():i.a.SessionManager.Preferences.WeeklyOff1.toString(),"NONE"!=this.dvAllEmpsData[0].WeeklyOff2.toString().toUpperCase()?this.dvAllEmpsData[0].WeeklyOff2.toString().toUpperCase()!=t.toUpperCase()&&(e=this.dvAllEmpsData[0].WeeklyOff2.toString()):e=i.a.SessionManager.Preferences.WeeklyOff2.toString(),t){case"Sunday":d=0;break;case"Monday":d=1;break;case"Tuesday":d=2;break;case"Wednesday":d=3;break;case"Thursday":d=4;break;case"Friday":d=5;break;case"Saturday":d=6}switch(e){case"Sunday":h=0;break;case"Monday":h=1;break;case"Tuesday":h=2;break;case"Wednesday":h=3;break;case"Thursday":h=4;break;case"Friday":h=5;break;case"Saturday":h=6}if(-1!=d){let t=T;for(parseInt(t.getDay().toString())<d?t=t.AddDays(d-parseInt(t.getDay().toString())):parseInt(t.getDay().toString())>d&&(t=t.AddDays(7-(parseInt(t.getDay().toString())-d)));t<=E;)this.lstHolidays.Contains(t)||u++,t=t.AddDays(7)}if(-1!=h&&d!=h){let t=T;for(parseInt(t.getDay().toString())<h?t=t.AddDays(h-parseInt(t.getDay().toString())):parseInt(t.getDay().toString())>h&&(t=t.AddDays(7-(parseInt(t.getDay().toString())-h)));t<=E;)this.lstHolidays.Contains(t)||u++,t=t.AddDays(7)}}for(let i=0;i<this.lstHolidays.length;i++)this.lstHolidays[i]>=this.othMPField.DateOfJoining&&this.lstHolidays[i]<=this.othMPField.DateOfRelieve&&D++;S=u+D,g=n-(S+m+p),this.othMPField.DaysAttended=S,this.othMPField.TotalLeaves=m,this.othMPField.PaidLeaves=F,this.othMPField.WeeklyOffs=u,this.othMPField.Holidays=D,this.othMPField.LOPDays=g,this.othMPField.UnpaidDays=p,this.othMPField.TotalDays=S+m+g+p,this.othMPField.PaidDays=S+F}}}ExecuteAllFormulas(){try{if(Logger.InfoLog("CommonMonthlyPayroll::Entering ExecuteAllFormulas()"),this.othMPField.dblGrossSalary=0,this.ExecuteFormulas(!0),this.ExecuteFormulas(!1),this.ExecuteFormulas(!1),this.ExecuteFormulas(!0),this.ExecuteFormulas(!1),this.ExecuteFormulas(!1),this.othMPField.dblGrossSalary=this.othMPField.totEarnings,this.othMPField.PTIndex>=0){let t=this.dsAllEmpsData.Tables[3];if(this.dvPTDimension.length>0){let e=this.dsAllEmpsData.Tables[3];if(e=e.filter(t=>t.NodeID==a.e.String(this.dvPTDimension[0].PTDimension)&&""!=t.Formula),null!=e&&e.length>0&&!a.e.IsEmpty(e[0].Formula)){let t=this.fldDict,s=parseFloat(i.a.eval.EvaluateExpression(e[0].Formula.toString(),t));this.arrLstCPFields[2][this.othMPField.PTIndex].dEarned=s.ToString(i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[2][this.othMPField.PTIndex].dActual=s.ToString(i.a.SessionManager.sPayrollDecimals)}else t=t.filter(t=>t.NodeID==a.e.String(this.dvPTDimension[0].PTDimension)&&t.FromSlab<=this.othMPField.dPTApplicableAmt&&t.ToSlab>=this.othMPField.dPTApplicableAmt),t.length>0?(this.arrLstCPFields[2][this.othMPField.PTIndex].dEarned=parseFloat(t[0].Amount).ToString(i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[2][this.othMPField.PTIndex].dActual=parseFloat(t[0].Amount).ToString(i.a.SessionManager.sPayrollDecimals)):(this.arrLstCPFields[2][this.othMPField.PTIndex].dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.arrLstCPFields[2][this.othMPField.PTIndex].dActual=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals))}}this.othMPField.totEarnings=this.othMPField.totDeductions=this.othMPField.totActEarnings=0,this.othMPField.totActDeductions=this.othMPField.totLoans=this.othMPField.totOPBalLeaves=0,this.othMPField.totLeavesTaken=this.othMPField.totNetBalLeaves=0,this.othMPField.totEarArrears=this.othMPField.totDedArrears=0,this.othMPField.totEarAdjustments=this.othMPField.totDedAdjustments=0,this.othMPField.totOTAmount=0;for(let i=0;i<this.arrLstCPFields[0].length;i++)""!=this.arrLstCPFields[0][i].SNo.toString()&&(null==this.arrLstCPFields[0][i].AddToNet||""==this.arrLstCPFields[0][i].AddToNet||"Net"!=this.arrLstCPFields[0][i].AddToNet&&"NetAndTax"!=this.arrLstCPFields[0][i].AddToNet||(this.othMPField.totActEarnings+=parseFloat(this.arrLstCPFields[0][i].dActual),this.othMPField.totEarnings+=parseFloat(this.arrLstCPFields[0][i].dEarned),this.othMPField.totEarArrears+=parseFloat(this.arrLstCPFields[0][i].dArrear),this.othMPField.totEarAdjustments+=parseFloat(this.arrLstCPFields[0][i].dAdjusted)));let t,e=new Date(1,1,1,0,0,0);for(let i=0;i<this.arrLstCPFields[1].length;i++)""!=this.arrLstCPFields[1][i].SNo.toString()&&(null==this.arrLstCPFields[1][i].AddToNet||""==this.arrLstCPFields[1][i].AddToNet||"Net"!=this.arrLstCPFields[1][i].AddToNet&&"NetAndTax"!=this.arrLstCPFields[1][i].AddToNet||(t=this.arrLstCPFields[1][i].dActual.toString().split("."),e=e.AddHours(parseFloat(t[0])),t.length>1&&(1==t[1].length&&(t[1]=t[1]+"0"),e=e.AddMinutes(parseFloat(t[1]))),this.othMPField.totOTAmount+=parseFloat(this.arrLstCPFields[1][i].dEarned)));let s=e.getMinutes().toString();1==s.length&&(s="0"+s),this.othMPField.totOTHours=e.getHours()+"."+s;for(let i=0;i<this.arrLstCPFields[2].length;i++)""!=this.arrLstCPFields[2][i].SNo.toString()&&(null==this.arrLstCPFields[2][i].AddToNet||""==this.arrLstCPFields[2][i].AddToNet||"Net"!=this.arrLstCPFields[2][i].AddToNet&&"NetAndTax"!=this.arrLstCPFields[2][i].AddToNet||(this.othMPField.totActDeductions+=parseFloat(this.arrLstCPFields[2][i].dActual),this.othMPField.totDeductions+=parseFloat(this.arrLstCPFields[2][i].dEarned),this.othMPField.totDedArrears+=parseFloat(this.arrLstCPFields[2][i].dArrear),this.othMPField.totDedAdjustments+=parseFloat(this.arrLstCPFields[2][i].dAdjusted)));for(let i=0;i<this.arrLstCPFields[4].length;i++)""!=this.arrLstCPFields[4][i].SNo.toString()&&1==this.arrLstCPFields[4][i].IsVisible&&null!=this.arrLstCPFields[4][i].LoanInstAmt&&""!=this.arrLstCPFields[4][i].LoanInstAmt.toString()&&parseFloat(this.arrLstCPFields[4][i].LoanInstAmt)>0&&(this.othMPField.totLoans+=parseFloat(this.arrLstCPFields[4][i].LoanInstAmt));for(let i=0;i<this.arrLstCPFields[5].length;i++)""!=this.arrLstCPFields[5][i].SNo.toString()&&(null!=this.arrLstCPFields[5][i].LeaveTotOPBal&&""!=this.arrLstCPFields[5][i].LeaveTotOPBal.toString()&&(this.othMPField.totOPBalLeaves+=parseFloat(this.arrLstCPFields[5][i].LeaveTotOPBal)),null!=this.arrLstCPFields[5][i].LeaveTaken&&""!=this.arrLstCPFields[5][i].LeaveTaken.toString()&&(this.othMPField.totLeavesTaken+=parseFloat(this.arrLstCPFields[5][i].LeaveTaken)),null!=this.arrLstCPFields[5][i].LeaveNetBal&&""!=this.arrLstCPFields[5][i].LeaveNetBal.toString()&&(this.othMPField.totNetBalLeaves+=parseFloat(this.arrLstCPFields[5][i].LeaveNetBal)));this.othMPField.NetSalary=parseFloat(a.e.GetAmountsBasedOnPref(this.othMPField.totEarnings+this.othMPField.totEarArrears+this.othMPField.totEarAdjustments+this.othMPField.totOTAmount-(this.othMPField.totDeductions+this.othMPField.totDedArrears+this.othMPField.totDedAdjustments+this.othMPField.totLoans),i.a.SessionManager.sPayrollDecimals.replace("N",""))),Logger.InfoLog("CommonMonthlyPayroll::Exiting ExecuteAllFormulas()")}catch(t){Logger.ErrorLog("CommonMonthlyPayroll::EXCEPTION ExecuteAllFormulas()"+t.stack)}}ExecuteFormulas(t){try{Logger.InfoLog("CommonMonthlyPayroll::Entering ExecuteFormulas()"),this.fldDict=new l.a;let e,s="0";this.othMPField.totEarnings=this.othMPField.totDeductions=this.othMPField.totActEarnings=0,this.othMPField.totActDeductions=this.othMPField.totLoans=this.othMPField.totOPBalLeaves=0,this.othMPField.totLeavesTaken=this.othMPField.totNetBalLeaves=0,this.othMPField.totEarArrears=this.othMPField.totDedArrears=0,this.othMPField.totEarAdjustments=this.othMPField.totDedAdjustments=0,this.othMPField.totOTAmount=0,e=new o.c("Basic",""),this.fldDict.push("Basic",e),this.fldDict.Basic.setFieldValue(this.othMPField.BasicMonthly),e=new o.c("Gross",""),this.fldDict.push("Gross",e),this.fldDict.Gross.setFieldValue(this.othMPField.dblGrossSalary),e=new o.c("ServiceDays",""),this.fldDict.push("ServiceDays",e),this.fldDict.ServiceDays.setFieldValue(this.othMPField.dServiceDays),e=new o.c("ServiceYears",""),this.fldDict.push("ServiceYears",e),this.fldDict.ServiceYears.setFieldValue(this.othMPField.dServiceYears),e=new o.c("ResignType",""),this.fldDict.push("ResignType",e),this.fldDict.ResignType.setFieldValue(this.othMPField.sResignType),e=new o.c("GratuityAmount",""),this.fldDict.push("GratuityAmount",e),this.fldDict.GratuityAmount.setFieldValue(this.othMPField.GratuityAmount),e=new o.c("WeeklyOffs",""),this.fldDict.push("WeeklyOffs",e),this.fldDict.WeeklyOffs.setFieldValue(this.othMPField.WeeklyOffs),e=new o.c("LeavesTaken",""),this.fldDict.push("LeavesTaken",e),this.fldDict.LeavesTaken.setFieldValue(this.othMPField.TotalLeaves),e=new o.c("VacDaysTaken",""),this.fldDict.push("VacDaysTaken",e),this.fldDict.VacDaysTaken.setFieldValue(this.othMPField.dblTotVacDays),e=new o.c("VacDays",""),this.fldDict.push("VacDays",e),this.fldDict.VacDays.setFieldValue(this.othMPField.dblTotMVacDays),e=new o.c("VacAmount",""),this.fldDict.push("VacAmount",e),this.fldDict.VacAmount.setFieldValue(this.othMPField.dblTotVacAmount),e=new o.c("VacEncashDays",""),this.fldDict.push("VacEncashDays",e),this.fldDict.VacEncashDays.setFieldValue(this.othMPField.dblTotVacEncashDays),e=new o.c("VacEncashAmount",""),this.fldDict.push("VacEncashAmount",e),this.fldDict.VacEncashAmount.setFieldValue(this.othMPField.dblTotVacEncashAmount),e=new o.c("VacExcessDays",""),this.fldDict.push("VacExcessDays",e),this.fldDict.VacExcessDays.setFieldValue(this.othMPField.dblTotVacExcessDays),e=new o.c("VacExcessAmount",""),this.fldDict.push("VacExcessAmount",e),this.fldDict.VacExcessAmount.setFieldValue(this.othMPField.dblTotVacExcessAmount),e=new o.c("VacNetAmount",""),this.fldDict.push("VacNetAmount",e),this.fldDict.VacNetAmount.setFieldValue(this.othMPField.dblTotVacNetAmount),e=new o.c("TotalDays",""),this.fldDict.push("TotalDays",e),this.fldDict.TotalDays.setFieldValue(this.othMPField.TotalDays),e=new o.c("DaysAttended",""),this.fldDict.push("DaysAttended",e),this.fldDict.DaysAttended.setFieldValue(t?this.othMPField.TotalDays:this.othMPField.DaysAttended+this.othMPField.TotalLeaves),e=new o.c("UnpaidDays",""),this.fldDict.push("UnpaidDays",e),this.fldDict.UnpaidDays.setFieldValue(this.othMPField.UnpaidDays),e=new o.c("LOPDays",""),this.fldDict.push("LOPDays",e),this.fldDict.LOPDays.setFieldValue(this.othMPField.LOPDays),e=new o.c("Holidays",""),this.fldDict.push("Holidays",e),this.fldDict.Holidays.setFieldValue(this.othMPField.Holidays),e=new o.c("AdjDays",""),this.fldDict.push("AdjDays",e),this.fldDict.AdjDays.setFieldValue(this.dAdjDays),e=new o.c("EmpType",""),this.fldDict.push("EmpType",e),this.fldDict.EmpType.setFieldValue(this.dvAllEmpsData[0].sEmpType.toString()),e=new o.c("Gender",""),this.fldDict.push("Gender",e),this.fldDict.Gender.setFieldValue(this.dvAllEmpsData[0].sGender.toString()),e=new o.c("MaritalStatus",""),this.fldDict.push("MaritalStatus",e),this.fldDict.MaritalStatus.setFieldValue(this.dvAllEmpsData[0].sMaritalStatus.toString()),e=new o.c("Nationality",""),this.fldDict.push("Nationality",e),this.fldDict.Nationality.setFieldValue(this.dvAllEmpsData[0].sNationality.toString()),e=new o.c("Religion",""),this.fldDict.push("Religion",e),this.fldDict.Religion.setFieldValue(this.dvAllEmpsData[0].sReligion.toString()),this.isValidGWSlabs&&(this.fldDict.EmpType.setFieldValue(this.sEmpType),this.fldDict.Gender.setFieldValue(this.sGender),this.fldDict.MaritalStatus.setFieldValue(this.sMaritalStatus),this.fldDict.Nationality.setFieldValue(this.sNationality),this.fldDict.Religion.setFieldValue(this.sReligion)),e=new o.c("ChildrenCount",""),this.fldDict.push("ChildrenCount",e),null!=this.dvDependentInfo?(this.dvDependentInfo.RowFilter="EmpSeqNo="+this.sEmpSeqNo+" AND Relation='Children'",this.fldDict.ChildrenCount.setFieldValue(this.dvDependentInfo.length)):this.fldDict.ChildrenCount.setFieldValue(0),e=new o.c("ChildrenDays",""),this.fldDict.push("ChildrenDays",e);let r=0;if(null!=this.dvDependentInfo&&null!=this.dvDependentInfo&&(this.dvDependentInfo=this.dvDependentInfo.filter(t=>t.EmpSeqNo=this.sEmpSeqNo&&"Children"==t.Relation)),null!=this.dvDependentInfo&&this.dvDependentInfo.length>0){let t=this.dvDependentInfo;for(let e=0;e<t.length;e++)if(new Date(t.Rows[e].ChildDOB)>=this.PayrollMonthStart&&new Date(t.Rows[e].ChildDOB)<=this.PayrollMonthEnd)r+=a.e.GetDateDifference(this.PayrollMonthEnd,new Date(t.Rows[e].ChildDOB))+1;else{let s=0,i=0,l=0,o={iY:s,iM:i,iD:l};a.e.GetYearsMonthsDays(new Date(t.Rows[e].ChildDOB),this.PayrollMonthEnd,o),s=o.iY,i=o.iM,l=o.iD,18==s&&0==i?r+=a.e.GetDateDifference(this.PayrollMonthEnd,this.PayrollMonthStart)+1-l:s<18&&(r+=a.e.GetDateDifference(this.PayrollMonthEnd,this.PayrollMonthStart)+1)}}this.fldDict.ChildrenDays.setFieldValue(r),e=new o.c("PayrollMonthNo",""),this.fldDict.push("PayrollMonthNo",e),this.fldDict.PayrollMonthNo.setFieldValue(this.PayrollMonth.iMonth()),e=new o.c("PayrollYearNo",""),this.fldDict.push("PayrollYearNo",e),this.fldDict.PayrollYearNo.setFieldValue(this.PayrollMonth.getFullYear()),e=new o.c("DOJMonth",""),this.fldDict.push("DOJMonth",e),this.fldDict.DOJMonth.setFieldValue(new Date(this.dvAllEmpsData[0].CDOJ).iMonth()),e=new o.c("DOJYear",""),this.fldDict.push("DOJYear",e),this.fldDict.DOJYear.setFieldValue(new Date(this.dvAllEmpsData[0].CDOJ).getFullYear()),e=new o.c("DORMonth",""),this.fldDict.push("DORMonth",e),a.e.IsEmpty(this.dvAllEmpsData[0].CDORelieve)?this.fldDict.DORMonth.setFieldValue(1):this.fldDict.DORMonth.setFieldValue(new Date(this.dvAllEmpsData[0].CDORelieve).iMonth()),e=new o.c("DORYear",""),this.fldDict.push("DORYear",e),a.e.IsEmpty(this.dvAllEmpsData[0].CDORelieve)?this.fldDict.DORYear.setFieldValue(2200):this.fldDict.DORYear.setFieldValue(new Date(this.dvAllEmpsData[0].CDORelieve).getFullYear()),e=new o.c("EmpConfirmationDate",""),this.fldDict.Add("EmpConfirmationDate",e);let d=new Date;a.e.isValidDate(this.dvAllEmpsData[0].CDOC)&&(d=new Date(this.dvAllEmpsData[0].CDOC)),this.fldDict.EmpConfirmationDate.setFieldValue(d),e=new o.c("LeaveFromDate",""),this.fldDict.Add("LeaveFromDate",e),this.fldDict.LeaveFromDate.setFieldValue(new Date),e=new o.c("LeaveNoOfDays",""),this.fldDict.Add("LeaveNoOfDays",e),this.fldDict.LeaveNoOfDays.setFieldValue(0),e=new o.c("EmpVacationDays",""),this.fldDict.Add("EmpVacationDays",e),this.fldDict.EmpVacationDays.setFieldValue(this.dvAllEmpsData[0].VacDaysPerMonth),e=new o.c("AppraisalMonthNo",""),this.fldDict.push("AppraisalMonthNo",e),this.fldDict.AppraisalMonthNo.setFieldValue(this.dvApprisal.length>0?this.AppraisalMonth.iMonth():0),this.isValidBulkAppraisal&&this.fldDict.AppraisalMonthNo.setFieldValue(this.EffectFrom.iMonth()),e=new o.c("VacDaysPayYes",""),this.fldDict.push("VacDaysPayYes",e),this.fldDict.VacDaysPayYes.setFieldValue(0),e=new o.c("VacDaysPayNo",""),this.fldDict.push("VacDaysPayNo",e),this.fldDict.VacDaysPayNo.setFieldValue(0),e=new o.c("PreviousGosiValue",""),this.fldDict.push("PreviousGosiValue",e),this.fldDict.PreviousGosiValue.setFieldValue(this.dGosi);let h=0,c=0,u=0,D=0,p=0,g=0,m=0,F=0,S=0,y=0,P=0;null!=this.dvLatesProc&&(this.dvLatesProc=this.dvLatesProc.filter(t=>t.EmpSeqNo==this.sEmpSeqNo),this.dvLatesProc.length>0&&(h=parseFloat(this.dvLatesProc[0].TotCheckInLateMins),c=parseFloat(this.dvLatesProc[0].TotCheckOutEarlyMins),u=parseFloat(this.dvLatesProc[0].TotBreak1MoreMins),D=parseFloat(this.dvLatesProc[0].TotBreak2MoreMins),p=parseFloat(this.dvLatesProc[0].TotBreak3MoreMins),g=parseFloat(this.dvLatesProc[0].TotBreak4MoreMins),m=parseFloat(this.dvLatesProc[0].TotBreak5MoreMins),F=parseFloat(this.dvLatesProc[0].TotLateHrsToDeduct),S=parseFloat(this.dvLatesProc[0].TotLateLeavesToDeduct),y=parseFloat(this.dvLatesProc[0].TotWorkingMinsLessBy),P=parseFloat(this.dvLatesProc[0].TotAbsentMinsLessBy))),e=new o.c("TotCheckInLateMins",""),this.fldDict.push("TotCheckInLateMins",e),this.fldDict.TotCheckInLateMins.setFieldValue(h),e=new o.c("TotCheckOutEarlyMins",""),this.fldDict.push("TotCheckOutEarlyMins",e),this.fldDict.TotCheckOutEarlyMins.setFieldValue(c),e=new o.c("TotBreak1MoreMins",""),this.fldDict.push("TotBreak1MoreMins",e),this.fldDict.TotBreak1MoreMins.setFieldValue(u),e=new o.c("TotBreak2MoreMins",""),this.fldDict.push("TotBreak2MoreMins",e),this.fldDict.TotBreak2MoreMins.setFieldValue(D),e=new o.c("TotBreak3MoreMins",""),this.fldDict.push("TotBreak3MoreMins",e),this.fldDict.TotBreak3MoreMins.setFieldValue(p),e=new o.c("TotBreak4MoreMins",""),this.fldDict.push("TotBreak4MoreMins",e),this.fldDict.TotBreak4MoreMins.setFieldValue(g),e=new o.c("TotBreak5MoreMins",""),this.fldDict.push("TotBreak5MoreMins",e),this.fldDict.TotBreak5MoreMins.setFieldValue(m),e=new o.c("TotLateHrsToDeduct",""),this.fldDict.push("TotLateHrsToDeduct",e),this.fldDict.TotLateHrsToDeduct.setFieldValue(F),e=new o.c("TotLateLeavesToDeduct",""),this.fldDict.push("TotLateLeavesToDeduct",e),this.fldDict.TotLateLeavesToDeduct.setFieldValue(S),e=new o.c("TotWorkingMinsLessBy",""),this.fldDict.push("TotWorkingMinsLessBy",e),this.fldDict.TotWorkingMinsLessBy.setFieldValue(y),e=new o.c("TotAbsentMinsLessBy",""),this.fldDict.push("TotAbsentMinsLessBy",e),this.fldDict.TotAbsentMinsLessBy.setFieldValue(P),this.dvCCData=this.dvCCData.filter(t=>t.EmpSeqNo==this.sEmpSeqNo);let f="",C="";if(e=new o.c("RptManagerCode",""),this.fldDict.push("RptManagerCode",e),e=new o.c("RptManagerName",""),this.fldDict.push("RptManagerName",e),this.dvCCData.length>0&&!a.e.IsEmpty(this.dvCCData[0].RptManager)){let t=this.dvDimsData.filter(t=>"RptManager"==t.SysColName&&t.NodeID==this.dvCCData[0].RptManager.toString());t.length>0&&(f=t[0].Code.toString(),C=t[0].Name.toString())}if(this.fldDict.RptManagerCode.setFieldValue(f),this.fldDict.RptManagerName.setFieldValue(C),this.dvCCData.length>0)for(let t=0;t<Object.keys(this.dvCCData[0]).length;t++){const s=Object.keys(this.dvCCData[0])[t];if(!s.Contains("CCNID"))continue;let i=this.dvDimsData.filter(t=>t.SysColName==s);if(i.length>0){let t=i[0].UserColumnName.toString();if(e=new o.c(i[0].UserColumnName.toString()+"Code",""),this.fldDict.push(i[0].UserColumnName.toString()+"Code",e),e=new o.c(i[0].UserColumnName.toString()+"Name",""),this.fldDict.push(i[0].UserColumnName.toString()+"Name",e),i=this.dvDimsData.filter(t=>t.SysColName==s&&t.NodeID==this.dvCCData[0][s].toString()),i.length>0?(this.fldDict[i[0].UserColumnName.toString()+"Code"].setFieldValue(i[0].Code.toString()),this.fldDict[i[0].UserColumnName.toString()+"Name"].setFieldValue(i[0].Name.toString())):(this.fldDict[t+"Code"].setFieldValue(""),this.fldDict[t+"Name"].setFieldValue("")),this.isValidGWSlabs){let e=this.Parent.ScreenObject.GetCustomField(s);if(null!=e&&null!=e){let a="";(e instanceof n.b||e instanceof n.a)&&(a=e.SelectedValue.toString()),"0"==a&&(a="1"),i=this.dvDimsData.filter(t=>t.SysColName==s&&t.NodeID==a),i.length>0?(this.fldDict[i[0].UserColumnName.toString()+"Code"].setFieldValue(i[0].Code.toString()),this.fldDict[i[0].UserColumnName.toString()+"Name"].setFieldValue(i[0].Name.toString())):(this.fldDict[t+"Code"].setFieldValue(""),this.fldDict[t+"Name"].setFieldValue(""))}}}}for(let t=0;t<this.arrLstCPFields[0].length;t++)a.e.IsEmpty(this.arrLstCPFields[0][t].SNo)||(e=new o.c(this.arrLstCPFields[0][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[0][t].ComponentName,e),this.fldDict[this.arrLstCPFields[0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[0][t].dActual).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Calc"+this.arrLstCPFields[0][t].ComponentName,""),this.fldDict.push("Calc"+this.arrLstCPFields[0][t].ComponentName,e),this.fldDict["Calc"+this.arrLstCPFields[0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[0][t].dEarned).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Arr_"+this.arrLstCPFields[0][t].ComponentName,""),this.fldDict.push("Arr_"+this.arrLstCPFields[0][t].ComponentName,e),this.fldDict["Arr_"+this.arrLstCPFields[0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[0][t].dArrear).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Adj_"+this.arrLstCPFields[0][t].ComponentName,""),this.fldDict.push("Adj_"+this.arrLstCPFields[0][t].ComponentName,e),this.fldDict["Adj_"+this.arrLstCPFields[0][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[0][t].dAdjusted).ToString(i.a.SessionManager.sPayrollDecimals)));for(let t=0;t<this.arrLstCPFields[1].length;t++)a.e.IsEmpty(this.arrLstCPFields[1][t].SNo)||(e=new o.c(this.arrLstCPFields[1][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[1][t].ComponentName,e),this.fldDict[this.arrLstCPFields[1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[1][t].dActual).ToString(i.a.SessionManager.sPayrollDecimals2)),e=new o.c("Calc"+this.arrLstCPFields[1][t].ComponentName,""),this.fldDict.push("Calc"+this.arrLstCPFields[1][t].ComponentName,e),this.fldDict["Calc"+this.arrLstCPFields[1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[1][t].dEarned).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Arr_"+this.arrLstCPFields[1][t].ComponentName,""),this.fldDict.push("Arr_"+this.arrLstCPFields[1][t].ComponentName,e),this.fldDict["Arr_"+this.arrLstCPFields[1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[1][t].dArrear).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Adj_"+this.arrLstCPFields[1][t].ComponentName,""),this.fldDict.push("Adj_"+this.arrLstCPFields[1][t].ComponentName,e),this.fldDict["Adj_"+this.arrLstCPFields[1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[1][t].dAdjusted).ToString(i.a.SessionManager.sPayrollDecimals)));for(let t=0;t<this.arrLstCPFields[2].length;t++)""!=this.arrLstCPFields[2][t].SNo.toString()&&(e=new o.c(this.arrLstCPFields[2][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[2][t].ComponentName,e),this.fldDict[this.arrLstCPFields[2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[2][t].dActual).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Calc"+this.arrLstCPFields[2][t].ComponentName,""),this.fldDict.push("Calc"+this.arrLstCPFields[2][t].ComponentName,e),this.fldDict["Calc"+this.arrLstCPFields[2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[2][t].dEarned).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Arr_"+this.arrLstCPFields[2][t].ComponentName,""),this.fldDict.push("Arr_"+this.arrLstCPFields[2][t].ComponentName,e),this.fldDict["Arr_"+this.arrLstCPFields[2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[2][t].dArrear).ToString(i.a.SessionManager.sPayrollDecimals)),e=new o.c("Adj_"+this.arrLstCPFields[2][t].ComponentName,""),this.fldDict.push("Adj_"+this.arrLstCPFields[2][t].ComponentName,e),this.fldDict["Adj_"+this.arrLstCPFields[2][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[2][t].dAdjusted).ToString(i.a.SessionManager.sPayrollDecimals)));for(let t=0;t<this.arrLstCPFields[4].length;t++)""!=this.arrLstCPFields[4][t].SNo.toString()&&(e=new o.c(this.arrLstCPFields[4][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[4][t].ComponentName,e),e=new o.c(this.arrLstCPFields[4][t].ComponentName+"BalAmt",""),this.fldDict.push(this.arrLstCPFields[4][t].ComponentName+"BalAmt",e)),1==this.arrLstCPFields[4][t].IsVisible&&null!=this.arrLstCPFields[4][t].LoanInstAmt&&""!=this.arrLstCPFields[4][t].LoanInstAmt.toString()&&parseFloat(this.arrLstCPFields[4][t].LoanInstAmt)>0?(this.fldDict[this.arrLstCPFields[4][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[4][t].LoanInstAmt).ToString(i.a.SessionManager.sPayrollDecimals)),this.fldDict[this.arrLstCPFields[4][t].ComponentName+"BalAmt"].setFieldValue(parseFloat(this.arrLstCPFields[4][t].LoanBalAmt).ToString(i.a.SessionManager.sPayrollDecimals))):(this.fldDict[this.arrLstCPFields[4][t].ComponentName].setFieldValue(0),this.fldDict[this.arrLstCPFields[4][t].ComponentName+"BalAmt"].setFieldValue(0));for(let t=0;t<this.arrLstCPFields[5].length;t++)""!=this.arrLstCPFields[5][t].SNo.toString()&&(e=new o.c(this.arrLstCPFields[5][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[5][t].ComponentName,e),this.fldDict[this.arrLstCPFields[5][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[5][t].LeaveTaken).ToString(i.a.SessionManager.sPayrollDecimals2)),e=new o.c(this.arrLstCPFields[5][t].ComponentName+"_Bal",""),this.fldDict.push(this.arrLstCPFields[5][t].ComponentName+"_Bal",e),this.fldDict[this.arrLstCPFields[5][t].ComponentName+"_Bal"].setFieldValue(parseFloat(this.arrLstCPFields[5][t].LeaveTotOPBal).ToString(i.a.SessionManager.sPayrollDecimals2)));for(let t=0;t<this.arrLstCPFields[6].length;t++)""!=this.arrLstCPFields[6][t].SNo.toString()&&(e=new o.c(this.arrLstCPFields[6][t].ComponentName,""),this.fldDict.push(this.arrLstCPFields[6][t].ComponentName,e),this.fldDict[this.arrLstCPFields[6][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[6][t].dEarned).ToString(i.a.SessionManager.sPayrollDecimals)));let T=this.fldDict;for(let a=0;a<this.arrLstCPFields[0].length;a++)""!=this.arrLstCPFields[0][a].SNo.toString()&&null!=this.arrLstCPFields[0][a].Formula&&""!=this.arrLstCPFields[0][a].Formula&&(this.arrLstCPFields[0][a].dEarned=parseFloat(i.a.eval.EvaluateExpression(this.arrLstCPFields[0][a].Formula,T)).ToString(i.a.SessionManager.sPayrollDecimals).Replace(",",""),this.fldDict["Calc"+this.arrLstCPFields[0][a].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[0][a].dEarned).ToString(i.a.SessionManager.sPayrollDecimals)),t&&"Formula"==this.arrLstCPFields[0][a].FieldType&&(this.arrLstCPFields[0][a].dActual=this.arrLstCPFields[0][a].dEarned.Replace(",",""),this.fldDict[this.arrLstCPFields[0][a].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[0][a].dActual).ToString(i.a.SessionManager.sPayrollDecimals))));for(let t=0;t<this.arrLstCPFields[1].length;t++)""!=this.arrLstCPFields[1][t].SNo.toString()&&null!=this.arrLstCPFields[1][t].Formula&&""!=this.arrLstCPFields[1][t].Formula&&(this.arrLstCPFields[1][t].dEarned=parseFloat(i.a.eval.EvaluateExpression(this.arrLstCPFields[1][t].Formula,T)).ToString(i.a.SessionManager.sPayrollDecimals).Replace(",",""),this.fldDict["Calc"+this.arrLstCPFields[1][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[1][t].dEarned).ToString(i.a.SessionManager.sPayrollDecimals)));for(let a=0;a<this.arrLstCPFields[2].length;a++)""!=this.arrLstCPFields[2][a].SNo.toString()&&null!=this.arrLstCPFields[2][a].Formula&&""!=this.arrLstCPFields[2][a].Formula&&("ESI"==this.arrLstCPFields[2][a].ComponentName?this.arrLstCPFields[2][a].dEarned=Math.ceil(parseFloat(i.a.eval.EvaluateExpression(this.arrLstCPFields[2][a].Formula,T))).ToString(i.a.SessionManager.sPayrollDecimals).Replace(",",""):(s=parseFloat(i.a.eval.EvaluateExpression(this.arrLstCPFields[2][a].Formula,T)).ToString(i.a.SessionManager.sPayrollDecimals),"PT"==this.arrLstCPFields[2][a].ComponentName?(this.othMPField.dPTApplicableAmt=parseFloat(s),this.arrLstCPFields[2][a].dEarned=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals)):this.arrLstCPFields[2][a].dEarned=parseFloat(s).ToString(i.a.SessionManager.sPayrollDecimals).Replace(",",""),this.fldDict["Calc"+this.arrLstCPFields[2][a].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[2][a].dEarned).ToString(i.a.SessionManager.sPayrollDecimals))),t&&"Formula"==this.arrLstCPFields[2][a].FieldType&&(this.arrLstCPFields[2][a].dActual="PT"==this.arrLstCPFields[2][a].ComponentName?i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals):this.arrLstCPFields[2][a].dEarned.Replace(",",""),this.fldDict[this.arrLstCPFields[2][a].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[2][a].dActual).ToString(i.a.SessionManager.sPayrollDecimals))));for(let t=0;t<this.arrLstCPFields[6].length;t++)""!=this.arrLstCPFields[6][t].SNo.toString()&&null!=this.arrLstCPFields[6][t].Formula&&""!=this.arrLstCPFields[6][t].Formula&&(this.arrLstCPFields[6][t].dEarned=parseFloat(i.a.eval.EvaluateExpression(this.arrLstCPFields[6][t].Formula,T)).ToString(i.a.SessionManager.sPayrollDecimals).Replace(",",""),this.fldDict[this.arrLstCPFields[6][t].ComponentName].setFieldValue(parseFloat(this.arrLstCPFields[6][t].dEarned).ToString(i.a.SessionManager.sPayrollDecimals)));Logger.InfoLog("CommonMonthlyPayroll::Exiting ExecuteFormulas()")}catch(e){Logger.ErrorLog("CommonMonthlyPayroll::EXCEPTION ExecuteFormulas()"+e.stack)}}CalculateWeeklyOffsFromDef(){Logger.InfoLog("CommonMonthlyPayroll::Entering CalculateWeeklyOffsFromDef()");let t=0;try{if(null!=this.dvWOffDef&&this.dvWOffDef.length>0){let e,s=1,i=this.othMPField.DateOfRelieve<this.PayrollMonthEnd?this.othMPField.DateOfRelieve:this.PayrollMonthEnd,l=this.othMPField.DateOfJoining>this.PayrollMonthStart?this.othMPField.DateOfJoining:this.PayrollMonthStart;for(;l<=i;){for(e=l.AddDays(6);l<=e&&l<=i;){if(a.e.StringIsNullOrEmpty(this.dvWOffDef[0]["Week"+s.toString()+"_W1"].toString())||l.getDay().toString().toLowerCase()!=this.dvWOffDef[0]["Week"+s.toString()+"_W1"].toString().toLowerCase()){if(!a.e.StringIsNullOrEmpty(this.dvWOffDef[0]["Week"+s.toString()+"_W2"].toString())&&l.getDay().toString().toLowerCase()==this.dvWOffDef[0]["Week"+s.toString()+"_W2"].toString().toLowerCase()){if(this.lstHolidays.Contains(l)){l=l.AddDays(1);continue}t++}}else{if(this.lstHolidays.Contains(l)){l=l.AddDays(1);continue}t++}l=l.AddDays(1)}s++}}Logger.InfoLog("CommonMonthlyPayroll::Exiting CalculateWeeklyOffsFromDef()")}catch(e){Logger.ErrorLog("CommonMonthlyPayroll::EXCEPTION CalculateWeeklyOffsFromDef()"+e.stack)}return t}GetLeavesTaken(t,e,s,a){Logger.InfoLog("CommonMonthlyPayroll::Entering GetLeavesTaken()"),a.dTaken=a.dAvail=0;let l=i.a.empService.GetLeavesTaken(this.sEmpSeqNo,t,e,s);null!=l&&l.Tables.length>0&&l.Tables[0].length>0&&(null!=l.Tables[0][0].LeavesTaken&&null!=l.Tables[0][0].LeavesTaken&&""!=l.Tables[0][0].LeavesTaken.toString()&&(a.dTaken=parseFloat(l.Tables[0][0].LeavesTaken)),null!=l.Tables[0][0].AvailableLeaves&&null!=l.Tables[0][0].AvailableLeaves&&""!=l.Tables[0][0].AvailableLeaves.toString()&&(a.dAvail=parseFloat(l.Tables[0][0].AvailableLeaves))),Logger.InfoLog("CommonMonthlyPayroll::Exiting GetLeavesTaken()")}GetUnpaidDays(){let t,e,s=0,l=0;if(this.othMPField.DateOfJoining.getDate(),this.PayrollMonth.DaysInMonth(),this.othMPField.DateOfJoining>this.PayrollMonthStart)if("Actual Days"!=i.a.SessionManager.Preferences.PayDays){let o=parseInt(i.a.SessionManager.Preferences.PayDays);for(t=this.PayrollMonthStart,e=this.othMPField.DateOfJoining;t<e;)t.getDate()!=t.DaysInMonth()?(t.getDate()>o||s++,t=t.AddDays(1)):(s+=o-t.getDate()+1,t=t.AddDays(1));if(this.othMPField.DateOfRelieve<this.PayrollMonthEnd)for(t=this.othMPField.DateOfRelieve.AddDays(1),e=this.PayrollMonthEnd;t<=e&&!(i.a.SessionManager.Preferences.ContainsKey("ConsiderUnpaidDaysBasedOnPayDays")&&"TRUE"==i.a.SessionManager.Preferences.ConsiderUnpaidDaysBasedOnPayDays.toString().toUpperCase()&&(l=a.e.GetDateDifference(t,this.PayrollMonthStart)+1,l>o));)t.getDate()!=t.DaysInMonth()?(t.getDate()>o||s++,t=t.AddDays(1)):(s+=o-t.getDate()+1,t=t.AddDays(1))}else s+=a.e.GetDateDifference(this.othMPField.DateOfJoining,this.PayrollMonthStart),this.othMPField.DateOfRelieve<this.PayrollMonthEnd&&(s+=a.e.GetDateDifference(this.PayrollMonthEnd,this.othMPField.DateOfRelieve));else if(this.othMPField.DateOfRelieve<this.PayrollMonthEnd)if("Actual Days"!=i.a.SessionManager.Preferences.PayDays){let o=parseInt(i.a.SessionManager.Preferences.PayDays);for(t=this.othMPField.DateOfRelieve.AddDays(1),e=this.PayrollMonthEnd;t<=e&&!(i.a.SessionManager.Preferences.ContainsKey("ConsiderUnpaidDaysBasedOnPayDays")&&"TRUE"==i.a.SessionManager.Preferences.ConsiderUnpaidDaysBasedOnPayDays.toString().toUpperCase()&&(l=a.e.GetDateDifference(t,this.PayrollMonthStart)+1,l>o));)t.getDate()!=t.DaysInMonth()?(t.getDate()>o||s++,t=t.AddDays(1)):(s+=o-t.getDate()+1,t=t.AddDays(1))}else s+=a.e.GetDateDifference(this.PayrollMonthEnd,this.othMPField.DateOfRelieve);return s}GetVacationAmountDetails(t){let e;Logger.InfoLog("CommonMonthlyPayroll::Entering GetVacationAmountDetails()"),this.arrLstVacAmountFields=new Array;let s,a=0,l=0;if(null!=t&&null!=t&&t.Tables.length>0&&t.Tables[2].length>0&&(this.dvStructure=t.Tables[2],this.dvEmpPay=t.Tables[3],e=t.Tables[4],null!=this.dvStructure&&this.dvStructure.length>0))for(let o=0;o<this.dvStructure.length;o++){if(this.oVacAmountField=new c,this.oVacAmountField.ID=parseInt(this.dvStructure[o].ID),this.oVacAmountField.SNo=parseInt(this.dvStructure[o].SNO),this.oVacAmountField.TypeId=parseInt(this.dvStructure[o].TYPEID),2==this.oVacAmountField.TypeId?(this.oVacAmountField.SName="Earning"+this.oVacAmountField.SNo,this.oVacAmountField.TypeName="Earnings"):3==this.oVacAmountField.TypeId?(this.oVacAmountField.SName="",this.oVacAmountField.TypeName="Deductions"):4==this.oVacAmountField.TypeId&&(this.oVacAmountField.SName="",this.oVacAmountField.TypeName="Loans"),this.oVacAmountField.EmpNode=parseInt(this.dvStructure[o].EMPNODE),this.oVacAmountField.ComponentID=parseInt(this.dvStructure[o].COMPONENTID),this.oVacAmountField.ComponentName=this.dvStructure[o].COMPONENTNAME.toString(),this.oVacAmountField.Percentage=parseFloat(this.dvStructure[o].PERCENTAGE).ToString(i.a.SessionManager.sPayrollDecimals),this.oVacAmountField.EnCash=parseInt(this.dvStructure[o].ENCASH),this.oVacAmountField.ExcessdaysSalary=parseInt(this.dvStructure[o].EXCESSDAYSSALARY),this.oVacAmountField.Formula=this.dvStructure[o].FORMULA.toString().replace("Field",this.dvStructure[o].COMPONENTNAME.toString()),this.oVacAmountField.ActualAmount="EMPLOYEE_BASIC"==this.oVacAmountField.ComponentName&&2==this.oVacAmountField.TypeId?parseFloat(this.dvEmpPay[0].BasicMonthly).ToString(i.a.SessionManager.sPayrollDecimals):"EMPLOYEE_BASIC"!=this.oVacAmountField.ComponentName.toString()&&2==this.oVacAmountField.TypeId?parseFloat(this.dvEmpPay[0]["Earning"+this.oVacAmountField.SNo]).ToString(i.a.SessionManager.sPayrollDecimals):i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.oVacAmountField.PercActualAmount=parseFloat(this.oVacAmountField.ActualAmount)>0&&parseFloat(this.oVacAmountField.Percentage)>0?(parseFloat(this.oVacAmountField.ActualAmount)*parseFloat(this.oVacAmountField.Percentage)/100).ToString(i.a.SessionManager.sPayrollDecimals):i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),a=l=0,-1==parseFloat(this.oVacAmountField.Percentage)){let t=i.a.empService.GetQueryData(1,"AllowencesData",this.iDocID,this.oVacAmountField.ComponentID,this.oVacAmountField.EmpNode);s&&t.length>0&&(l=parseFloat(t[0][Object.keys(s[0])[0]])),s=i.a.empService.GetQueryData(1,"AllowencesData1",this.oVacAmountField.SNo.toString(),this.oVacAmountField.EmpNode,""),s&&s.length>0&&(a=parseFloat(s[0][Object.keys(s[0])[0]])),this.oVacAmountField.ActualAmount=(a-l).ToString(i.a.SessionManager.sPayrollDecimals)}else-3==parseFloat(this.oVacAmountField.Percentage)&&(s=i.a.empService.GetQueryData(1,"AllowencesData2",this.oVacAmountField.SNo.toString(),this.oVacAmountField.EmpNode,""),s&&s.length>0&&(a=parseFloat(s[0][Object.keys(s[0])[0]])),this.oVacAmountField.ActualAmount=a.ToString(i.a.SessionManager.sPayrollDecimals));4==this.oVacAmountField.TypeId?(e.RowFilter="",null!=e&&e.length>0&&(e.RowFilter="LoanTypeID="+this.oVacAmountField.ComponentID,e.length>0&&(this.oVacAmountField.Amount=parseFloat(e[0].LoanAmount).ToString(i.a.SessionManager.sPayrollDecimals),this.oVacAmountField.ActualAmount=parseFloat(e[0].LoanAmount).ToString(i.a.SessionManager.sPayrollDecimals)))):this.oVacAmountField.Amount=i.a.SessionManager.Round(0,i.a.SessionManager.sPayrollDecimals),this.arrLstVacAmountFields.push(this.oVacAmountField)}Logger.InfoLog("CommonMonthlyPayroll::Exiting GetVacationAmountDetails()")}}},"SW+i":function(t,e,s){"use strict";s.r(e),s.d(e,"VPTDialogComponent",(function(){return d}));var i=s("Do2H"),a=s("fXoL"),l=s("sYmb");function o(t,e){if(1&t){const t=a.ac();a.Zb(0,"div",15),a.Wc(1,"\n                "),a.Zb(2,"input",12),a.hc("change",(function(){a.Ic(t);const e=a.lc(2);return e.obj.IsExcelChecked=!e.obj.IsExcelChecked})),a.Yb(),a.Wc(3,"\n                "),a.Zb(4,"label",13),a.Wc(5),a.mc(6,"translate"),a.Yb(),a.Wc(7,"\n            "),a.Yb()}if(2&t){const t=a.lc(2);a.Db(2),a.tc("checked",t.obj.IsExcelChecked)("value",t.obj.IsExcelChecked),a.Db(3),a.Xc(a.nc(6,3,"Cbo_Excel"))}}function n(t,e){if(1&t){const t=a.ac();a.Zb(0,"div",9),a.Wc(1,"\n            "),a.Zb(2,"label",10),a.Wc(3),a.mc(4,"translate"),a.Yb(),a.Wc(5,"\n            "),a.Zb(6,"div",11),a.Wc(7,"\n                "),a.Zb(8,"input",12),a.hc("change",(function(){a.Ic(t);const e=a.lc();return e.obj.IsPDFChecked=!e.obj.IsPDFChecked})),a.Yb(),a.Wc(9,"\n                "),a.Zb(10,"label",13),a.Wc(11),a.mc(12,"translate"),a.Yb(),a.Wc(13,"\n            "),a.Yb(),a.Wc(14,"\n            "),a.Uc(15,o,8,5,"div",14),a.Wc(16,"\n        "),a.Yb()}if(2&t){const t=a.lc();a.Db(3),a.Xc(a.nc(4,5,"Format_Format")),a.Db(5),a.tc("checked",t.obj.IsPDFChecked)("value",t.obj.IsPDFChecked),a.Db(3),a.Xc(a.nc(12,7,"Cbo_PDF")),a.Db(4),a.tc("ngIf",t.obj.IsExcelVisible)}}function r(t,e){if(1&t&&(a.Zb(0,"div",16),a.Wc(1,"\n            "),a.Vb(2,17),a.Wc(3,"\n        "),a.Yb()),2&t){const t=a.lc();a.Db(2),a.tc("obj",t.obj.Layouts)("group",t.form)}}let d=(()=>{class t{constructor(t){this.translate=t}get IsMobile(){return i.a.IsMobile}ngOnInit(){}}return t.\u0275fac=function(e){return new(e||t)(a.Tb(l.e))},t.\u0275cmp=a.Nb({type:t,selectors:[["app-vptdialog"]],inputs:{obj:"obj"},decls:27,vars:10,consts:[[1,"master-screen",2,"padding-bottom","4px!important"],[1,"PACTHeaderFields","dialogSubBody"],["class","form-group row form-row col-xl-12 col-md-12 col-sm-12 col-xs-12 PACTControl","style","flex-direction: row;",4,"ngIf"],["class","form-group row form-row col-xl-12 col-md-12 col-sm-12 col-xs-12 PACTControl",4,"ngIf"],[1,"Pactdailogfooter"],[1,"primary-btn-wicon",3,"click"],[1,"fa-light","fa-circle-check"],[1,"secondary-btn-wicon",3,"click"],[1,"fa-light","fa-rectangle-xmark"],[1,"form-group","row","form-row","col-xl-12","col-md-12","col-sm-12","col-xs-12","PACTControl",2,"flex-direction","row"],[1,"input_cntrl_label",2,"width","90px"],[1,"divRadio",2,"margin-right","10px","width","60px"],["type","radio","name","FORMAT",2,"height","20px !important",3,"checked","value","change"],[1,"input_cntrl_label",2,"padding","3px"],["class","divRadio","style"," width: 80px;",4,"ngIf"],[1,"divRadio",2,"width","80px"],[1,"form-group","row","form-row","col-xl-12","col-md-12","col-sm-12","col-xs-12","PACTControl"],["FieldDirective","",3,"obj","group"]],template:function(t,e){1&t&&(a.Zb(0,"div",0),a.Wc(1,"\n    "),a.Zb(2,"div",1),a.Wc(3,"\n        "),a.Wc(4,"\n        "),a.Uc(5,n,17,9,"div",2),a.Wc(6,"\n        "),a.Uc(7,r,4,2,"div",3),a.Wc(8,"\n    "),a.Yb(),a.Wc(9,"\n    "),a.Zb(10,"div",4),a.Wc(11,"\n      "),a.Zb(12,"div"),a.Wc(13,"\n        "),a.Zb(14,"button",5),a.hc("click",(function(){return e.obj.OnButtonClick("OK")})),a.Ub(15,"i",6),a.Wc(16),a.mc(17,"translate"),a.Yb(),a.Wc(18,"\n        "),a.Zb(19,"button",7),a.hc("click",(function(){return e.obj.OnButtonClick("Cancel")})),a.Ub(20,"i",8),a.Wc(21),a.mc(22,"translate"),a.Yb(),a.Wc(23,"\n      "),a.Yb(),a.Wc(24,"\n  "),a.Yb(),a.Wc(25,"\n"),a.Yb(),a.Wc(26,"\n")),2&t&&(a.Sc("width",e.IsMobile?"100%":"485px"),a.Db(5),a.tc("ngIf",e.obj.stkFormat),a.Db(2),a.tc("ngIf",e.obj.Layouts.Visible),a.Db(9),a.Xc(a.nc(17,6,"Com_OK")),a.Db(5),a.Xc(a.nc(22,8,"Cancel")))},encapsulation:2}),t})()},ia84:function(t,e,s){"use strict";s.r(e),s.d(e,"PactQueryListBoxData",(function(){return d})),s.d(e,"VPTDialogViewModel",(function(){return h}));var i=s("Do2H"),a=s("Lp6j"),l=s("ScVY"),o=s("0/4Q"),n=s("MCLT"),r=s("n56n");class d extends r.b{constructor(t){super(t)}}class h extends l.b{constructor(t,e=!1,s=!1){super(),this.IsOkClicked=!1,this.SelectedRow=null,this.iQty=0,this.Qty="1",this.stkFormat=!1,this.IsFromProductMast=!1,this._IsExcelChecked=!1,this.sDSCUserName="",this.IsExport=!1,this.DSCUserNameVisibility=!1,this.IsExcelVisible=!1,this._IsPDFChecked=!0,this.ShowAuditPrints=!1,this._AuditPrintsLabel="",this.IsExcelVisible=!0,this.dtLayouts=t,this.IsFromProductMast=s,this.IsExport=e,e?(this.lblTitle=i.a.GetResource("lbl_Export"),this.stkFormat=!0,i.a.SessionManager.PersonalSettings.ContainsKey("VPTExportType")&&("Excel"==i.a.SessionManager.PersonalSettings.VPTExportType?this.IsExcelChecked=!0:this.IsPDFChecked=!0)):(this.lblTitle=i.a.GetResource("Print"),this.stkFormat=!1),this.Title=this.lblTitle,this.Layouts=new o.e,this.Uom=new o.e,this.Uom.Visible=!1,this.Layouts.LblWidth="90",this.Layouts.Label=i.a.GetResource("VPDesigner_Title");let a=t[0],l=t.sort((t,e)=>t.Name>e.Name?1:-1);this.strPKID=Object(n.isUndefined)(t[0].BarcodeLayoutID)?"DocPrintLayoutID":"BarcodeLayoutID",l.forEach(t=>{Object(n.isNullOrUndefined)(t.Copies)?this.Layouts.Items.push(o.d.ComboBoxItems_3(t.Name.toString(),t[this.strPKID].toString(),"")):this.Layouts.Items.push(o.d.ComboBoxItems_3(t.Name.toString(),t[this.strPKID].toString(),"Copies Printed :  "+t.Copies.toString()))}),this.Layouts.Items.length>0&&(this.Layouts.SelectedValue=a[this.strPKID].toString()),this.Layouts.SelectionChangedCommand.Subscribe(this,"OnLayoutChanged"),this.OnLayoutChanged(null)}get IsExcelChecked(){return this._IsExcelChecked}set IsExcelChecked(t){t!=this._IsExcelChecked&&(this._IsExcelChecked=t,t&&(a.e.SetPersonalize("VPTExportType","Excel"),this._IsPDFChecked=!1,this.LoadDSCUserNames()))}get IsPDFChecked(){return this._IsPDFChecked}set IsPDFChecked(t){t!=this._IsPDFChecked&&(this._IsPDFChecked=t,t&&(a.e.SetPersonalize("VPTExportType","PDF"),this._IsExcelChecked=!1,this.LoadDSCUserNames()))}get AuditPrintsLabel(){return this._AuditPrintsLabel}set AuditPrintsLabel(t){t!=this._AuditPrintsLabel&&(this.Title=this.lblTitle+t,this._AuditPrintsLabel=t,this.ShowAuditPrints=!a.e.IsEmpty(t))}OnButtonClick(t){if("Cancel"==t)this.IsOkClicked=!1,i.a.page.HideDialog();else if("OK"==t&&null!=this.Layouts.SelectedValue){let t=this.dtLayouts.filter(t=>t[this.strPKID]==this.Layouts.SelectedValue);t.length>0&&(this.IsOkClicked=!0,this.iQty=this.IsFromProductMast?a.e.Int(this.Qty):0,this.SelectedRow=t[0],i.a.page.HideDialog())}}OnLayoutChanged(t){if(null!=this.Layouts.SelectedValue){let t=this.Layouts.GetselectedItem();this.AuditPrintsLabel=t.Parent,this.LoadDSCUserNames()}}LoadDSCUserNames(){}RefreshCertificates(){}}}}]);